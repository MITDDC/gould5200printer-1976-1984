	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 1
	GLPT;GLDMUX 21	PAGE 1 	

     1					.TITLE TERMINAL MULTIPEXER AND GOULD DRIVER
     2					
     3					
     4					; %%%% REGISTER %%%%
     5					
     6		000000			R0=%0
     7		000001			R1=%1
     8		000002			R2=%2
     9		000003			R3=%3
    10		000004			R4=%4
    11		000005			R5=%5
    12		000006			SP=%6
    13		000007			PC=%7
    14					
    15					; %%%% MISCELLANEOUS CONSTANT DEFINITIONS
    16					
    17		000006			MXTTTY==6		; MAXIMUM NUMBER OF TERMINALS THIS ASSEMBLY
    18		000004			MAXTTY==4		; MAXIMUM NUMBER OF CHANNELS SUPPORTED CURRENT ITS ASSEMBLY
    19		000002			MXRTTY==2		; NUMBER OF DL-11 TYPE TTY INTERFACES
    20		000002			MXATTY==2		; NUMBER OF ANN ARBOR TERMINALS
    21		000340			PRIOR0==7_5		; MASK FOR BIC APPLIED TO PS
    22		000340			PRIOR7==7_5		; MASK FOR BIS APPLIED TO PS
    23		000007			CG==7			; <CNTL>-G
    24		000034			CBSL==34		; <CNTL>-\
    25		000240			NOPIN==240		; NOP INSTRUCTION
    26		000001			WAITIN==1		; WAIT INSTRUCTION
    27		000410			LBUFL==410	; MAXIMUM SIZE OF A LINE BUFFER (IN BYTES)
    28		000024			TMPLEN==24	; LENGTH OF TEMPORARY STRING BUFFERS
    29		177600			STRIP==177600	; BIT IN BUFFER WORD WHICH INDICATED STRIPED GRAPHICS
    30		177400			LHS==177400	; LEFT HAND SIDE OF WORD MASK
    31		000030			GLDTIM==30	; TIME (IN 30TH'S OF SECOND) FOR SMEAR TIMEOUT
    32		137472			CORLIM==137472	; LIMIT OF USABLE CORE (24K-LOADERS)
    33					
    34					; %%%% CONSTANTS FOR INITIALIZATION OF NON-STANDARD DEVICES %%%%
    35					
    36		000000			DR11MI==0
    37		000100			KEYBDI==100
    38		000000			DGVUEI==0
    39		000000			IMLACI==0
    40					
    41					
    42					; %%%% RECEIVE BUFFER PARAMETERS %%%%
    43		000300			RIBFLN==300
    44		000300			ROBFLN==300
    45		001400			AABFLN==<2*ROBFLN>*MXATTY
    46					
    47					
    48		000276			ALCMAX==276	; MAXIMUM PERMISSABLE ALLOCATION
    49							; 2 CHARACTERS LESS THAN BUFFER SIZE, ONE TO ALLOW
    50							; FOR ^G INSERTION AND ONE FOR PATHOLOGICAL FENCEPOST
    51							; INTERACTIONS
    52					
    53		000137			ALCLIM==ALCMAX/2	; AT THIS POINT, ADD TO ALLOCATION
    54		000137			ALCINC==ALCMAX/2	; THIS IS HOW MUCH TO INCREMENT THE ALLOCATION BY
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 2
	GLPT;GLDMUX 21	PAGE 1.1 	

    55					
    56					; GOULD COMMAND CODES
    57		000000			 %GCFF==0	; TOP-OF-FORM COMMAND (256 RASTERS ON ROLL PAPER)
    58		000001			 %GCGRF==1	; GRAPHIC MODE COMMAND
    59		000002			 %GCCUT==2	; CUT COMMAND (NO CUTTER ON THIS MACHINE, THOUGH)
    60		000003			 %GCON==3	; TURN PRINTER ON
    61		000004			 %GCOFF==4	; TURN PRINTER OFF
    62		000005			 %GCLSL==5	; LAST LINE (GRAPHIC MODE).  => 2 MORE SCAN LINES.
    63		000006			 %GCION==6	; INTERRUPT ON
    64		000007			 %GCIOF==7	; INTERRUPT OFF
    65		000200			 %GCHOM==200	; HOME (128 RASTER UNITS)
    66		000201			 %GCADV==201	; ADVANCE ONE LINE
    67					
    68					; PSEUDO COMMAND CODES
    69					
    70		000300			 %GCSRP==300	; START OF REPEAT
    71		000301			 %GCERP==301	; END OF REPEAT
    72					
    73					
    74					; MACRO COMMAND CODES
    75					
    76		140000			 SLALPH==140000	; SELECT ALPHA MODE
    77		150000			 SLLGRF==150000	; SELECT LOW SPEED GRAPHICS MODE
    78		160000			 SLHGRF==160000	; SELECT HIGH SPEED GRAPHICS MODE
    79		170000			 SLEOF==170000	; EOF (TAIL SHEET HACKERY)
    80					
    81					; GOULD STATUS BITS
    82		000400			 %GSNRD==400	; NOT READY (INTERLOCK TRIPPED)
    83		002000			 %GSDON==2000	; DMA TRANSFER COMPLETE
    84		004000			 %GSBSY==4000	; BUSY (PAPER MOVEMENT, SYSTEM BEING RESET, ETC.)
    85		010000			 %GSVAC==10000	; VACUUM FAULT
    86		020000			 %GSPAP==20000	; PAPER LOW
    87		040000			 %GSTIM==40000	; HIGH SPEED GRAPHICS TIMEOUT
    88		060400			 %GSERR==60400	; ALL ERROR BITS EXCEPT PAPER LOW
    89					
    90					
    91					
    92					;  SPECIAL GOULD COMMUNICATION BYTE CODES
    93					
    94		000205			%CCSOD=205	; ESCAPE FOR BEGINNING OF DATA
    95		000206			%CCEOD=206	; ESCAPE FOR END OF DATA
    96		000215			%CCQOT=215	; TO QUOTE 8 BIT CODES IN GRAPHICS MODE
    97		000301			%CCACK=301	; ARE WE BEING PAGED?
    98					
    99					
   100					; %%%% TRANSMIT BUFFER PARAMETERS %%%%
   101					
   102		000040			TIBFLN==40
   103		000230			TOBFLN==MAXTTY*<40+6>
   104					
   105					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 3
	GLPT;GLDMUX 21	PAGE 1.2 	%%%% INTERFACE DEFINITIONS %%%%

   106					.SBTTL %%%% INTERFACE DEFINITIONS %%%%
   107					
   108					; DEC INTERFACES
   109					
   110		177560			%CRCSR==177560			; CONSOLE TTY
   111		177562			%CRBUF==177562
   112		177564			%CXCSR==177564
   113		177566			%CXBUF==177566
   114		175610			%DRCSR==175610			; DL-11E 40 KBAUD
   115		175612			%DRBUF==175612
   116		175614			%DXCSR==175614
   117		175616			%DXBUF==175616
   118		175620			%ERCSR==175620			; DL-11E 9600 BAUD
   119		175622			%ERBUF==175622
   120		175624			%EXCSR==175624
   121		175626			%EXBUF==175626
   122		175630			%FRCSR==175630			; DL-11E 9600 BAUD
   123		175632			%FRBUF==175632
   124		175634			%FXCSR==175634
   125		175636			%FXBUF==175636
   126					
   127		167760			%LRCS1==167760			; DR-11L SIDE 1
   128		167762			%LRBF1==167762
   129		167764			%LRCS2==167764			; DR-11L SIDE 2
   130		167766			%LRBF2==167766
   131		167770			%MXCS1==167770			; DR-11M SIDE 1
   132		167772			%MXBF1==167772
   133		167774			%MXCS2==167774			; DR-11M SIDE 2
   134		167776			%MXBF2==167776
   135					
   136					
   137					; HOME BREW HARDWARE
   138					
   139							; ANN ARBOR MULTIPLEXOR
   140		167770			%AACS==%MXCS1
   141		167772			%AABF==%MXBF1
   142					
   143							; KEYBOARD MULTIPLEXOR
   144		167760			%KYSTA==%LRCS1		; STATUS REGISTER
   145		167762			%KYBUF==%LRBF1		; BUFFER REGISTER
   146					
   147							; DIGIVUE PLASMA DISPLAY
   148		167764			%DGRCS==%LRCS2		; RECEIVE
   149		167766			%DGRBF==%LRBF2
   150		167774			%DGXCS==%MXCS2		; TRANSMIT
   151		167776			%DGXBF==%MXBF2
   152					
   153					
   154					; COMMERCIAL INTERFACES
   155					
   156							; GOULD ELECTROSTATIC PRINTER PLOTTER
   157		166000			%GLCSR=166000		; COMMAND AND STATUS REGISTER
   158		166002			%GLWC=166002		; NEGATIVE WORD COUNT REG
   159		166004			%GLCA=166004		; CURRENT ADDRESS REG
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 4
	GLPT;GLDMUX 21	PAGE 1.3 	%%%% INTERFACE DEFINITIONS %%%%

   160					
   161					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 5
	GLPT;GLDMUX 21	PAGE 1.4 	%%%% DEVICE AND TTY DEFINITIONS %%%%

   162					.SBTTL %%%% DEVICE AND TTY DEFINITIONS %%%%
   163					
   164					
   165		175610			RDST0==%DRCSR		; DEVICE 0 -> DL-11 CONNECTED TO PDP-10
   166		175612			RDBF0==%DRBUF
   167		175614			XDST0==%DXCSR
   168		175616			XDBF0==%DXBUF
   169					
   170					
   171		175620			RTST0==%ERCSR		; TTY 0 -> DL-11 CONNECTED TO IMLAC
   172		175622			RTBF0==%ERBUF
   173		175624			XTST0==%EXCSR
   174		175626			XTBF0==%EXBUF
   175					
   176		177560			RTST1==%CRCSR		; TTY 1 -> CONSOLE TTY, CONNECTED TO TEKTRONIX
   177		177562			RTBF1==%CRBUF		; (NO CHARACTER RECEPTION STATUS BITS)
   178		177564			XTST1==%CXCSR
   179		177566			XTBF1==%CXBUF
   180					
   181		167764			DGRSTA==%DGRCS		; TTY 2 -> PLASMA DISPLAY
   182		167766			DGRBUF==%DGRBF
   183		167774			DGXSTA==%DGXCS
   184		167776			DGXBUF==%DGXBF
   185					
   186					
   187		166000			GLDCSR==%GLCSR		; TTY 3 -> GOULD LINE PRINTER (SPECIAL HARDWARE REGISTERS)
   188		166002			GLDWC==%GLWC
   189		166004			GLDCA==%GLCA
   190					
   191								; TTY 4 -> ANN ARBOR TERMINAL #1, SERVICED BY MULTIPLEXOR
   192					
   193								; TTY 5 -> ANN ARBOR TERMINAL #2, SERVICED BY MULTIPLEXOR
   194					
   195					; SPECIAL DEVICES
   196					
   197		167760			KEYSTA==%KYSTA		; KEYBOARD MULTIPLEXOR
   198		167762			KEYBUF==%KYBUF
   199					
   200		167770			AAMSTA==%AACS		; ANN ARBOR DISPLAY MULTIPLEXOR
   201		167772			AAMBUF==%AABF
   202					
   203					
   204					
   205					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 6
	GLPT;GLDMUX 21	PAGE 1.5 	TABLE OFFSET DEFINITIONS

   206					.SBTTL TABLE OFFSET DEFINITIONS
   207					
   208					; %%%% RECEIVE STATUS TABLE OFFSETS %%%%
   209		000000			RI.PTR==0
   210		000002			RI.END==2
   211		000004			RI.BEG==4
   212		000006			RI.LIM==6
   213		000010			RI.FLG==10
   214		000012			RO.PTR==12
   215		000014			RO.END==14
   216		000016			RO.BEG==16
   217		000020			RO.LIM==20
   218		000022			AL.FLG==22
   219		000025			TTYNUM==25
   220		000030			RI.BLK==30
   221		000032			RO.BLK==32
   222		000034			MR.BLK==34
   223		000036			CG.BLK==36
   224		000040			R.FLGS==40
   225		000042			RS.PTR==42
   226		000044			RS.CNT==44
   227					
   228					; %%%% ANN ARBOR STATUS TABLE OFFSETS
   229					
   230		000000			AA.PTR==0
   231		000002			AA.END==2
   232		000004			AA.BEG==4
   233		000006			AA.LIM==6
   234		000010			AA.BLK==10
   235					
   236					; %%%% TRANSMIT STATUS TABLE OFFSETS %%%%
   237					
   238		000000			TI.PTR==0
   239		000002			TI.END==2
   240		000004			TI.BEG==4
   241		000006			TI.LIM==6
   242		000010			TI.FLG==10
   243		000012			TO.PTR==12
   244		000014			TO.END==14
   245		000016			TO.BEG==16
   246		000020			TO.LIM==20
   247		000022			CG.FLG==22
   248		000025			TTYNUM==25
   249		000030			TI.BLK==30
   250		000032			TO.BLK==32
   251		000034			MT.BLK==34
   252		000036			AL.BLK==36
   253		000040			T.FLGS==40
   254		000042			TS.PTR==42
   255		000044			TS.CNT==44
   256					
   257					; %%%% TRANSMIT OUTPUT DEVICE STATUS OFFSETS %%%%
   258					
   259		000000			OD.PTR==0
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 7
	GLPT;GLDMUX 21	PAGE 1.6 	TABLE OFFSET DEFINITIONS

   260		000002			OD.END==2
   261		000004			OD.BEG==4
   262		000006			OD.LIM==6
   263		000010			OD.BLK==10
   264					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 8
	GLPT;GLDMUX 21	PAGE 1.7 	; %%%% INTERRUPT AND TRAP VECTORS %%%%

   265					.SBTTL ; %%%% INTERRUPT AND TRAP VECTORS %%%%
   266					
   267		000004			%ERRV=4
   268		000010			%ILIV=10
   269		000014			%BPTV=14
   270		000020			%IOTV=20
   271		000024			%PWRV=24
   272		000030			%EMTV=30
   273		000034			%TRPV=34
   274		000060			%CLRV=60
   275		000064			%CLXV=64
   276		000100			%LKV=100
   277		000174			%GLDV=174
   278		000200			%KEYV=200
   279		000204			%DIGRV=204
   280		000210			%AAMV=210
   281		000214			%DIGXV=214
   282		000300			%DLRV=300
   283		000304			%DLXV=304
   284		000310			%ELRV=310
   285		000314			%ELXV=314
   286		000320			%FLRV=320
   287		000324			%FLXV=324
   288					
   289					
   290		000340			%MSTR==340	; MASTER PRIORITY, NO CONDITION CODES SET
   291					
   292						; THESE GIVE MASTER PRIORITY WITH CONDITION CODE BITS SET TO
   293						; NOTIFY THE UNEXPECTED TRAP HANDLER WHICH STATE WAS RAISED
   294						; IDEALLY THEY SHOULD NEVER HAVE TO BE USED
   295					
   296		000341			%MSTR1==341
   297		000342			%MSTR2==342
   298		000343			%MSTR3==343
   299		000344			%MSTR4==344
   300		000345			%MSTR5==345
   301		000346			%MSTR6==346
   302		000347			%MSTR7==347
   303					
   304		000200			%CLRPR=200		; PRI 4, (DEVICE AT BR4)
   305		000200			%CLTPR=200		; PRI 4, (DEVICE AT BR4)
   306		000200			%KEYPR=200		; PRI 4, (DEVICE AT BR4)
   307		000200			%DGRPR=%KEYPR
   308		000200			%AAMPR=200		; PRI 4, (DEVICE AT BR4)
   309		000200			%DGXPR=%AAMPR		; PRI 4, (DEVICE AT BR4)
   310		000200			%ELRPR=200		; PRI 4, (DEVICE AT BR4)
   311		000200			%ELXPR=200		; PRI 4, (DEVICE AT BR4)
   312		000200			%FLRPR=200		; PRI 4, (DEVICE AT BR4)
   313		000200			%FLXPR=200		; PRI 4, (DEVICE AT BR4)
   314		000240			%GLDPR=240		; PRI 5, (DEVICE AT BR5)
   315		000300			%DLRPR=300		; PRI 6, (DEVICE AT BR6)
   316		000300			%DLXPR=300		; PRI 6, (DEVICE AT BR6)
   317		000300			%LKPR=300		; PRI 6, (DEVICE AT PSEUDO BR6)
   318					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 9
	GLPT;GLDMUX 21	PAGE 1.8 	; %%%% INTERRUPT AND TRAP VECTORS %%%%

   319		000004			.=%ERRV
   320	000004	003324				CPUERR			; CPU ERROR
   321	000006	000341				%MSTR1
   322		000010			.=%ILIV
   323	000010	003324				ILLOPR			; ILLEGAL INSTRUCTIONS
   324	000012	000342				%MSTR2
   325		000014			.=%BPTV
   326	000014	003324				BPTTRP			; BREAKPOINT TRAP
   327	000016	000343				%MSTR3
   328		000020			.=%IOTV
   329	000020	003324				IOTTRP			; IOT TRAP
   330	000022	000344				%MSTR4
   331		000024			.=%PWRV
   332	000024	003462				POWROF			; POWER FAIL - RESTART
   333	000026	000340				%MSTR
   334		000030			.=%EMTV
   335	000030	003324				EMTTRP			; EMULATOR TRAP
   336	000032	000345				%MSTR5
   337		000034			.=%TRPV
   338	000034	003324				UUOH			; TRAP INSTRUCTION
   339	000036	000346				%MSTR6
   340		000060			.=%CLRV
   341	000060	003200				INRT1			; CONSOLE RECEIVED CHARACTER
   342	000062	000200				%CLRPR
   343		000064			.=%CLXV
   344	000064	003252				INTT1			; CONSOLE TRANSMITTED CHARACTER
   345	000066	000200				%CLTPR
   346		000100			.=%LKV
   347	000100	003326				CLKHND			; LINE FREQUENCY CLOCK
   348	000102	000300				%LKPR
   349		000174			.=%GLDV
   350	000174	004540				GLDINT			; GOULD INTERRUPT
   351	000176	000240				%GLDPR
   352		000200			.=%KEYV
   353	000200	004314				KEYINT			; KEYBOARD MULTIPLEXOR
   354	000202	000200				%KEYPR
   355		000204			.=%DIGRV
   356	000204	005470				DGRINT			; DIGIVUE RECEIVE
   357	000206	000200				%DGRPR
   358		000210			.=%AAMV
   359	000210	005360				AAMINT			; ANN ARBOR TERMINAL MULTIPLEXOR
   360	000212	000200				%AAMPR
   361		000214			.=%DIGXV
   362	000214	005472				DGXINT			; DIGIVUE TRANSMIT
   363	000216	000200				%DGXPR
   364		000300			.=%DLRV
   365	000300	003512				INRD0			; DL-11 #1 RECEIVED CHARACTER
   366	000302	000300				%DLRPR
   367		000304			.=%DLXV
   368	000304	003736				INTD0			; DL-11 #1 TRANSMITTED CHARACTER
   369	000306	000300				%DLXPR
   370		000310			.=%ELRV
   371	000310	003162				INRT0			; DL-11 #2 RECEIVED CHARACTER
   372	000312	000200				%ELRPR
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 10
	GLPT;GLDMUX 21	PAGE 1.9 	; %%%% INTERRUPT AND TRAP VECTORS %%%%

   373		000314			.=%ELXV
   374	000314	003234				INTT0			; DL-11 #2 TRANSMITTED CHARACTER
   375	000316	000200				%ELXPR
   376		000320			.=%FLRV
   377	000320	003162				INRT0			; DL-11 #3 RECEIVED CHARACTER
   378	000322	000200				%FLRPR
   379		000324			.=%FLXV
   380	000324	003234				INTT0			; DL-11 #3 TRANSMITTED CHARACTER
   381	000326	000200				%FLXPR
   382					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 11
	GLPT;GLDMUX 21	PAGE 1.10 	TABLE AND VARIABLE DEFINITION MACROS

   383					.SBTTL TABLE AND VARIABLE DEFINITION MACROS
   384					; %%%% UTILITY MACROS %%%%
   385					
   386					
   387					.MACRO PUSH X
   388					.IRP Y,<X>
   389						MOV Y,-(SP)
   390					.ENDM
   391					.ENDM
   392					
   393					
   394					.MACRO POP X
   395					.IRP Y,<X>
   396						MOV (SP)+,Y
   397					.ENDM
   398					.ENDM
   399					
   400					
   401					.MACRO MASK LEVEL
   402						PUSH %PS
   403						MOV #<LEVEL>_5,%PS
   404					.ENDM
   405					
   406					.MACRO UNMASK
   407						POP %PS
   408					.ENDM
   409					
   410					.MACRO CALL X
   411						JSR PC,X
   412					.ENDM
   413					
   414					.MACRO RET
   415						RTS PC
   416					.ENDM
   417					
   418					.MACRO MSG X
   419					.NCHR ZZ,^\X\
   420						.WORD ZZ
   421						.ASCII \X\
   422						.EVEN
   423					.ENDM
   424					
   425					; %%%% BRANCH MACROS %%%%
   426					
   427					.MACRO SRTYMC NM
   428					PLAC=.
   429					.=SRTY+<NM*2>
   430					SRTY'NM:	BR .+<MRAL'NM-MRTY'NM>
   431					.=PLAC
   432					.ENDM
   433					
   434					.MACRO STTYMC NM
   435					PLAC=.
   436					.=STTY+<NM*2>
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 12
	GLPT;GLDMUX 21	PAGE 1.11 	TABLE AND VARIABLE DEFINITION MACROS

   437					STTY'NM:	BR .+<MTCG'NM-MTTY'NM>
   438					.=PLAC
   439					.ENDM
   440					
   441					.MACRO SRALMC NM,NM1
   442					PLAC=.
   443					.=SRAL+<NM*2>
   444					SRAL'NM:	BR .+<MRTY'NM1-MRAL'NM>
   445					.=PLAC
   446					.ENDM
   447					
   448					.MACRO STCGMC NM,NM1
   449					PLAC=.
   450					.=STCG+<NM*2>
   451					STCG'NM:	BR .+<MTTY'NM1-MTCG'NM>
   452					.=PLAC
   453					.ENDM
   454					
   455					; %%%% INQUIRY LOOP MACROS %%%%
   456					
   457					.MACRO RPROC NM,NM1,MRTYSB,MRALSB	; CREATE A RECEIVE PROCESS
   458					MRTY'NM:	BR MRAL'NM
   459						MOV #NM*2,R3
   460						CALL MRTYSB
   461						JMP TESTLB
   462						SRTYMC NM
   463					MRAL'NM:	BR MRTY'NM1
   464						MOV #NM*2,R3
   465						CALL MRALSB
   466						JMP TESTLB
   467						SRALMC NM,NM1
   468					.ENDM
   469					
   470					.MACRO RSYM NM			; INQUIRE LOOP RECEIVE TERMINATION SYMBOL
   471					MRTY'NM:
   472					.ENDM
   473					
   474					.MACRO TPROC NM,NM1,MTTYSB,MTCGSB	; CREATE A TRANSMIT PROCESS
   475					MTTY'NM:	BR MTCG'NM
   476						MOV #NM*2,R3
   477						CALL MTTYSB
   478						JMP TESTLB
   479						STTYMC NM
   480					MTCG'NM:	BR MTTY'NM1
   481						MOV #NM*2,R3
   482						CALL MTCGSB
   483						JMP TESTLB
   484						STCGMC NM,NM1
   485					.ENDM
   486					
   487					.MACRO TSYM NM			; INQUIRE LOOP TRANSMIT TERMINATION SYMBOL
   488					MTTY'NM:
   489					.ENDM
   490					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 13
	GLPT;GLDMUX 21	PAGE 1.12 	TABLE AND VARIABLE DEFINITION MACROS

   491					; %%%% BUFFER MACROS %%%%
   492					
   493					.MACRO	RIBFMC NM		; RECEIVE INPUT BUFFER MACRO
   494					RIBF'NM:	.BLKW RIBFLN/2
   495					.ENDM
   496					
   497					.MACRO	ROBFMC NM		; RECEIVE OUTPUT BUFFER MACRO
   498					ROBF'NM:	.BLKW ROBFLN/2
   499					.ENDM
   500					
   501					.MACRO	TIBFMC NM		; TRANSMIT INPUT BUFFER MACRO
   502					TIBF'NM:	.BLKW TIBFLN/2
   503					.ENDM
   504					
   505					.MACRO	TOBFMC NM		; TRANSMIT OUTPUT BUFFER MACRO
   506					TOBF'NM:	.BLKW TOBFLN/2
   507					.ENDM
   508					
   509					.MACRO RSTRMC NM
   510					RSTR'NM:	.BLKW TMPLEN/2
   511					.ENDM
   512					
   513					.MACRO	TSTRMC NM
   514					TSTR'NM:	.BLKW TMPLEN/2
   515					.ENDM
   516					
   517					
   518					; %%%% TABLE UTILITY MACROS %%%%
   519					
   520					.MACRO VALCRE NAM,NUM		; VALUE TABLE CREATING MACRO
   521						.REPT NUM
   522						NAM'MC \.RPCNT,\.RPCNT+1
   523					.ENDR
   524					.ENDM
   525					
   526					.MACRO ADRMAC NAME,NM		; MACRO FOR ADDRESS TABLE ENTRY
   527						.WORD NAME'NM
   528					.ENDM
   529					
   530					.MACRO ADRCRE NAM,NUM		; ADDRESS TABLE CREATING MACRO
   531					NAM:	.REPT NUM
   532						ADRMAC NAM,\.RPCNT
   533					.ENDR
   534					.ENDM
   535					
   536					
   537					; %%%% STATUS TABLE MACROS %%%%
   538					
   539					.MACRO	RSTAMC NM		; RECEIVE STATUS TABLE MACRO
   540					RSTA'NM:	.WORD RIBF'NM
   541						.WORD RIBF'NM+RIBFLN
   542						.WORD RIBF'NM
   543						.WORD RIBF'NM
   544						.WORD MRTY'NM
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 14
	GLPT;GLDMUX 21	PAGE 1.13 	TABLE AND VARIABLE DEFINITION MACROS

   545						.WORD ROBF'NM
   546						.WORD ROBF'NM+ROBFLN
   547						.WORD ROBF'NM
   548						.WORD ROBF'NM
   549						.WORD MRAL'NM
   550						.BYTE 0,200+NM,0,0
   551						.WORD 0
   552						.WORD 0
   553						.WORD 0
   554						.WORD 0
   555						.WORD 0
   556						.WORD RSTR'NM
   557						.WORD 0
   558					.ENDM
   559					
   560					
   561					
   562					.MACRO	TSTAMC NM		; TRANSMIT STATUS TABLES MACRO
   563					TSTA'NM:	.WORD TIBF'NM
   564						.WORD TIBF'NM+TIBFLN
   565						.WORD TIBF'NM
   566						.WORD TIBF'NM
   567						.WORD MTTY'NM
   568						.WORD TDST0+OD.PTR	;INDIRECT POINTER
   569						.WORD TDST0+OD.END	;INDIRECT POINTER
   570						.WORD TDST0+OD.BEG	;INDIRECT POINTER
   571						.WORD TDST0+OD.LIM	;INDIRECT POINTER
   572						.WORD MTCG'NM
   573						.BYTE 0,200+NM,0,0
   574						.WORD 0
   575						.WORD TDST0+OD.BLK	;INDIRECT POINTER
   576						.WORD 0
   577						.WORD 0
   578						.WORD 0
   579						.WORD TSTR'NM
   580						.WORD 0
   581					.ENDM
   582					
   583					; %%%% INTERRUPT HANDLER MACROS %%%%
   584					
   585					.MACRO INRTMC NM,INRTSB		; TTY RECEIVE INTERRUPT HANDLER
   586					INRT'NM:	PUSH R3
   587						MOV #NM*2,R3
   588						CALL INRTSB
   589						POP R3
   590						RTI
   591					.ENDM
   592					
   593					.MACRO INTTMC NM,INTTSB		; TTY TRANSMIT INTERRUPT HANDLER
   594					INTT'NM:	PUSH R3
   595						MOV #NM*2,R3
   596						CALL INTTSB
   597						POP R3
   598						RTI
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 15
	GLPT;GLDMUX 21	PAGE 1.14 	TABLE AND VARIABLE DEFINITION MACROS

   599					.ENDM
   600					
   601					; %%%% ALLOCATION DATA MACROS %%%%
   602					
   603					.MACRO ALCMMC NM		; ALLOCATION MESSAGE MACRO
   604					ALZM'NM:	.BYTE 200+NM,34	; ^\
   605							.BYTE 200+NM,32	; ^Z
   606					ALCM'NM:	.BYTE 200+NM,34	; ^\
   607							.BYTE 200+NM,1	; ^A
   608							.BYTE 200+NM,0	; ALLOCATION
   609					ALCI'NM==.-1
   610					.ENDM
   611					
   612					
   613					.MACRO MCNTMC NM
   614					MCNT'NM:	.WORD 3		; MACRO FOR STORAGE OF COUNT OF MESSAGE
   615					.ENDM
   616					
   617					.MACRO ALCPMC NM
   618					ALCP'NM:	.WORD ALCM'NM	; MACRO FOR STORAGE OF MESSAGE POINTER
   619					.ENDM
   620					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 16
	GLPT;GLDMUX 21	PAGE 1.15 	$$$$$$ INITIALIZATION $$$$$

   621					.SBTTL $$$$$$ INITIALIZATION $$$$$
   622					
   623		002000			.=2000
   624					
   625	002000	012767	000340	175770	INIT:	MOV #340,%PS
   626	002006	000005				RESET
   627	002010	012706	002000			MOV #INIT,SP			; INITIALIZE STACK
   628								; INITIALIZE DEVICES
   629	002014	012701	017364			MOV #TDST0,R1			; DEVICE 0
   630	002020	012767	003540	001456		MOV #SLRD0,VCRD0		; INTERNAL POINTER IN DEVICE 0
   631										; RECEIVE INTERRUPT HANDLER
   632	002026	016161	000004	000000		MOV OD.BEG(R1),OD.PTR(R1)
   633	002034	016161	000004	000006		MOV OD.BEG(R1),OD.LIM(R1)
   634	002042	005061	000010			CLR OD.BLK(R1)
   635	002046	052767	000100	173534		BIS #100,RDST0			; ENABLE DL-11 RECEIVE INTERRUPTS
   636	002054	042767	000100	173532		BIC #100,XDST0			; DISABLE DL-11 TRANSMIT INTERRUPTS
   637					
   638	002062	052767	000100	173530		BIS #100,RTST0			; ENABLE DL-11 RECEIVE INTERRUPTS
   639	002070	042767	000100	173526		BIC #100,XTST0			; DISABLE DL-11 TRANSMIT INTERRUPTS
   640					
   641	002076	052767	000100	175454		BIS #100,RTST1			; ENABLE CONSOLE TTY RECEIVE INTERRUPTS
   642	002104	042767	000100	175452		BIC #100,XTST1			; DISABLE CONSOLE TTY TRANSMIT INTERRUPTS
   643					
   644	002112	042767	000100	175426		BIC #100,%LKS			; TURN OFF LINE CLOCK INTERRUPTS
   645					
   646					;	MOV #DR11MI,AAMSTA		; ANN ARBOR DISPLAY MULTIPLEXOR
   647					
   648					;	CLR KEYBUF			; KEYBOARD MULTIPLEXOR
   649					;	MOV #KEYBDI,KEYSTA
   650					
   651					;	MOV #DGRVUI,DGRSTA
   652					;	MOV #DGXVUI,DGXSTA		; DIGIVUE PLASMA DISPLAY
   653					
   654					
   655								; INTIALIZE ALL TTY CHANNELS
   656	002120	012703	000006			MOV #<MAXTTY-1>*2,R3
   657					1$:	CALL INTYSB			; INTYSB VECTORS TO PROPER INIALIZING ROUTINE
   658	002124	004767	007654			JSR PC,INTYSB
   659	002130	162703	000002			SUB #2,R3
   660	002134	100373				BPL 1$
   661					
   662	002136	012767	000001	001004		MOV #WAITIN,WAITPL		; FIX WAIT INSTRUCTION
   663	002144	005067	175626			CLR %PS				; ALLOW INTERRUPTS
   664	002150	000430				BR TESTLB			; SKIP OVER BRANCH PATCH TABLES
   665					
   666		002166			SRTY:	.BLKW MXTTTY
   667		002202			STTY:	.BLKW MXTTTY
   668		002216			SRAL:	.BLKW MXTTTY
   669		002232			STCG:	.BLKW MXTTTY
   670					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 17
	GLPT;GLDMUX 21	PAGE 1.16 	%%%% INQUIRY LOOP %%%%

   671					.SBTTL %%%% INQUIRY LOOP %%%%
   672					
   673					TESTLB:
   674		000003			GLDTTY==3				; TTY CHANNEL NUMBER ASSOCIATED WITH GOULD
   675						RPROC 3,0,MRGLSB,MRALSB			; TTY 26
   676	002232	000406			MRTY3:	BR MRAL3
   677	002234	012703	000006			MOV #3*2,R3
   678						CALL MRGLSB
   679	002240	004767	004034			JSR PC,MRGLSB
   680	002244	000167	177762			JMP TESTLB
   681						SRTYMC 3
   682		002250			PLAC=.
   683		002160			.=SRTY+<3*2>
   684	002160	000406			SRTY3:	BR .+<MRAL3-MRTY3>
   685		002250			.=PLAC
   686	002250	000406			MRAL3:	BR MRTY0
   687	002252	012703	000006			MOV #3*2,R3
   688						CALL MRALSB
   689	002256	004767	006756			JSR PC,MRALSB
   690	002262	000167	177744			JMP TESTLB
   691						SRALMC 3,0
   692		002266			PLAC=.
   693		002210			.=SRAL+<3*2>
   694	002210	000406			SRAL3:	BR .+<MRTY0-MRAL3>
   695		002266			.=PLAC
   696						RPROC 0,1,MRTYSB,MRALSB			; TTY 23
   697	002266	000406			MRTY0:	BR MRAL0
   698	002270	012703	000000			MOV #0*2,R3
   699						CALL MRTYSB
   700	002274	004767	003176			JSR PC,MRTYSB
   701	002300	000167	177726			JMP TESTLB
   702						SRTYMC 0
   703		002304			PLAC=.
   704		002152			.=SRTY+<0*2>
   705	002152	000406			SRTY0:	BR .+<MRAL0-MRTY0>
   706		002304			.=PLAC
   707	002304	000406			MRAL0:	BR MRTY1
   708	002306	012703	000000			MOV #0*2,R3
   709						CALL MRALSB
   710	002312	004767	006722			JSR PC,MRALSB
   711	002316	000167	177710			JMP TESTLB
   712						SRALMC 0,1
   713		002322			PLAC=.
   714		002202			.=SRAL+<0*2>
   715	002202	000406			SRAL0:	BR .+<MRTY1-MRAL0>
   716		002322			.=PLAC
   717						RPROC 1,2,MRTYSB,MRALSB			; TTY 24
   718	002322	000406			MRTY1:	BR MRAL1
   719	002324	012703	000002			MOV #1*2,R3
   720						CALL MRTYSB
   721	002330	004767	003142			JSR PC,MRTYSB
   722	002334	000167	177672			JMP TESTLB
   723						SRTYMC 1
   724		002340			PLAC=.
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 18
	GLPT;GLDMUX 21	PAGE 1.17 	%%%% INQUIRY LOOP %%%%

   725		002154			.=SRTY+<1*2>
   726	002154	000406			SRTY1:	BR .+<MRAL1-MRTY1>
   727		002340			.=PLAC
   728	002340	000406			MRAL1:	BR MRTY2
   729	002342	012703	000002			MOV #1*2,R3
   730						CALL MRALSB
   731	002346	004767	006666			JSR PC,MRALSB
   732	002352	000167	177654			JMP TESTLB
   733						SRALMC 1,2
   734		002356			PLAC=.
   735		002204			.=SRAL+<1*2>
   736	002204	000406			SRAL1:	BR .+<MRTY2-MRAL1>
   737		002356			.=PLAC
   738						RPROC 2,4,MRDGSB,MRALSB			; TTY 25
   739	002356	000406			MRTY2:	BR MRAL2
   740	002360	012703	000004			MOV #2*2,R3
   741						CALL MRDGSB
   742	002364	004767	007404			JSR PC,MRDGSB
   743	002370	000167	177636			JMP TESTLB
   744						SRTYMC 2
   745		002374			PLAC=.
   746		002156			.=SRTY+<2*2>
   747	002156	000406			SRTY2:	BR .+<MRAL2-MRTY2>
   748		002374			.=PLAC
   749	002374	000406			MRAL2:	BR MRTY4
   750	002376	012703	000004			MOV #2*2,R3
   751						CALL MRALSB
   752	002402	004767	006632			JSR PC,MRALSB
   753	002406	000167	177620			JMP TESTLB
   754						SRALMC 2,4
   755		002412			PLAC=.
   756		002206			.=SRAL+<2*2>
   757	002206	000406			SRAL2:	BR .+<MRTY4-MRAL2>
   758		002412			.=PLAC
   759		000004			AATYST==4				; START OF ANN ARBOR TERMINALS
   760						RPROC 4,5,MRAASB,MRALSB			; TTY 27
   761	002412	000406			MRTY4:	BR MRAL4
   762	002414	012703	000010			MOV #4*2,R3
   763						CALL MRAASB
   764	002420	004767	007126			JSR PC,MRAASB
   765	002424	000167	177602			JMP TESTLB
   766						SRTYMC 4
   767		002430			PLAC=.
   768		002162			.=SRTY+<4*2>
   769	002162	000406			SRTY4:	BR .+<MRAL4-MRTY4>
   770		002430			.=PLAC
   771	002430	000406			MRAL4:	BR MRTY5
   772	002432	012703	000010			MOV #4*2,R3
   773						CALL MRALSB
   774	002436	004767	006576			JSR PC,MRALSB
   775	002442	000167	177564			JMP TESTLB
   776						SRALMC 4,5
   777		002446			PLAC=.
   778		002212			.=SRAL+<4*2>
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 19
	GLPT;GLDMUX 21	PAGE 1.18 	%%%% INQUIRY LOOP %%%%

   779	002212	000406			SRAL4:	BR .+<MRTY5-MRAL4>
   780		002446			.=PLAC
   781						RPROC 5,6,MRAASB,MRALSB			; TTY 28
   782	002446	000406			MRTY5:	BR MRAL5
   783	002450	012703	000012			MOV #5*2,R3
   784						CALL MRAASB
   785	002454	004767	007072			JSR PC,MRAASB
   786	002460	000167	177546			JMP TESTLB
   787						SRTYMC 5
   788		002464			PLAC=.
   789		002164			.=SRTY+<5*2>
   790	002164	000406			SRTY5:	BR .+<MRAL5-MRTY5>
   791		002464			.=PLAC
   792	002464	000406			MRAL5:	BR MRTY6
   793	002466	012703	000012			MOV #5*2,R3
   794						CALL MRALSB
   795	002472	004767	006542			JSR PC,MRALSB
   796	002476	000167	177530			JMP TESTLB
   797						SRALMC 5,6
   798		002502			PLAC=.
   799		002214			.=SRAL+<5*2>
   800	002214	000406			SRAL5:	BR .+<MRTY6-MRAL5>
   801		002502			.=PLAC
   802						RSYM \MXTTTY
   803					MRTY6:
   804					
   805						TPROC 0,1,MTTYSB,MTCGSB			; TTY 23
   806	002502	000406			MTTY0:	BR MTCG0
   807	002504	012703	000000			MOV #0*2,R3
   808						CALL MTTYSB
   809	002510	004767	003164			JSR PC,MTTYSB
   810	002514	000167	177512			JMP TESTLB
   811						STTYMC 0
   812		002520			PLAC=.
   813		002166			.=STTY+<0*2>
   814	002166	000406			STTY0:	BR .+<MTCG0-MTTY0>
   815		002520			.=PLAC
   816	002520	000406			MTCG0:	BR MTTY1
   817	002522	012703	000000			MOV #0*2,R3
   818						CALL MTCGSB
   819	002526	004767	006700			JSR PC,MTCGSB
   820	002532	000167	177474			JMP TESTLB
   821						STCGMC 0,1
   822		002536			PLAC=.
   823		002216			.=STCG+<0*2>
   824	002216	000406			STCG0:	BR .+<MTTY1-MTCG0>
   825		002536			.=PLAC
   826						TPROC 1,2,MTTYSB,MTCGSB			; TTY 24
   827	002536	000406			MTTY1:	BR MTCG1
   828	002540	012703	000002			MOV #1*2,R3
   829						CALL MTTYSB
   830	002544	004767	003130			JSR PC,MTTYSB
   831	002550	000167	177456			JMP TESTLB
   832						STTYMC 1
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 20
	GLPT;GLDMUX 21	PAGE 1.19 	%%%% INQUIRY LOOP %%%%

   833		002554			PLAC=.
   834		002170			.=STTY+<1*2>
   835	002170	000406			STTY1:	BR .+<MTCG1-MTTY1>
   836		002554			.=PLAC
   837	002554	000406			MTCG1:	BR MTTY2
   838	002556	012703	000002			MOV #1*2,R3
   839						CALL MTCGSB
   840	002562	004767	006644			JSR PC,MTCGSB
   841	002566	000167	177440			JMP TESTLB
   842						STCGMC 1,2
   843		002572			PLAC=.
   844		002220			.=STCG+<1*2>
   845	002220	000406			STCG1:	BR .+<MTTY2-MTCG1>
   846		002572			.=PLAC
   847						TPROC 2,3,MTTYSB,MTCGSB			; TTY 25
   848	002572	000406			MTTY2:	BR MTCG2
   849	002574	012703	000004			MOV #2*2,R3
   850						CALL MTTYSB
   851	002600	004767	003074			JSR PC,MTTYSB
   852	002604	000167	177422			JMP TESTLB
   853						STTYMC 2
   854		002610			PLAC=.
   855		002172			.=STTY+<2*2>
   856	002172	000406			STTY2:	BR .+<MTCG2-MTTY2>
   857		002610			.=PLAC
   858	002610	000406			MTCG2:	BR MTTY3
   859	002612	012703	000004			MOV #2*2,R3
   860						CALL MTCGSB
   861	002616	004767	006610			JSR PC,MTCGSB
   862	002622	000167	177404			JMP TESTLB
   863						STCGMC 2,3
   864		002626			PLAC=.
   865		002222			.=STCG+<2*2>
   866	002222	000406			STCG2:	BR .+<MTTY3-MTCG2>
   867		002626			.=PLAC
   868						TPROC 3,4,MTTYSB,NULLSB			; TTY 26
   869	002626	000406			MTTY3:	BR MTCG3
   870	002630	012703	000006			MOV #3*2,R3
   871						CALL MTTYSB
   872	002634	004767	003040			JSR PC,MTTYSB
   873	002640	000167	177366			JMP TESTLB
   874						STTYMC 3
   875		002644			PLAC=.
   876		002174			.=STTY+<3*2>
   877	002174	000406			STTY3:	BR .+<MTCG3-MTTY3>
   878		002644			.=PLAC
   879	002644	000406			MTCG3:	BR MTTY4
   880	002646	012703	000006			MOV #3*2,R3
   881						CALL NULLSB
   882	002652	004767	007124			JSR PC,NULLSB
   883	002656	000167	177350			JMP TESTLB
   884						STCGMC 3,4
   885		002662			PLAC=.
   886		002224			.=STCG+<3*2>
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 21
	GLPT;GLDMUX 21	PAGE 1.20 	%%%% INQUIRY LOOP %%%%

   887	002224	000406			STCG3:	BR .+<MTTY4-MTCG3>
   888		002662			.=PLAC
   889						TPROC 4,5,MTTYSB,MTCGSB			; TTY 27
   890	002662	000406			MTTY4:	BR MTCG4
   891	002664	012703	000010			MOV #4*2,R3
   892						CALL MTTYSB
   893	002670	004767	003004			JSR PC,MTTYSB
   894	002674	000167	177332			JMP TESTLB
   895						STTYMC 4
   896		002700			PLAC=.
   897		002176			.=STTY+<4*2>
   898	002176	000406			STTY4:	BR .+<MTCG4-MTTY4>
   899		002700			.=PLAC
   900	002700	000406			MTCG4:	BR MTTY5
   901	002702	012703	000010			MOV #4*2,R3
   902						CALL MTCGSB
   903	002706	004767	006520			JSR PC,MTCGSB
   904	002712	000167	177314			JMP TESTLB
   905						STCGMC 4,5
   906		002716			PLAC=.
   907		002226			.=STCG+<4*2>
   908	002226	000406			STCG4:	BR .+<MTTY5-MTCG4>
   909		002716			.=PLAC
   910						TPROC 5,6,MTTYSB,MTCGSB			; TTY 28
   911	002716	000406			MTTY5:	BR MTCG5
   912	002720	012703	000012			MOV #5*2,R3
   913						CALL MTTYSB
   914	002724	004767	002750			JSR PC,MTTYSB
   915	002730	000167	177276			JMP TESTLB
   916						STTYMC 5
   917		002734			PLAC=.
   918		002200			.=STTY+<5*2>
   919	002200	000406			STTY5:	BR .+<MTCG5-MTTY5>
   920		002734			.=PLAC
   921	002734	000406			MTCG5:	BR MTTY6
   922	002736	012703	000012			MOV #5*2,R3
   923						CALL MTCGSB
   924	002742	004767	006464			JSR PC,MTCGSB
   925	002746	000167	177260			JMP TESTLB
   926						STCGMC 5,6
   927		002752			PLAC=.
   928		002230			.=STCG+<5*2>
   929	002230	000406			STCG5:	BR .+<MTTY6-MTCG5>
   930		002752			.=PLAC
   931						TSYM \MXTTTY
   932					MTTY6:
   933					
   934	002752	000460			STATBR:	BR GLIBR		; MAIN PROGRAM LEVEL STATUS MESSAGE DAEMON
   935	002754	012703	000006			MOV #GLDTTY*2,R3
   936	002760	016304	016770			MOV TSTA(R3),R4
   937	002764	016405	000000			MOV TI.PTR(R4),R5
   938	002770	016700	016134			MOV STAMSG,R0
   939	002774	005764	000030		12$:	TST TI.BLK(R4)
   940	003000	001410				 BEQ 1$
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 22
	GLPT;GLDMUX 21	PAGE 1.21 	%%%% INQUIRY LOOP %%%%

   941	003002	010067	016122			MOV R0,STAMSG
   942	003006	010564	000000			MOV R5,TI.PTR(R4)
   943	003012	105074	000010			CLRB @TI.FLG(R4)
   944	003016	000167	177210			 JMP TESTLB		; (SINCE CHARACTERS ARE NOT DEPOSITED WITH INTERRUPTS
   945									; WAITPL HACKERY IS NOT NEEDED)
   946	003022	012025			1$:	MOV (R0)+,(R5)+
   947	003024	020564	000002			CMP R5,TI.END(R4)
   948	003030	001002				 BNE 3$
   949	003032	016405	000004			 MOV TI.BEG(R4),R5
   950	003036	020564	000006		3$:	CMP R5,TI.LIM(R4)
   951	003042	001002				 BNE 4$
   952	003044	005264	000030			INC TI.BLK(R4)
   953	003050	005367	016056		4$:	DEC STALEN
   954	003054	001347				 BNE 12$
   955	003056	012767	000005	016046		MOV #STLEN,STALEN	; CLEAN UP
   956	003064	012767	021116	016036		MOV #STMSG,STAMSG
   957	003072	010564	000000			MOV R5,TI.PTR(R4)
   958	003076	016767	000054	177646		MOV SSTABR,STATBR
   959	003104	105074	000010			CLRB @TI.FLG(R4)
   960	003110	000167	177116			JMP TESTLB
   961					
   962	003114	000777			GLIBR:	BR GLIBR		; MAIN PROGRAM ACTIVATION OF GOULD
   963									; (USEFUL ALSO FROM INTERRUPT LEVELS >= 5)
   964	003116	005767	015766			TST GLERR
   965	003122	001012				BNE WAITPL		; SKIP IF GOULD ERROR
   966						MASK 5
   967						PUSH %PS
   968					.IRP Y,<%PS>
   969						MOV Y,-(SP)
   970					.ENDM
   971	003124	016746	174646			MOV %PS,-(SP)
   972	003130	012767	000240	174640		MOV #<5>_5,%PS
   973						CALL GLDINT
   974	003136	004767	001376			JSR PC,GLDINT
   975	003142	016767	000012	177744		MOV SGLIBR,GLIBR	; CLEAN UP AND FALL THROUGH
   976					
   977	003150	000001			WAITPL:	WAIT
   978	003152	000167	177054			JMP TESTLB
   979					
   980	003156	000460			SSTABR:	BR .+<GLIBR-STATBR>
   981	003160	000415			SGLIBR:	BR .+<WAITPL-GLIBR>
   982					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 23
	GLPT;GLDMUX 21	PAGE 1.22 	%%%% TTY INTERRUPT DISPATCH %%%%

   983					.SBTTL %%%% TTY INTERRUPT DISPATCH %%%%
   984					
   985						INRTMC 0,INRTSB			; IMLAC		STANDARD RECEIVE INTERRUPT
   986					INRT0:	PUSH R3
   987					.IRP Y,<R3>
   988						MOV Y,-(SP)
   989					.ENDM
   990	003162	010346				MOV R3,-(SP)
   991	003164	012703	000000			MOV #0*2,R3
   992						CALL INRTSB
   993	003170	004767	000652			JSR PC,INRTSB
   994						POP R3
   995					.IRP Y,<R3>
   996						MOV (SP)+,Y
   997					.ENDM
   998	003174	012603				MOV (SP)+,R3
   999	003176	000002				RTI
  1000						INRTMC 1,INRTSB			; TEKTRONIX	STANDARD RECEIVE INTERRUPT
  1001					INRT1:	PUSH R3
  1002					.IRP Y,<R3>
  1003						MOV Y,-(SP)
  1004					.ENDM
  1005	003200	010346				MOV R3,-(SP)
  1006	003202	012703	000002			MOV #1*2,R3
  1007						CALL INRTSB
  1008	003206	004767	000634			JSR PC,INRTSB
  1009						POP R3
  1010					.IRP Y,<R3>
  1011						MOV (SP)+,Y
  1012					.ENDM
  1013	003212	012603				MOV (SP)+,R3
  1014	003214	000002				RTI
  1015						INRTMC 3,NULLSB			; GOULD		STANDARD RECEIVE INTERRUPT
  1016					INRT3:	PUSH R3
  1017					.IRP Y,<R3>
  1018						MOV Y,-(SP)
  1019					.ENDM
  1020	003216	010346				MOV R3,-(SP)
  1021	003220	012703	000006			MOV #3*2,R3
  1022						CALL NULLSB
  1023	003224	004767	006552			JSR PC,NULLSB
  1024						POP R3
  1025					.IRP Y,<R3>
  1026						MOV (SP)+,Y
  1027					.ENDM
  1028	003230	012603				MOV (SP)+,R3
  1029	003232	000002				RTI
  1030										; DIGIVUE	KEYMUX   RECEIVE INTERRUPT
  1031										; ANN ARBOR #1  KEYMUX   RECEIVE INTERRUPT
  1032										; ANN ARBOR #2  KEYMUX   RECEIVE INTERRUPT
  1033					
  1034					
  1035						INTTMC 0,INTTSB			; IMLAC		STANDARD TRANSMIT INTERRUPT
  1036					INTT0:	PUSH R3
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 24
	GLPT;GLDMUX 21	PAGE 1.23 	%%%% TTY INTERRUPT DISPATCH %%%%

  1037					.IRP Y,<R3>
  1038						MOV Y,-(SP)
  1039					.ENDM
  1040	003234	010346				MOV R3,-(SP)
  1041	003236	012703	000000			MOV #0*2,R3
  1042						CALL INTTSB
  1043	003242	004767	000736			JSR PC,INTTSB
  1044						POP R3
  1045					.IRP Y,<R3>
  1046						MOV (SP)+,Y
  1047					.ENDM
  1048	003246	012603				MOV (SP)+,R3
  1049	003250	000002				RTI
  1050						INTTMC 1,INTTSB			; TEKTRONIX	STANDARD TRANSMIT INTERRUPT
  1051					INTT1:	PUSH R3
  1052					.IRP Y,<R3>
  1053						MOV Y,-(SP)
  1054					.ENDM
  1055	003252	010346				MOV R3,-(SP)
  1056	003254	012703	000002			MOV #1*2,R3
  1057						CALL INTTSB
  1058	003260	004767	000720			JSR PC,INTTSB
  1059						POP R3
  1060					.IRP Y,<R3>
  1061						MOV (SP)+,Y
  1062					.ENDM
  1063	003264	012603				MOV (SP)+,R3
  1064	003266	000002				RTI
  1065						INTTMC 3,NULLSB			; GOULD		STANDARD TRANSMIT INTERRUPT
  1066					INTT3:	PUSH R3
  1067					.IRP Y,<R3>
  1068						MOV Y,-(SP)
  1069					.ENDM
  1070	003270	010346				MOV R3,-(SP)
  1071	003272	012703	000006			MOV #3*2,R3
  1072						CALL NULLSB
  1073	003276	004767	006500			JSR PC,NULLSB
  1074						POP R3
  1075					.IRP Y,<R3>
  1076						MOV (SP)+,Y
  1077					.ENDM
  1078	003302	012603				MOV (SP)+,R3
  1079	003304	000002				RTI
  1080						INTTMC 2,DGXINT			; DIGIVUE	DIGIVUE  TRANSMIT INTERRUPT
  1081					INTT2:	PUSH R3
  1082					.IRP Y,<R3>
  1083						MOV Y,-(SP)
  1084					.ENDM
  1085	003306	010346				MOV R3,-(SP)
  1086	003310	012703	000004			MOV #2*2,R3
  1087						CALL DGXINT
  1088	003314	004767	002152			JSR PC,DGXINT
  1089						POP R3
  1090					.IRP Y,<R3>
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 25
	GLPT;GLDMUX 21	PAGE 1.24 	%%%% TTY INTERRUPT DISPATCH %%%%

  1091						MOV (SP)+,Y
  1092					.ENDM
  1093	003320	012603				MOV (SP)+,R3
  1094	003322	000002				RTI
  1095										; ANN ARBOR #1  DSPLY MULTIPLEXOR INTERRUPT
  1096										; ANN ARBOR #2  DSPLY MULTIPLEXOR INTERRUPT
  1097					
  1098					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 26
	GLPT;GLDMUX 21	PAGE 1.25 	%%%% INTERRUPT HANDLERS %%%%

  1099					.SBTTL %%%% INTERRUPT HANDLERS %%%%
  1100					
  1101					; %%%% FATAL INTERRUPT HANDLER %%%%
  1102					
  1103					CPUERR:
  1104					ILLOPR:
  1105					BPTTRP:
  1106					IOTTRP:
  1107					EMTTRP:
  1108					UUOH:
  1109	003324	000000				HALT
  1110					 
  1111					; %%% CLOCK HANDLER %%%
  1112					
  1113	003326	042767	000200	174212	CLKHND:	BIC #200,%LKS
  1114	003334	005767	015474			TST EODFLG
  1115	003340	001406				BEQ 3$
  1116	003342	005767	015540			TST GLIDL
  1117	003346	001011				BNE 31$
  1118	003350	005067	015474			CLR CLKCNT		; GOULD NOT SETTLED YET
  1119	003354	000002				RTI
  1120					
  1121	003356	042767	000100	174162	3$:	BIC #100,%LKS		; SHOW'S OVER, GO HOME
  1122	003364	005067	015460			CLR CLKCNT
  1123	003370	000002				RTI
  1124					
  1125	003372	005267	015452		31$:	INC CLKCNT		; COUNTDOWN TO INDICATE LOSS OF ENABLE STATUS ON GOULD
  1126	003376	022767	000030	015444		CMP #GLDTIM,CLKCNT	; SHORT TIMEOUT (1/2 SECOND) FOR PAPER SMEAR
  1127	003404	001401				BEQ 2$
  1128	003406	000002				RTI
  1129					
  1130					2$:	PUSH R4
  1131					.IRP Y,<R4>
  1132						MOV Y,-(SP)
  1133					.ENDM
  1134	003410	010446				MOV R4,-(SP)
  1135	003412	016704	015434			MOV GLPTR,R4
  1136	003416	012724	100000			MOV #100000,(R4)+
  1137	003422	016724	000032			MOV SMEARP,(R4)+
  1138	003426	010467	015420			MOV R4,GLPTR
  1139	003432	010467	015416			MOV R4,GTPTR
  1140	003436	105067	177452			CLRB GLIBR
  1141						POP R4
  1142					.IRP Y,<R4>
  1143						MOV (SP)+,Y
  1144					.ENDM
  1145	003442	012604				MOV (SP)+,R4
  1146	003444	005067	015400			CLR CLKCNT
  1147	003450	042767	000100	174070		BIC #100,%LKS
  1148	003456	000002				RTI
  1149					
  1150					
  1151					
  1152	003460	011124			SMEARP:	.WORD SMRBLK
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 27
	GLPT;GLDMUX 21	PAGE 1.26 	%%%% INTERRUPT HANDLERS %%%%

  1153					
  1154					; %%%% POWER FAIL HANDLER %%%%
  1155					
  1156	003462	012767	003472	174334	POWROF:	MOV #RSTALL,%PWRV
  1157	003470	000000				HALT
  1158					
  1159	003472	012767	003462	174324	RSTALL:	MOV #POWROF,%PWRV
  1160	003500	000167	176274			JMP INIT
  1161					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 28
	GLPT;GLDMUX 21	PAGE 1.27 	%%%% INTERRUPT HANDLERS %%%%

  1162					; %%%% INTERRUPT ROUTINE FOR RECEIVE INPUT FROM PDP-10 VIA DL-11 %%%%
  1163					;			DEVICE 0
  1164	003504	003540			VCRD0:	.WORD SLRD0		; VECTOR TO ONE OF THREE ROUTINES:
  1165									;	(LINE SELECT, COUNT, CHARACTER OUT HANDLER)
  1166	003506	000000			CTRT0:	.WORD 0			; COUNT OF CHARACTERS REMAINING FOR THIS LINE
  1167	003510	000000			VCRT0:	.WORD 0			; VECTOR TO TTY STATUS TABLE
  1168					
  1169					INRD0:	PUSH <R0,R1,R2>
  1170					.IRP Y,<R0,R1,R2>
  1171						MOV Y,-(SP)
  1172					.ENDM
  1173	003512	010046				MOV R0,-(SP)
  1174	003514	010146				MOV R1,-(SP)
  1175	003516	010246				MOV R2,-(SP)
  1176	003520	016700	172066			MOV RDBF0,R0		; PICK UP CHARACTER
  1177	003524	100003				BPL 1$
  1178	003526	010067	015312			MOV R0,DLSTA1
  1179	003532	000000				HALT			; BAD CHARACTER
  1180	003534	000177	177744		1$:	JMP @VCRD0
  1181					
  1182	003540	032700	000200		SLRD0:	BIT #200,R0		; SELECT LINE FOR INPUT
  1183	003544	001001				BNE 1$
  1184	003546	000000				HALT			; NO LINE SELECT WHEN EXPECTED
  1185	003550	042700	000200		1$:	BIC #200,R0		; CLEAR OUT LINE SELECT BIT
  1186	003554	020027	000003			CMP R0,#MAXTTY-1
  1187	003560	101401				BLOS 2$
  1188	003562	000000				HALT			; NON-EXISTENT TTY
  1189	003564	006300			2$:	ASL R0			; CONTRUCT INDEX TO PROPER INPUT QUEUE STATUS TABLE
  1190	003566	016067	016760	177714		MOV RSTA(R0),VCRT0
  1191	003574	012767	003612	177702		MOV #CTRD0,VCRD0
  1192						POP <R2,R1,R0>
  1193					.IRP Y,<R2,R1,R0>
  1194						MOV (SP)+,Y
  1195					.ENDM
  1196	003602	012602				MOV (SP)+,R2
  1197	003604	012601				MOV (SP)+,R1
  1198	003606	012600				MOV (SP)+,R0
  1199	003610	000002				RTI
  1200					
  1201	003612	010067	177670		CTRD0:	MOV R0,CTRT0
  1202	003616	001001				BNE 1$
  1203	003620	000000				HALT			; ZERO LENGTH STRING
  1204	003622	012767	003640	177654	1$:	MOV #PTRD0,VCRD0
  1205						POP <R2,R1,R0>
  1206					.IRP Y,<R2,R1,R0>
  1207						MOV (SP)+,Y
  1208					.ENDM
  1209	003630	012602				MOV (SP)+,R2
  1210	003632	012601				MOV (SP)+,R1
  1211	003634	012600				MOV (SP)+,R0
  1212	003636	000002				RTI
  1213					
  1214	003640	016701	177644		PTRD0:	MOV VCRT0,R1		; PLACE CHARACTER INTO INPUT QUEUE
  1215	003644	016102	000000			MOV RI.PTR(R1),R2
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 29
	GLPT;GLDMUX 21	PAGE 1.28 	%%%% INTERRUPT HANDLERS %%%%

  1216	003650	110022				MOVB R0,(R2)+		; THERE IT GOES ... (PLOP)
  1217	003652	020261	000002			CMP R2,RI.END(R1)
  1218	003656	001002				BNE 1$
  1219	003660	016102	000004			MOV RI.BEG(R1),R2
  1220	003664	020261	000006		1$:	CMP R2,RI.LIM(R1)
  1221	003670	001001				BNE 2$
  1222	003672	000000				HALT			; DATA OVERRUN, SCREWED ALLOCATION
  1223	003674	010261	000000		2$:	MOV R2,RI.PTR(R1)
  1224	003700	005367	177602			DEC CTRT0
  1225	003704	001003				BNE 3$
  1226	003706	012767	003540	177570		MOV #SLRD0,VCRD0
  1227	003714	105071	000010		3$:	CLRB @RI.FLG(R1)		; SIGNAL MAIN PROGRAM THAT A CHARACTER IS READY
  1228	003720	012767	000240	177222		MOV #NOPIN,WAITPL
  1229						POP <R2,R1,R0>
  1230					.IRP Y,<R2,R1,R0>
  1231						MOV (SP)+,Y
  1232					.ENDM
  1233	003726	012602				MOV (SP)+,R2
  1234	003730	012601				MOV (SP)+,R1
  1235	003732	012600				MOV (SP)+,R0
  1236	003734	000002				RTI
  1237					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 30
	GLPT;GLDMUX 21	PAGE 1.29 	%%%% INTERRUPT HANDLERS %%%%

  1238					; %%%% INTERRUPT ROUTINE FOR TRANSMIT OUTPUT TO PDP-10 VIA DL-11 %%%%
  1239					
  1240					;NOTE: HAVE MTTY'S INDIRECT THROUGH TRANSMIT OUTPUT STATUS TABLE
  1241					; (IMPLIMENTS MANY TO ONE FUNCTION)
  1242					
  1243					INTD0:	PUSH <R0,R1,R2>		; INTERRUPT TRANSMIT DEVICE 0
  1244					.IRP Y,<R0,R1,R2>
  1245						MOV Y,-(SP)
  1246					.ENDM
  1247	003736	010046				MOV R0,-(SP)
  1248	003740	010146				MOV R1,-(SP)
  1249	003742	010246				MOV R2,-(SP)
  1250	003744	012701	017364			MOV #TDST0,R1		; PICK UP POINTER TO STATUS TABLE FOR TRANSMIT DEVICE 0
  1251	003750	016102	000006			MOV OD.LIM(R1),R2	; PICK LOAD POINTER TO CHATACTER DATA
  1252	003754	112200				MOVB (R2)+,R0		; PICK UP CHARACTER
  1253	003756	020261	000002			CMP R2,OD.END(R1)	; ARE WE AT END OF BUFFER
  1254	003762	001002				BNE 1$
  1255	003764	016102	000004			MOV OD.BEG(R1),R2	; THEN CIRCLE AROUND TO THE BEGINNING
  1256					1$:	MASK 7			;	TO MAKE SURE NOTHING CAN CATCH US
  1257						PUSH %PS
  1258					.IRP Y,<%PS>
  1259						MOV Y,-(SP)
  1260					.ENDM
  1261	003770	016746	174002			MOV %PS,-(SP)
  1262	003774	012767	000340	173774		MOV #<7>_5,%PS
  1263									;	DISABLING INTERRUPTS WHILE STUFF PENDING
  1264	004002	020261	000000			CMP R2,OD.PTR(R1)	; HAVE WE CAUGHT UP WITH INSERTION POINTER?
  1265	004006	001003				BNE 2$
  1266	004010	042767	000100	171576		BIC #100,XDST0		; THEN TURN OFF INTERRUPT
  1267					2$:	UNMASK
  1268						POP %PS
  1269					.IRP Y,<%PS>
  1270						MOV (SP)+,Y
  1271					.ENDM
  1272	004016	012667	173754			MOV (SP)+,%PS
  1273	004022	010261	000006			MOV R2,OD.LIM(R1)	; UPDATE POINTER
  1274	004026	010067	171564			MOV R0,XDBF0		; AND PUT OUT CHARACTER
  1275	004032	005061	000010			CLR OD.BLK(R1)
  1276						POP <R2,R1,R0>
  1277					.IRP Y,<R2,R1,R0>
  1278						MOV (SP)+,Y
  1279					.ENDM
  1280	004036	012602				MOV (SP)+,R2
  1281	004040	012601				MOV (SP)+,R1
  1282	004042	012600				MOV (SP)+,R0
  1283	004044	000002				RTI
  1284					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 31
	GLPT;GLDMUX 21	PAGE 1.30 	%%%% INTERRUPT HANDLERS %%%%

  1285					; %%%% INTERRUPT ROUTINE FOR INPUT FROM TTY %%%%
  1286					
  1287					INRTSB:	PUSH <R0,R1,R2,R5>	; INTERRUPT RECEIVE TTY 0
  1288					.IRP Y,<R0,R1,R2,R5>
  1289						MOV Y,-(SP)
  1290					.ENDM
  1291	004046	010046				MOV R0,-(SP)
  1292	004050	010146				MOV R1,-(SP)
  1293	004052	010246				MOV R2,-(SP)
  1294	004054	010546				MOV R5,-(SP)
  1295	004056	017300	017104			MOV @RTBF(R3),R0	; PICK UP CHARACTER
  1296	004062	100003				 BPL 1$
  1297	004064	010067	014756			MOV R0,DLSTA2		; SAVE BITS FOR A PORT MORTEM
  1298	004070	000000				HALT			; SCREWED CHARACTER
  1299	004072	016301	016770		1$:	MOV TSTA(R3),R1		; PICK UP POINTER TO TRANSMIT STATUS TABLE 0
  1300	004076	005761	000030			TST TI.BLK(R1)
  1301	004102	001407				 BEQ 2$
  1302	004104	105071	000022			CLRB @CG.FLG(R1)
  1303	004110	016305	016760			MOV RSTA(R3),R5
  1304	004114	005265	000034			INC MR.BLK(R5)
  1305	004120	000421				 BR 5$
  1306	004122	016102	000000		2$:	MOV TI.PTR(R1),R2
  1307	004126	010022				MOV R0,(R2)+
  1308	004130	020261	000002			CMP R2,TI.END(R1)
  1309	004134	001002				 BNE 3$
  1310	004136	016102	000004			MOV TI.BEG(R1),R2
  1311	004142	020261	000006		3$:	CMP R2,TI.LIM(R1)
  1312	004146	001002				BNE 4$
  1313	004150	005261	000030			INC TI.BLK(R1)
  1314	004154	010261	000000		4$:	MOV R2,TI.PTR(R1)
  1315	004160	105071	000010			CLRB @TI.FLG(R1)
  1316	004164	012767	000240	176756	5$:	MOV #NOPIN,WAITPL
  1317						POP <R5,R2,R1,R0>
  1318					.IRP Y,<R5,R2,R1,R0>
  1319						MOV (SP)+,Y
  1320					.ENDM
  1321	004172	012605				MOV (SP)+,R5
  1322	004174	012602				MOV (SP)+,R2
  1323	004176	012601				MOV (SP)+,R1
  1324	004200	012600				MOV (SP)+,R0
  1325						RET
  1326	004202	000207				RTS PC
  1327					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 32
	GLPT;GLDMUX 21	PAGE 1.31 	%%%% INTERRUPT HANDLERS %%%%

  1328					; %%%% INTERRUPT ROUTINE FOR OUTPUT TO TTY %%%%
  1329					
  1330					INTTSB:	PUSH <R0,R1,R2>
  1331					.IRP Y,<R0,R1,R2>
  1332						MOV Y,-(SP)
  1333					.ENDM
  1334	004204	010046				MOV R0,-(SP)
  1335	004206	010146				MOV R1,-(SP)
  1336	004210	010246				MOV R2,-(SP)
  1337	004212	016301	016760			MOV RSTA(R3),R1
  1338	004216	016102	000020			MOV RO.LIM(R1),R2
  1339	004222	112200				MOVB (R2)+,R0
  1340	004224	020261	000014			CMP R2,RO.END(R1)
  1341	004230	001002				 BNE 1$
  1342	004232	016102	000016			MOV RO.BEG(R1),R2
  1343					1$:	MASK 7
  1344						PUSH %PS
  1345					.IRP Y,<%PS>
  1346						MOV Y,-(SP)
  1347					.ENDM
  1348	004236	016746	173534			MOV %PS,-(SP)
  1349	004242	012767	000340	173526		MOV #<7>_5,%PS
  1350	004250	020261	000012			CMP R2,RO.PTR(R1)
  1351	004254	001003				BNE 2$
  1352	004256	042773	000100	017110		BIC #100,@XTST(R3)
  1353					2$:	UNMASK
  1354						POP %PS
  1355					.IRP Y,<%PS>
  1356						MOV (SP)+,Y
  1357					.ENDM
  1358	004264	012667	173506			MOV (SP)+,%PS
  1359	004270	010073	017114			MOV R0,@XTBF(R3)
  1360	004274	010261	000020			MOV R2,RO.LIM(R1)
  1361	004300	005061	000032			CLR RO.BLK(R1)
  1362						POP <R2,R1,R0>
  1363					.IRP Y,<R2,R1,R0>
  1364						MOV (SP)+,Y
  1365					.ENDM
  1366	004304	012602				MOV (SP)+,R2
  1367	004306	012601				MOV (SP)+,R1
  1368	004310	012600				MOV (SP)+,R0
  1369						RET
  1370	004312	000207				RTS PC
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 33
	GLPT;GLDMUX 21	PAGE 1.32 	%%%% INTERRUPT HANDLERS %%%%

  1371					; %%%% KEYBOARD MULTIPLEXER INTERRUPT ROUTINE %%%%
  1372					
  1373					KEYINT:	PUSH <R0,R1,R2,R3,R5>
  1374					.IRP Y,<R0,R1,R2,R3,R5>
  1375						MOV Y,-(SP)
  1376					.ENDM
  1377	004314	010046				MOV R0,-(SP)
  1378	004316	010146				MOV R1,-(SP)
  1379	004320	010246				MOV R2,-(SP)
  1380	004322	010346				MOV R3,-(SP)
  1381	004324	010546				MOV R5,-(SP)
  1382	004326	016700	163430			MOV KEYBUF,R0
  1383	004332	010003				MOV R0,R3
  1384	004334	042700	007777			BIC #7777,R0		; 12 BIT DATA
  1385	004340	042703	170000			BIC #170000,R3		; KEYBOARD ID
  1386	004344	000303				SWAB R3			; FIND TERMINAL ID FROM KEYBOARD ID
  1387	004346	006203				ASR R3
  1388	004350	006203				ASR R3
  1389	004352	006203				ASR R3
  1390	004354	016303	004500			MOV KEYTAB(R3),R3
  1391	004360	016301	016770			MOV TSTA(R3),R1
  1392	004364	005761	000030			TST TI.BLK(R1)		; IS THE <TI> QUEUE FULL?
  1393	004370	001407				BEQ 4$
  1394	004372	105071	000022			CLRB @CG.FLG(R1)	; THEN SIGNAL FOR A ^G
  1395	004376	016305	016760			MOV RSTA(R3),R5
  1396	004402	005265	000034			INC MR.BLK(R5)		; BE ADAMANT ABOUT IT, BLOCK MP PROCESSING
  1397									; GOING INTO THE <RO> QUEUE
  1398	004406	000423				 BR 5$
  1399	004410	016102	000000		4$:	MOV TI.PTR(R1),R2
  1400	004414	032700	100000			BIT #100000,R0		; SET BIT 15 TO INDICATE THAT BIT CHARACTER
  1401									; WAS FROM KEYBOARD
  1402	004420	010022				MOV R0,(R2)+
  1403	004422	020261	000002			CMP R2,TI.END(R1)
  1404	004426	001002				BNE 1$
  1405	004430	016102	000004			MOV TI.BEG(R1),R2
  1406	004434	020261	000006		1$:	CMP R2,TI.LIM(R1)
  1407	004440	001002				BNE 2$
  1408	004442	005261	000030			INC TI.BLK(R1)
  1409	004446	010261	000000		2$:	MOV R2,TI.PTR(R1)
  1410	004452	105071	000010			CLRB @TI.FLG(R1)
  1411	004456	012767	000240	176464	5$:	MOV #NOPIN,WAITPL
  1412						POP <R5,R3,R2,R1,R0>
  1413					.IRP Y,<R5,R3,R2,R1,R0>
  1414						MOV (SP)+,Y
  1415					.ENDM
  1416	004464	012605				MOV (SP)+,R5
  1417	004466	012603				MOV (SP)+,R3
  1418	004470	012602				MOV (SP)+,R2
  1419	004472	012601				MOV (SP)+,R1
  1420	004474	012600				MOV (SP)+,R0
  1421	004476	000002				RTI
  1422					
  1423					; KEYBOARD VECTOR TABLE ( EACH ENTRY CONTAINS <TTY_CHANNEL_NUMBER>*2)
  1424					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 34
	GLPT;GLDMUX 21	PAGE 1.33 	%%%% INTERRUPT HANDLERS %%%%

  1425					; KEYBOARD 0 -> DIGIVUE (TTY 3)
  1426					; KEYBOARD 1 -> TEKTRONIX ALTERNATE (TTY 1)
  1427					; KEYBOARD 2 -> ANN ARBOR #1 (TTY 4)
  1428					; KEYBOARD 3 -> ANN ARBOR #2 (TTY 5)
  1429					
  1430	004500	000006			KEYTAB:	.WORD 6
  1431	004502	000002				.WORD 2
  1432	004504	000010				.WORD 10
  1433	004506	000012				.WORD 12
  1434					
  1435		004540				.BLKW 14	; LEAVE SPACE FOR TOTAL OF SIXTEEN (DECIMAL) ENTRIES
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 35
	GLPT;GLDMUX 21	PAGE 1.34 	%%%% INTERRUPT HANDLERS %%%%

  1436					; %%%% GOULD INTERRUPT HANDLER %%%%
  1437					
  1438					GLDINT:	PUSH <R0,R4,R5>
  1439					.IRP Y,<R0,R4,R5>
  1440						MOV Y,-(SP)
  1441					.ENDM
  1442	004540	010046				MOV R0,-(SP)
  1443	004542	010446				MOV R4,-(SP)
  1444	004544	010546				MOV R5,-(SP)
  1445	004546	016704	014312			MOV GTLIM,R4
  1446	004552	005767	014332		GLDERR:	TST GLERR		; ARE WE ALREADY IN AN ERROR STATE?
  1447	004556	001017				BNE 2$
  1448	004560	032767	060400	161212		BIT #%GSERR,GLDCSR	; SHOULD WE GO TO AN ERROR STATE?
  1449	004566	001423				BEQ 1$
  1450					
  1451	004570	116767	161205	014324		MOVB GLDCSR+1,STAERR		; YEP
  1452	004576	005267	014306			INC GLERR		; INFORM WORLD THAT GOULD IS IN TROUBLE
  1453	004602	005267	014304			INC PAGMNG		; COUNT OF PAGE MUNGING INCIDENTS
  1454									; FOR END OF GOULD ERROR MONITOR
  1455	004606	105067	176140			CLRB STATBR		; TELL UNSPOOLR WHAT HAPPENED
  1456	004612	000167	000526			JMP GLIXIT
  1457					
  1458	004616	032767	060400	161154	2$:	BIT #%GSERR,GLDCSR	; IS AN ERROR STILL PRESENT?
  1459	004624	001402				BEQ 3$
  1460	004626	000167	000512			 JMP GLIXIT		; YEP
  1461					
  1462	004632	005067	014252		3$:	CLR GLERR		; NOPE, CLEAN UP
  1463								; WE ARE ASSUMING THAT SELECTION IS PRESERVED WHEN SYSTEM
  1464								; RESET IS ACHIEVED FOLLOWING MANUAL ERROR CORRECTION
  1465								; (HOPEFULLY, THIS OCCURS WHEN THE PRINTER IS BROUGHT ON LINE)
  1466					
  1467	004636	000177	014226		1$:	JMP @GLIPTR
  1468					
  1469	004642	005767	014224		CMIDEC:	TST JMPFLG		; IF IN MIDDLE OF JUMP MACRO, SHOULD NOT
  1470									; TEST FOR BUFFER LIMITS OR COMMAND COMPLETION
  1471	004646	001023				 BNE 112$
  1472	004650	020467	014202			CMP R4,GLEND		; ARE WE EQUAL TO OR GREATER THAN THE END OF
  1473									; THE FIRST BUFFER LIMIT?
  1474	004654	103402				BLO 111$
  1475	004656	016704	014176			MOV GLBEG,R4		; THEN CIRCLE AROUND TO BEGINNING
  1476	004662	005767	014206		111$:	TST REPFLG		; IF IN REPEAT, SHOULD NOT TEST COMMAND COMPLETION
  1477	004666	001004				 BNE 1$
  1478	004670	010467	014166			MOV R4,GLLIM		; SUCCESSFUL COMPLETION OF A FULL COMMAND,
  1479									; UPDATE POINTER THAT MAIN PROGRAM LOOKS AT
  1480					
  1481	004674	005067	014166			CLR GLBLK		; IN CASE M.P. IS HUNG FOR LACK OF SPACE
  1482					
  1483	004700	020467	014146		1$:	CMP R4,GLPTR		; NOTHING LEFT TO DO?
  1484	004704	001004				BNE 112$
  1485	004706	005267	014174			INC GLIDL		; COMPLAIN TO WORLD
  1486	004712	000167	000426			JMP GLIXIT
  1487					
  1488	004716	032767	020000	161054	112$:	BIT #%GSPAP,GLDCSR	; IS GOULD RUNNING LOW ON PAPER?
  1489	004724	001405				BEQ 11$
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 36
	GLPT;GLDMUX 21	PAGE 1.35 	%%%% INTERRUPT HANDLERS %%%%

  1490	004726	116767	161047	014166		MOVB GLDCSR+1,STAERR		; YEP
  1491	004734	105067	176012			CLRB STATBR		; TELL UNSPOOLER WHAT IS ABOUT TO HAPPEN
  1492					
  1493	004740	005067	014142		11$:	CLR GLIDL		; WE GOT SOMETHING TO DO
  1494	004744	012400				MOV (R4)+,R0
  1495	004746	100456				BMI 2$			; BRANCH IF INTERNAL MACRO COMMAND
  1496					
  1497	004750	020027	000005		14$:	CMP R0,#5		; IF LAST LINE FLAG, DON'T WANT TO WAIT FOR SBUSY
  1498	004754	001404				BEQ 15$
  1499					
  1500					
  1501	004756	032767	004000	161014		BIT #%GSBSY,GLDCSR
  1502	004764	001036				BNE 12$			; BRANCH IF BUSY
  1503	004766	000300			15$:	SWAB R0
  1504	004770	105700				TSTB R0			; TEST FOR DELAYED COMMAND
  1505	004772	001024				BNE 4$
  1506					
  1507					; IMMEDIATE GOULD COMMAND
  1508	004774	000300				SWAB R0
  1509	004776	032700	000170			BIT #170,R0		; THE FOUR UNUSED BITS IN THE GOULD
  1510									; COMMAND BYTE
  1511	005002	001411				 BEQ 115$
  1512	005004	012705	010662			MOV #PAGLST,R5		; REQUEST FOR TAILSHEET PAGE MUNGING STATUS
  1513	005010	016700	014076			MOV PAGMNG,R0
  1514						CALL CHRNUM
  1515	005014	004767	004126			JSR PC,CHRNUM
  1516	005020	005067	014066			CLR PAGMNG		; RESET FOR NEXT FILE
  1517	005024	000402				 BR 116$
  1518	005026	110067	160746		115$:	MOVB R0,GLDCSR
  1519	005032	012767	004642	014030	116$:	MOV #CMIDEC,GLIPTR
  1520	005040	000167	177576			 JMP CMIDEC
  1521					
  1522					; DELAYED GOULD COMMAND
  1523	005044	000300			4$:	SWAB R0
  1524	005046	110067	160726			MOVB R0,GLDCSR
  1525	005052	012767	004642	014010		MOV #CMIDEC,GLIPTR
  1526	005060	000531				BR GLIXIT	
  1527					
  1528	005062	010067	014010		12$:	MOV R0,PNDR0
  1529	005066	012767	005076	013774		MOV #13$,GLIPTR
  1530	005074	000523				 BR GLIXIT
  1531						
  1532	005076	016700	013774		13$:	MOV PNDR0,R0
  1533	005102	000722				BR 14$
  1534					
  1535					
  1536					2$:
  1537					; MOBY COMMAND
  1538	005104	032700	017400			BIT #17400,R0
  1539	005110	001061				BNE 5$			; DMA COMMAND
  1540	005112	032700	040000			BIT #40000,R0		; REPEAT COMMAND
  1541	005116	001024				BNE 3$
  1542	005120	032700	020000			BIT #20000,R0		; CURRENT PAGE COMMAND
  1543	005124	001047				BNE 6$
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 37
	GLPT;GLDMUX 21	PAGE 1.36 	%%%% INTERRUPT HANDLERS %%%%

  1544					
  1545					
  1546					; JMP COMING UP
  1547	005126	032700	000001			BIT #1,R0
  1548	005132	001406				BEQ 21$
  1549					
  1550					; POP
  1551	005134	016704	013740			MOV JMPRET,R4
  1552	005140	005067	013726			CLR JMPFLG
  1553	005144	000167	177472			 JMP CMIDEC
  1554					
  1555					;PUSH
  1556	005150	012400			21$:	MOV (R4)+,R0		; PUT JUMP ADDRESS INTO R0
  1557	005152	010467	013722			MOV R4,JMPRET		; JMPRET IS ADDRESS AFTER JUMP COMMAND
  1558	005156	005267	013710			INC JMPFLG
  1559	005162	010004				MOV R0,R4
  1560	005164	000167	177452			 JMP CMIDEC
  1561					
  1562					3$:
  1563					; REPEAT COMING UP
  1564	005170	032700	000001			BIT #1,R0
  1565	005174	001413				BEQ 31$
  1566					
  1567					; POP
  1568	005176	005367	013702			DEC REPCNT
  1569	005202	001004				 BNE 32$
  1570	005204	005067	013664			CLR REPFLG
  1571	005210	000167	177426			 JMP CMIDEC		; R4 IS LEFT POINT TO INSTRUCTION AFTER REPEAT LOOP
  1572					
  1573					32$:
  1574					; ITERATE
  1575	005214	016704	013662			MOV REPRET,R4
  1576	005220	000167	177416			 JMP CMIDEC
  1577					
  1578					
  1579					
  1580					;PUSH
  1581	005224	012467	013654		31$:	MOV (R4)+,REPCNT	; REPEAT COUNT GOES INTO R0
  1582	005230	010467	013646			MOV R4,REPRET		; REPRET IS THE ADDRESS OF BEGINNING OF LOOP
  1583	005234	005267	013634			INC REPFLG
  1584	005240	000167	177376			 JMP CMIDEC
  1585					
  1586					6$:
  1587					; CURRENT PAGE COMMAND COMING UP
  1588	005244	110067	013650			MOVB R0,STAPAG
  1589	005250	000167	177366			 JMP CMIDEC
  1590					
  1591					5$:
  1592					; DMA COMMAND COMMING UP
  1593	005254	032767	002000	160516		BIT #%GSDON,GLDCSR
  1594	005262	001424				 BEQ 51$
  1595	005264	010067	160512			MOV R0,GLDWC		; COUNT
  1596	005270	010467	160510			MOV R4,GLDCA		; ADDRESS
  1597	005274	005400				NEG R0
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 38
	GLPT;GLDMUX 21	PAGE 1.37 	%%%% INTERRUPT HANDLERS %%%%

  1598	005276	006300				ASL R0
  1599	005300	060004				ADD R0,R4
  1600					
  1601	005302	032767	002000	160470	53$:	BIT #%GSDON,GLDCSR
  1602	005310	001405				 BEQ 52$
  1603	005312	012767	004642	013550		MOV #CMIDEC,GLIPTR
  1604	005320	000167	177316			 JMP CMIDEC
  1605					
  1606	005324	012767	005302	013536	52$:	MOV #53$,GLIPTR
  1607	005332	000404				 BR GLIXIT
  1608					
  1609	005334	012767	005254	013526	51$:	MOV #5$,GLIPTR
  1610	005342	000400				 BR GLIXIT
  1611					
  1612	005344	010467	013514		GLIXIT:	MOV R4,GTLIM
  1613					
  1614						POP <R5,R4,R0>
  1615					.IRP Y,<R5,R4,R0>
  1616						MOV (SP)+,Y
  1617					.ENDM
  1618	005350	012605				MOV (SP)+,R5
  1619	005352	012604				MOV (SP)+,R4
  1620	005354	012600				MOV (SP)+,R0
  1621	005356	000002				RTI
  1622					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 39
	GLPT;GLDMUX 21	PAGE 1.38 	%%%% INTERRUPT HANDLERS %%%%

  1623					; %%%% ANN ARBOR DISPALY MULTIPLEXOR INTERRUPT HANDLER %%%%
  1624					; REMEMBER TO CLEAR INTERRUPT ENABLES IN INITIALIZATION
  1625					;SPECIAL QUEUE
  1626					
  1627					AAMINT:	PUSH <R0,R1,R2>
  1628					.IRP Y,<R0,R1,R2>
  1629						MOV Y,-(SP)
  1630					.ENDM
  1631	005360	010046				MOV R0,-(SP)
  1632	005362	010146				MOV R1,-(SP)
  1633	005364	010246				MOV R2,-(SP)
  1634	005366	012701	020776			MOV #AAMST,R1
  1635	005372	016102	000006			MOV AA.LIM(R1),R2
  1636	005376	012200				MOV (R2)+,R0
  1637	005400	020261	000002			CMP R2,AA.END(R1)
  1638	005404	001002				 BNE 1$
  1639	005406	016102	000004			MOV AA.BEG(R1),R2
  1640					1$:	MASK 7
  1641						PUSH %PS
  1642					.IRP Y,<%PS>
  1643						MOV Y,-(SP)
  1644					.ENDM
  1645	005412	016746	172360			MOV %PS,-(SP)
  1646	005416	012767	000340	172352		MOV #<7>_5,%PS
  1647	005424	020261	000000			CMP R2,AA.PTR(R1)
  1648	005430	001003				BNE 2$
  1649	005432	042767	000100	162330		BIC #100,AAMSTA
  1650					2$:	UNMASK
  1651						POP %PS
  1652					.IRP Y,<%PS>
  1653						MOV (SP)+,Y
  1654					.ENDM
  1655	005440	012667	172332			MOV (SP)+,%PS
  1656	005444	010067	162322			MOV R0,AAMBUF
  1657	005450	010261	000006			MOV R2,AA.LIM(R1)
  1658	005454	005061	000010			CLR AA.BLK(R1)
  1659						POP <R2,R1,R0>
  1660					.IRP Y,<R2,R1,R0>
  1661						MOV (SP)+,Y
  1662					.ENDM
  1663	005460	012602				MOV (SP)+,R2
  1664	005462	012601				MOV (SP)+,R1
  1665	005464	012600				MOV (SP)+,R0
  1666	005466	000002				RTI
  1667					
  1668					
  1669	005470	000002			DGRINT:	RTI
  1670					
  1671	005472	000002			DGXINT:	RTI
  1672					
  1673	005474	000002			NULL:	RTI
  1674					
  1675					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 40
	GLPT;GLDMUX 21	PAGE 1.39 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  1676					.SBTTL MAIN PROGRAM QUEUE PROCESSING ROUTINES
  1677					; %%%% MAIN PROGRAM ROUTINE FOR RECEIVED CHARACTER PROCESSING %%%%
  1678					
  1679	005476	016301	016760		MRTYSB:	MOV RSTA(R3),R1		; CREATE POINTER TO RECEIVE STATUS BLOCK
  1680	005502	005761	000032			TST RO.BLK(R1)
  1681	005506	001003				 BNE 11$
  1682	005510	005761	000034			TST MR.BLK(R1)
  1683	005514	001403				 BEQ 10$
  1684	005516	062716	000004		11$:	ADD #4,(SP)
  1685						RET
  1686	005522	000207				RTS PC
  1687	005524	016102	000006		10$:	MOV RI.LIM(R1),R2
  1688	005530	112200				MOVB (R2)+,R0		; PICK UP CHARACTER
  1689	005532	020261	000002			CMP R2,RI.END(R1)	; ARE WE AT THE END OF THE BUFFER?
  1690	005536	001002				 BNE 1$
  1691	005540	016102	000004			MOV RI.BEG(R1),R2	; CIRCLE AROUND TO BEGINNING THEN
  1692	005544	016104	000012		1$:	MOV RO.PTR(R1),R4	;			"
  1693	005550	110024				MOVB R0,(R4)+		; PUT THE CHAR INTO THE RECEIVE OUTPUT BUFFER
  1694	005552	020461	000014			CMP R4,RO.END(R1)	; ARE WE AT THE END OF THE BUFFER?
  1695	005556	001002				BNE 2$
  1696	005560	016104	000016			MOV RO.BEG(R1),R4	; CIRCLE AROUND TO BEGINNING THEN
  1697	005564	020461	000020		2$:	CMP R4,RO.LIM(R1)	; ANY ROOM IN THE RECEIVE OUTPUT BUFFER?
  1698	005570	001002				 BNE 6$
  1699	005572	005261	000032			INC RO.BLK(R1)		; BLOCK QUEUE
  1700	005576	010461	000012		6$:	MOV R4,RO.PTR(R1)	; UPDATE POINTER
  1701	005602	052767	000340	172166		BIS #PRIOR7,%PS				; MASK
  1702	005610	020261	000000			CMP R2,RI.PTR(R1)	; GOT ANY MORE CHARACTERS LEFT?
  1703					; IF NEED CHARACTERS TO COME OUT IN EXACT SEQUENTIAL ORDER,
  1704					; SET CG.BLK AND CLEAR WHEN FINISHED (NO ^G ON TI BUFFER FULL)
  1705					
  1706					
  1707	005614	001003				 BNE 3$
  1708	005616	016373	002152	017020		MOV SRTY(R3),@MRTY(R3)	; NOPE, PATCH UP BRANCH INSTRUCTION
  1709	005624	042767	000340	172144	3$:	BIC #PRIOR0,%PS				; UNMASK
  1710	005632	010261	000006			MOV R2,RI.LIM(R1)	; UPDATE POINTER
  1711	005636	005363	017120			DEC ALNUM(R3)		; UPDATE ALLOCATION
  1712	005642	003001				BGT 4$
  1713	005644	000000				HALT			; ALLOCATION SCREWED
  1714	005646	026327	017120	000137	4$:	CMP ALNUM(R3),#ALCLIM	; NEED TO ALLOCATE CHARACTERS?
  1715	005654	002002				BGE 5$
  1716						CALL ALLCSB		; CALL ALLOCATION SUBROUTINE
  1717	005656	004767	004346			JSR PC,ALLCSB
  1718	005662	012767	000001	175260	5$:	MOV #WAITIN,WAITPL	; PATCH WAIT INSTRUCTION
  1719	005670	052773	000100	017110		BIS #100,@XTST(R3)	; ACTIVATE INTERRUPT FOR OUTPUT TO DEVICE
  1720						RET
  1721	005676	000207				RTS PC
  1722					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 41
	GLPT;GLDMUX 21	PAGE 1.40 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  1723					; %%%% MAIN PROGRAM ROUTINE FOR TRANSMITED CHARACTER PROCESSING %%%%
  1724					
  1725	005700	016301	016770		MTTYSB:	MOV TSTA(R3),R1
  1726	005704	005761	000034			TST MT.BLK(R1)
  1727	005710	001003				BNE 11$
  1728	005712	005771	000032			TST @TO.BLK(R1)		; IS OUTPUT BLOCKED
  1729	005716	001403				 BEQ 10$
  1730	005720	062716	000004		11$:	ADD #4,(SP)		; YEP, PRETEND NOTHING HAPPENED
  1731						RET
  1732	005724	000207				RTS PC
  1733	005726	016102	000006		10$:	MOV TI.LIM(R1),R2
  1734	005732	005761	000044		110$:	TST TS.CNT(R1)
  1735	005736	001417				BEQ 100$
  1736					
  1737					; TEMPORARY STRING HANDLER
  1738					; NOTE, REMEMBER TO SET TS.PTR AND TS.CNT IN INTIALIZER
  1739	005740	017100	000042			MOV @TS.PTR(R1),R0
  1740	005744	005361	000044			DEC TS.CNT(R1)
  1741	005750	001006				BNE 111$
  1742	005752	016361	017010	000042		MOV TSTR(R3),TS.PTR(R1)
  1743	005760	005061	000036			CLR AL.BLK(R1)
  1744	005764	000472				BR 12$
  1745					
  1746	005766	062761	000002	000042	111$:	ADD #2,TS.PTR(R1)
  1747	005774	000466				BR 12$
  1748					
  1749	005776	012200			100$:	MOV (R2)+,R0
  1750	006000	020261	000002			CMP R2,TI.END(R1)
  1751	006004	001002				 BNE 1$
  1752	006006	016102	000004			MOV TI.BEG(R1),R2
  1753	006012	017104	000012		1$:	MOV @TO.PTR(R1),R4
  1754	006016	042700	100000			BIC #100000,R0		; CLEAR OUT BIT, WHICH WHEN SET, INDICATES SOURCE
  1755									; OF CHARACTER, BIT =0 IMPLIES THE DEVICE, BIT =1
  1756									; IMPLIES THE KEYBOARD MULTIPLEXOR
  1757	006022	020027	000034			CMP R0,#CBSL		; CNTL BACKSLASH?
  1758	006026	001015				BNE 22$
  1759					; CONTROL BACKSLASH HANDLER (I.E. QUOTE IT WITH ANOTHER CNTL BACKSLASH)
  1760	006030	016105	000042			MOV TS.PTR(R1),R5
  1761	006034	010025				MOV R0,(R5)+
  1762	006036	010025				MOV R0,(R5)+
  1763	006040	012761	000002	000044		MOV #2,TS.CNT(R1)
  1764	006046	016361	017010	000042		MOV TSTR(R3),TS.PTR(R1)
  1765	006054	005261	000036			INC AL.BLK(R1)
  1766	006060	000724				BR 110$
  1767					
  1768	006062	032700	007600		22$:	BIT #7600,R0		; ANY META, CNTL, TOP, ETC. STUFF?
  1769	006066	001431				BEQ 12$
  1770					
  1771					; %%%% INSERT 12 BIT CODE HANDLER HERE %%%%
  1772	006070	010005				MOV R0,R5
  1773	006072	042700	177600			BIC #177600,R0
  1774	006076	006305				ASL R5
  1775	006100	000305				SWAB R5
  1776	006102	042705	177740			BIC #177740,R5
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 42
	GLPT;GLDMUX 21	PAGE 1.41 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  1777	006106	052705	000100			BIS #100,R5
  1778						PUSH R5			; CONSTRUCT TEMPORARY CHARACTER STRING FOR SPECIAL
  1779					.IRP Y,<R5>
  1780						MOV Y,-(SP)
  1781					.ENDM
  1782	006112	010546				MOV R5,-(SP)
  1783									; CHARACTER ESCAPE SEQUENCE
  1784	006114	016105	000042			MOV TS.PTR(R1),R5
  1785	006120	012725	000034			MOV #CBSL,(R5)+
  1786	006124	012625				MOV (SP)+,(R5)+
  1787	006126	010025				MOV R0,(R5)+
  1788					; NOTE, SHOULD WE QUOTE A ^/ IF THAT IS THE THIRD CHARACTER IN THE ESCAPE?
  1789					; SEQUENCE ... I DON'T THINK SO
  1790	006130	012761	000003	000044		MOV #3,TS.CNT(R1)
  1791	006136	016361	017010	000042		MOV TSTR(R3),TS.PTR(R1)
  1792	006144	005261	000036			INC AL.BLK(R1)
  1793	006150	000670				BR 110$
  1794					
  1795	006152	116146	000025		12$:	MOVB TTYNUM(R1),-(SP)	; CONSTRUCT CHARACTER MESSAGE (CHARACTER,,LINE SELECT)
  1796	006156	110066	000001			MOVB R0,1(SP)
  1797	006162	012624				MOV (SP)+,(R4)+
  1798	006164	020471	000014			CMP R4,@TO.END(R1)
  1799	006170	001002				 BNE 2$
  1800	006172	017104	000016			MOV @TO.BEG(R1),R4
  1801	006176	020471	000020		2$:	CMP R4,@TO.LIM(R1)
  1802	006202	001002				 BNE 3$
  1803	006204	005271	000032			INC @TO.BLK(R1)
  1804	006210	010471	000012		3$:	MOV R4,@TO.PTR(R1)
  1805	006214	005761	000044			TST TS.CNT(R1)
  1806	006220	001014				 BNE 51$
  1807	006222	052767	000340	171546		BIS #PRIOR7,%PS		;MASK
  1808	006230	020261	000000			CMP R2,TI.PTR(R1)
  1809	006234	001003				 BNE 4$
  1810	006236	016373	002166	017040		MOV STTY(R3),@MTTY(R3)
  1811	006244	042767	000340	171524	4$:	BIC #PRIOR7,%PS		;UNMASK
  1812	006252	010261	000006		51$:	MOV R2,TI.LIM(R1)
  1813	006256	005061	000030			CLR TI.BLK(R1)
  1814	006262	012767	000001	174660	5$:	MOV #WAITIN,WAITPL
  1815	006270	052767	000100	167316		BIS #100,XDST0
  1816						RET
  1817	006276	000207				RTS PC
  1818					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 43
	GLPT;GLDMUX 21	PAGE 1.42 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  1819					; %%%% GOULD MAIN PROGRAM ROUTINE %%%%
  1820					
  1821	006300	016301	016760		MRGLSB:	MOV RSTA(R3),R1
  1822					;	TST MR.BLK(R1)		; NOTHING SHOULD SET THIS
  1823					;	 BNE 11$
  1824					;	TST RO.BLK(R1)		; UNNECESSARY UNTIL WE GET A CONSOLE DEVICE
  1825					;	 BNE 11$
  1826	006304	005767	012556			TST GLBLK		; OUTPUT QUEUE FILLED
  1827	006310	001003				 BNE 11$
  1828	006312	005767	012572			TST GLERR		; IN THE MIDST OF SOME ERROR
  1829	006316	001403				 BEQ 10$
  1830	006320	062716	000004		11$:	ADD #4,(SP)
  1831						RET
  1832	006324	000207				RTS PC
  1833					
  1834	006326	016102	000006		10$:	MOV RI.LIM(R1),R2
  1835	006332	016704	012516			MOV GTPTR,R4		; TEMPORARY POINTER (NECESSARY SINCE ITEMS
  1836									; IN QUEUE HAVE "WIDTH")
  1837					
  1838	006336	000177	012464		JMPDEC:	JMP @GLDPND		; DISPATCH TO ANY PENDING OPERATIONS DUE TO GL QUEUE
  1839									; BLOCKAGE (DEFAULT IS CHRDEC)
  1840					
  1841	006342	005363	017120		CHRDEC:	DEC ALNUM(R3)
  1842	006346	003001				BGT 4$
  1843	006350	000000				HALT
  1844	006352	112200			4$:	MOVB (R2)+,R0		; PICK UP CHARACTER
  1845	006354	100055				BPL DATHAC		; SKIP AROUND IF CHARACTER IS NOT AN EIGHT BIT CODE
  1846	006356	005767	012454			TST QOTFLG		; IS THIS CHARACTER TO BE QUOTED?
  1847	006362	001403				 BEQ 2$
  1848	006364	005067	012446			CLR QOTFLG		; YEP, PASS IT ON
  1849	006370	000454				BR DATACH
  1850	006372	120027	000301		2$:	CMPB R0,#%CCACK		; ARE WE BEING PAGED?
  1851	006376	001007				 BNE HERE
  1852	006400	116767	157375	012514		MOVB GLDCSR+1,STAERR
  1853	006406	105067	174340			CLRB STATBR		; RESPOND WITH STATUS (ACTIVATE DAEMON)
  1854	006412	000167	001606			 JMP GLOOP
  1855					
  1856	006416	120027	000205		HERE:	CMPB R0,#%CCSOD		; START OF DATA?
  1857	006422	001004				BNE 4$
  1858	006424	005067	012404			CLR EODFLG		; YEP, FLAG START OF DATA
  1859	006430	000167	001570			 JMP GLOOP
  1860	006434	005767	012374		4$:	TST EODFLG		; ARE WE RECEIVING RANDOM CHARACTERS?
  1861	006440	001402				 BEQ 51$
  1862	006442	000167	001556			 JMP GLOOP		; FORGET THEM
  1863	006446	120027	000215		51$:	CMPB R0,#%CCQOT		; SHOULD WE QUOTE THE NEXT CHARACTER?
  1864	006452	001004				 BNE 5$
  1865	006454	005267	012356			INC QOTFLG		; YEP
  1866	006460	000167	001540			 JMP GLOOP
  1867	006464	120027	000206		5$:	CMPB R0,#%CCEOD		; END OF DATA?
  1868	006470	001014				 BNE DATACH
  1869	006472	005267	012336			INC EODFLG		; YEP, FLAG END OF DATA
  1870	006476	052767	000100	171042		BIS #100,%LKS 		; START UP CLOCK (COUNT DOWN FOR SMEAR PAGE)
  1871	006504	000167	001514			 JMP GLOOP
  1872					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 44
	GLPT;GLDMUX 21	PAGE 1.43 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  1873	006510	005767	012320		DATHAC:	TST EODFLG		; NON EIGHT BIT CODE, IS IT RANDOM DATA?
  1874	006514	001402				BEQ DATACH
  1875	006516	000167	001502			JMP GLOOP
  1876					
  1877	006522	000177	012302		DATACH:	JMP @WRDPTR		; MUST BE DATA THEN
  1878					
  1879	006526	110067	012270		MAKWD1:	MOVB R0,TMPWRD		;FIRST PIECE OF WORD
  1880	006532	012767	006544	012270		MOV #MAKWD2,WRDPTR
  1881	006540	000167	001460			 JMP GLOOP
  1882					
  1883	006544	110067	012253		MAKWD2:	MOVB R0,TMPWRD+1	;SECOND PIECE OF WORD
  1884	006550	012767	006526	012252		MOV #MAKWD1,WRDPTR
  1885					
  1886	006556	000177	012250			JMP @GLDPTR		; DISPATCH TO PROPER COMMAND HANDLER
  1887					
  1888	006562	005767	012234		DATDEC:	TST TMPWRD		; COMMAND OR LINE BUFFER?
  1889	006566	100402				 BMI COMDEC
  1890	006570	000167	000402			 JMP DMADEC		; BIT 15 NOT SET, LINE BUFFER
  1891					
  1892					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 45
	GLPT;GLDMUX 21	PAGE 1.44 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  1893					; %%%% COMMAND DECODING %%%%
  1894					
  1895					
  1896	006574	042767	100000	012220	COMDEC:	BIC #100000,TMPWRD	; REMOVE COMMAND BIT
  1897	006602	010405				MOV R4,R5
  1898	006604	062705	000004			ADD #4,R5		; ADD 4, R5 POINTS TO LAST LOCATION IN POTENTIAL COMMAND
  1899					
  1900	006610	052767	000340	171160		BIS #PRIOR7,%PS		;MASK
  1901	006616	026767	012232	012236		CMP GTPTR,GLLIM		; ARE WE AHEAD OF PICK UP POINTER ANYWAY?  (THEN OK)
  1902	006624	103015				BHIS 2$
  1903	006626	020567	012230			CMP R5,GLLIM		; IF WE GO THROUGH WITH THIS COMMAND, WILL WE
  1904									; LAP OTHER POINTER?  (THEN NOT OK)
  1905	006632	103412				BLO 2$
  1906	006634	005267	012226			INC GLBLK		; GL QUEUE IS BLOCKED, WAIT FOR QUEUE TO EMPTY A LITTLE
  1907	006640	042767	000340	171130		BIC #PRIOR0,%PS
  1908	006646	012767	006574	012152		MOV #COMDEC,GLDPND	; AND MAKE SURE WE WIND UP IN THE RIGHT PLACE ON RETURN
  1909	006654	000167	001340			 JMP GLDXIT
  1910	006660	042767	000340	171110	2$:	BIC #PRIOR0,%PS		; NO PROBLEM
  1911	006666	012767	006342	012132		MOV #CHRDEC,GLDPND
  1912					
  1913	006674	032767	040000	012120		BIT #40000,TMPWRD	; MACRO BIT TEST
  1914	006702	001437				 BEQ DLYTST		; NOPE, IS STANDARD OR PSEUDO COMMAND
  1915					
  1916					; GOULD MACRO COMMANDS
  1917	006704	116767	012112	000066		MOVB TMPWRD,UPWORD	; UP COMING PAGE NUMBER
  1918	006712	116700	012105			MOVB TMPWRD+1,R0
  1919	006716	042700	177700			BIC #177700,R0	
  1920	006722	006200				ASR R0
  1921	006724	006200				ASR R0
  1922	006726	006200				ASR R0
  1923	006730	016724	000044			MOV UPWORD,(R4)+
  1924	006734	012724	100000			MOV #100000,(R4)+
  1925	006740	016024	006770			MOV MACTAB(R0),(R4)+
  1926	006744	006200				ASR R0
  1927	006746	010067	012066			MOV R0,GRFFLG
  1928	006752	020027	000003			CMP R0,#3
  1929	006756	001002				BNE 4$
  1930	006760	005067	012054			CLR GRFFLG
  1931	006764	000167	001146		4$:	 JMP GLDFIN		; COMPLETION OF COMMAND
  1932						
  1933	006770	010356			MACTAB:	.WORD SALBLK
  1934	006772	010366				.WORD SLGBLK
  1935	006774	010402				.WORD SHGBLK
  1936	006776	010414				.WORD EOFBLK
  1937					
  1938	007000	120000			UPWORD:	.WORD 120000
  1939					
  1940					
  1941					; NORMAL GOULD COMMANDS
  1942					
  1943					;DETERMINE IF THIS IS A DELAYED COMMAND
  1944	007002	032767	000200	012012	DLYTST:	BIT #200,TMPWRD		; LINE ADVANCE OR HOME? (OR PSEUDO COMMAND)
  1945	007010	001031				 BNE DLAYCM
  1946	007012	122767	000003	012002		CMPB #%GCON,TMPWRD	; ENABLE?
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 46
	GLPT;GLDMUX 21	PAGE 1.45 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  1947	007020	001425				 BEQ DLAYCM
  1948	007022	105767	011774			TSTB TMPWRD		; FEED?
  1949	007026	001422				BEQ DLAYCM
  1950					
  1951					;IF WE GOT TO HERE, MUST BE AN IMMEDIATE COMMAND
  1952	007030	122767	000001	011764		CMPB #%GCGRF,TMPWRD	; GRAPHIC SELECT?
  1953	007036	001002				 BNE 1$
  1954	007040	005267	011774			INC GRFFLG
  1955	007044	122767	000004	011750	1$:	CMPB #%GCOFF,TMPWRD	; DISABLE?
  1956	007052	001002				 BNE 2$
  1957	007054	005067	011760			CLR GRFFLG		; CLEAR MODE SELECTION
  1958	007060	105067	011737		2$:	CLRB TMPWRD+1		; IMMEDIATE COMMAND SIGNIFIED BY 0 IN BYTE 1
  1959	007064	016724	011732			MOV TMPWRD,(R4)+
  1960	007070	000167	001042			 JMP GLDFIN		; COMPLETION OF A COMMAND
  1961					
  1962	007074	032767	000100	011720	DLAYCM:	BIT #100,TMPWRD
  1963	007102	001426				BEQ HERE4
  1964					
  1965					; REQUEST FOR REPEAT, IN ACTUALITY
  1966	007104	032767	000002	011710		BIT #2,TMPWRD
  1967	007112	001007				BNE 1$
  1968					
  1969					; START OF REPEAT
  1970	007114	012724	140000			MOV #140000,(R4)+
  1971	007120	012767	007142	011704		MOV #REPTRN,GLDPTR	; WE NEED ANOTHER WORD HERE (THE REPEAT COUNT)
  1972	007126	000167	001066			 JMP GLDXIT
  1973					
  1974					; END OF REPEAT
  1975	007132	012724	140001		1$:	MOV #140001,(R4)+
  1976	007136	000167	000774			 JMP GLDFIN		; COMPLETION OF A COMMAND
  1977					
  1978	007142	016724	011654		REPTRN:	MOV TMPWRD,(R4)+
  1979	007146	012767	006562	011656		MOV #DATDEC,GLDPTR
  1980	007154	000167	000756			 JMP GLDFIN		; COMPLETION OF A COMAND
  1981					
  1982					
  1983	007160	112767	000001	011635	HERE4:	MOVB #1,TMPWRD+1	; DELAYED COMMAND SIGNIFIED BY 1 IN BYTE 1
  1984	007166	016724	011630			MOV TMPWRD,(R4)+
  1985	007172	000167	000740			JMP GLDFIN		; COMPLETION OF A COMMAND
  1986					
  1987					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 47
	GLPT;GLDMUX 21	PAGE 1.46 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  1988					; %%%% DMA BUFFER DECODING %%%%
  1989					
  1990					
  1991	007176	005767	011636		DMADEC:	TST GRFFLG
  1992	007202	001510				BEQ ALPHAM		; MUST BE ALPHA MODE
  1993					
  1994					; %%%% GRAPHICS MODE %%%%
  1995					
  1996	007204	032767	000200	011610	GRAPHM:	BIT #200,TMPWRD		; RUN LENGTH ENCODED?
  1997	007212	001402				 BEQ IMAGE
  1998	007214	000167	000360			 JMP RUNLEN		; YEP
  1999					
  2000					; %%%% IMAGE TYPE GRAPHICS %%%%
  2001					
  2002	007220	116767	011576	011564	IMAGE:	MOVB TMPWRD,DATLEN	; LENGTH OF DATA
  2003	007226	116705	011571			MOVB TMPWRD+1,R5
  2004	007232	010567	011552			MOV R5,MARLEN		; LENGTH OF MARGIN
  2005	007236	066705	011550			ADD DATLEN,R5		; TOTAL SIZE OF BUFFER (IN WORDS)
  2006	007242	010567	011552			MOV R5,MARLN1		; SAVE FOR DMA COUNT
  2007	007246	006305				ASL R5			; NOW IN BYTES
  2008	007250	060405				ADD R4,R5
  2009									; LOCATION OF PROPOSED BUFFER
  2010					
  2011	007252	052767	000340	170516		BIS #PRIOR7,%PS		; MASK
  2012	007260	020467	011576			CMP R4,GLLIM		; ARE WE AHEAD OF PICK UP POINTER ANYWAY? (THEN OK)
  2013	007264	103015				BHIS 4$
  2014	007266	020567	011570			CMP R5,GLLIM		; IF WE GO THROUGH WITH THIS BUFFER, WILL WE
  2015									; LAP THE OTHER POINTER? (THEN NOT OK)
  2016	007272	103412				BLO 4$
  2017	007274	005267	011566			INC GLBLK		; BLOCKED OUTPUT, WAIT FOR QUEUE TO EMPTY A LITTLE
  2018	007300	042767	000340	170470		BIC #PRIOR0,%PS		; UNMASK
  2019	007306	012767	007220	011512		MOV #IMAGE,GLDPND	; MAKE SURE WE COME BACK TO THE RIGHT PLACE
  2020	007314	000167	000700			 JMP GLDXIT		; NEED MORE SPACE
  2021					
  2022	007320	042767	000340	170450	4$:	BIC #PRIOR0,%PS		; NO PROBLEM
  2023	007326	012767	006342	011472		MOV #CHRDEC,GLDPND	; WE HAVE ENOUGH SPACE NOW
  2024					
  2025	007334	005467	011460			NEG MARLN1		; NEGATION OF TOTAL SIZE OF BUFFER
  2026	007340	016724	011454			MOV MARLN1,(R4)+	; WORD COUNT HEADER FOR DMA COMMAND
  2027	007344	005767	011440			TST MARLEN		; ZERO MARGIN?
  2028	007350	001404				BEQ 2$
  2029	007352	005024			1$:	CLR (R4)+
  2030	007354	005367	011430		3$:	DEC MARLEN
  2031	007360	001374				BNE 1$
  2032	007362	012767	007374	011442	2$:	MOV #IMTRAN,GLDPTR
  2033	007370	000167	000624			 JMP GLDXIT		; NEED MORE WORDS (REST OF LINE BUFFER)
  2034					
  2035					
  2036	007374	016724	011422		IMTRAN:	MOV TMPWRD,(R4)+
  2037	007400	005367	011406			DEC DATLEN
  2038	007404	001402				 BEQ 2$
  2039	007406	000167	000606			 JMP GLDXIT		; IF MORE IMAGE DATA COMING (NEED MORE WORDS)
  2040	007412	012767	006562	011412	2$:	MOV #DATDEC,GLDPTR	; DON'T NEED ANY MORE WORDS
  2041	007420	000167	000512			 JMP GLDFIN		; COMPLETION OF COMMAND
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 48
	GLPT;GLDMUX 21	PAGE 1.47 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2042					
  2043					; %%%% ALPHA %%%%
  2044					
  2045	007424	116705	011372		ALPHAM:	MOVB TMPWRD,R5
  2046	007430	010567	011356			MOV R5,DATLEN
  2047	007434	010567	011354			MOV R5,DATLN1
  2048	007440	006305				ASL R5
  2049	007442	060405				ADD R4,R5
  2050					
  2051					
  2052	007444	052767	000340	170324		BIS #PRIOR7,%PS		;MASK
  2053	007452	020467	011404			CMP R4,GLLIM		; ARE WE AHEAD OF PICK UP POINTER ANYWAY? (OK)
  2054	007456	103015				BHIS 2$
  2055	007460	020567	011376			CMP R5,GLLIM		; IF WE GO THROUGH WITH THIS BUFFER, WILL WE
  2056									; LAP OTHER POINTER? (NOT OK)
  2057	007464	103412				BLO 2$
  2058	007466	005267	011374			INC GLBLK		; BLOCKED OUTPUT, WAIT FOR QUEUE TO EMPTY A LITTLE
  2059	007472	042767	000340	170276		BIC #PRIOR0,%PS		;UNMASK
  2060	007500	012767	007424	011320		MOV #ALPHAM,GLDPND	; MAKE SURE WE COME BACK HERE (NEED MORE SPACE)
  2061	007506	000167	000506			 JMP GLDXIT
  2062	007512	042767	000340	170256	2$:	BIC #PRIOR0,%PS		;UNMASK, NO PROBLEM
  2063	007520	012767	006342	011300		MOV #CHRDEC,GLDPND	; WE'VE GOT THE SPACE NOW
  2064					
  2065	007526	005467	011262			NEG DATLN1
  2066	007532	016724	011256			MOV DATLN1,(R4)+
  2067	007536	012767	007550	011266		MOV #ALPTRN,GLDPTR	; GOBBLE WORDS FOR BUFFER
  2068	007544	000167	000450			 JMP GLDXIT
  2069					
  2070	007550	016724	011246		ALPTRN:	MOV TMPWRD,(R4)+
  2071	007554	005367	011232			DEC DATLEN
  2072	007560	001402				 BEQ 2$
  2073	007562	000167	000432			 JMP GLDXIT		; WE NEED MORE WORDS
  2074	007566	012767	006562	011236	2$:	MOV #DATDEC,GLDPTR
  2075	007574	000167	000336			 JMP GLDFIN		; COMPLETION OF COMMAND
  2076					
  2077					
  2078					; %%%% RUN LENGTH ENCODED TYPE GRAPHICS %%%%
  2079					
  2080	007600	116767	011216	011210	RUNLEN: MOVB TMPWRD,ENCLEN
  2081	007606	042767	177600	011202		BIC #STRIP,ENCLEN	; WORD COUNT OF RUN LENGTH ENCODED DATA
  2082	007614	012767	007626	011210		MOV #RUNLN2,GLDPTR	; WE NEED ANOTHER WORD OF COMMAND
  2083	007622	000167	000372			 JMP GLDXIT
  2084					
  2085	007626	005067	011210		RUNLN2:	CLR COLOR
  2086	007632	116767	011164	011150		MOVB TMPWRD,MARLEN
  2087	007640	100005				 BPL 1$
  2088	007642	005267	011174			INC COLOR
  2089	007646	042767	177600	011134		BIC #STRIP,MARLEN	; LENGTH OR MARGIN (IN WORDS)
  2090	007654	116705	011143		1$:	MOVB TMPWRD+1,R5
  2091	007660	042705	177600			BIC #STRIP,R5		; LENGTH OF DECODED BUFFER, LESS MARGIN
  2092	007664	066705	011120			ADD MARLEN,R5		; TOTAL LENGTH OF BUFFER (IN WORDS)
  2093	007670	010567	011116			MOV R5,DATLEN
  2094	007674	006305				ASL R5			; NOW IN BYTES
  2095	007676	060405				ADD R4,R5
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 49
	GLPT;GLDMUX 21	PAGE 1.48 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2096					
  2097	007700	052767	000340	170070		BIS #PRIOR7,%PS		;MASK
  2098	007706	020467	011150			CMP R4,GLLIM		; ARE WE AHEAD OF PICK UP POINTER ANYWAY? (OK)
  2099	007712	103015				BHIS 2$
  2100	007714	020567	011142			CMP R5,GLLIM		; IF WE GO THROUGH WITH THIS BUFFER, WILL WE
  2101									; LAP OTHER POINTER (NOT OK)
  2102	007720	103412				BLO 2$
  2103	007722	005267	011140			INC GLBLK		; BLOCKED OUTPUT, WAIT FOR QUEUE TO EMPTY A LITTLE
  2104	007726	042767	000340	170042		BIC #PRIOR0,%PS		;UNMASK
  2105	007734	012767	007626	011064		MOV #RUNLN2,GLDPND
  2106	007742	000167	000252			 JMP GLDXIT
  2107	007746	042767	000340	170022	2$:	BIC #PRIOR0,%PS		;UNMASK, NO PROBLEM
  2108	007754	012767	006342	011044		MOV #CHRDEC,GLDPND	; WE'VE GOT ENOUGH SPACE NOW
  2109					
  2110	007762	012767	010050	011042		MOV #RUNTRN,GLDPTR
  2111	007770	005467	011016			NEG DATLEN
  2112	007774	016724	011012			MOV DATLEN,(R4)+	; WORD COUNT, DMA COMMAND HEADER
  2113	010000	005067	011006			CLR DATLEN
  2114	010004	005767	011000			TST MARLEN
  2115	010010	001415				BEQ 3$			; ZERO LENGTH MARGIN?
  2116	010012	005767	011024			TST COLOR
  2117	010016	001406				BEQ 21$			; IF COLOR = 0, THEN WHITE MARGIN
  2118	010020	012724	177777		22$:	MOV #177777,(R4)+
  2119	010024	005367	010760			DEC MARLEN
  2120	010030	001373				BNE 22$
  2121	010032	000404				BR 3$
  2122					
  2123	010034	005024			21$:	CLR (R4)+
  2124	010036	005367	010746			DEC MARLEN
  2125	010042	001374				BNE 21$
  2126					
  2127	010044	000167	000150		3$:	 JMP GLDXIT		; NEED MORE WORDS
  2128					
  2129	010050	116705	010746		RUNTRN:	MOVB TMPWRD,R5
  2130	010054	100010				BPL 1$
  2131	010056	042705	177600			BIC #STRIP,R5
  2132	010062	001411				 BEQ 4$
  2133	010064	112724	177777		2$:	MOVB #177777,(R4)+
  2134	010070	005305				DEC R5
  2135	010072	001374				 BNE 2$
  2136	010074	000404				 BR 4$
  2137					
  2138	010076	001403			1$:	 BEQ 4$
  2139	010100	105024			3$:	CLRB (R4)+
  2140	010102	005305				DEC R5
  2141	010104	001375				 BNE 3$
  2142					
  2143	010106	116724	010711		4$:	MOVB TMPWRD+1,(R4)+
  2144	010112	005367	010700			DEC ENCLEN
  2145	010116	001402				 BEQ 41$
  2146	010120	000167	000074			 JMP GLDXIT		; STILL NEED MORE WORDS
  2147					
  2148	010124	012767	006562	010700	41$:	MOV #DATDEC,GLDPTR
  2149	010132	000167	000000			 JMP GLDFIN		; COMPLETED COMMAND
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 50
	GLPT;GLDMUX 21	PAGE 1.49 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2150					
  2151					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 51
	GLPT;GLDMUX 21	PAGE 1.50 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2152	010136	020467	010714		GLDFIN:	CMP R4,GLEND
  2153	010142	103402				BLO 1$
  2154	010144	016704	010710			MOV GLBEG,R4
  2155	010150	020467	010706		1$:	CMP R4,GLLIM
  2156	010154	001002				BNE 2$
  2157	010156	005267	010704			INC GLBLK
  2158	010162	010467	010664		2$:	MOV R4,GLPTR
  2159	010166	010467	010662			MOV R4,GTPTR
  2160	010172	005767	010710			TST GLIDL		; IS THE GOULD IDLE?
  2161	010176	001412				BEQ GLOOP
  2162						MASK 5			; FAKE AN INTERRUPT
  2163						PUSH %PS
  2164					.IRP Y,<%PS>
  2165						MOV Y,-(SP)
  2166					.ENDM
  2167	010200	016746	167572			MOV %PS,-(SP)
  2168	010204	012767	000240	167564		MOV #<5>_5,%PS
  2169						CALL GLDINT		; GO TO HANDLER WITH ANXIOUSLY AWAITED CRUFT
  2170	010212	004767	174322			JSR PC,GLDINT
  2171	010216	000402				BR GLOOP
  2172					
  2173	010220	010467	010630		GLDXIT:	MOV R4,GTPTR
  2174					
  2175	010224	020261	000002		GLOOP:	CMP R2,RI.END(R1)	; END OF INPUT QUEUE?
  2176	010230	001002				 BNE 1$
  2177	010232	016102	000004			MOV RI.BEG(R1),R2	; CIRCLE AROUND TO BEGINNING
  2178	010236	010261	000006		1$:	MOV R2,RI.LIM(R1)
  2179	010242	026327	017120	000137		CMP ALNUM(R3),#ALCLIM
  2180	010250	002004				BGE 5$
  2181						CALL ALLCSB
  2182	010252	004767	001752			JSR PC,ALLCSB
  2183	010256	005267	010652			INC GLDALC		; NECESSARY, ELSE GOULD LOCKS OUT ITS OWN ALLOCATER
  2184	010262	052767	000340	167506	5$:	BIS #PRIOR7,%PS
  2185	010270	020261	000000			CMP R2,RI.PTR(R1)
  2186	010274	001416				 BEQ 3$
  2187	010276	042767	000340	167472		BIC #PRIOR0,%PS
  2188					;	TST RO.BLK(R1)
  2189					;	 BNE 6$			; UNNECESSARY UNTIL CONSOLE DEVICE EXISTS
  2190	010304	005767	010556			TST GLBLK
  2191	010310	001016				 BNE 6$
  2192	010312	005767	010616			TST GLDALC
  2193	010316	001002				 BNE 7$
  2194	010320	000167	176012			 JMP JMPDEC
  2195					
  2196	010324	005067	010604		7$:	CLR GLDALC
  2197	010330	000411				 BR 8$
  2198					
  2199	010332	016373	002152	017020	3$:	MOV SRTY(R3),@MRTY(R3)
  2200	010340	042767	000340	167430		BIC #PRIOR0,%PS
  2201					
  2202	010346	012767	000001	172574	6$:	MOV #WAITIN,WAITPL
  2203					8$:	RET
  2204	010354	000207				RTS PC
  2205					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 52
	GLPT;GLDMUX 21	PAGE 1.51 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2206					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 53
	GLPT;GLDMUX 21	PAGE 1.52 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2207					; %%%% PREDEFINED  GOULD MACRO BLOCKS %%%%
  2208					
  2209								; ALPHA MODE SELECT
  2210	010356	000004			SALBLK:	.WORD 4			; DISABLE
  2211	010360	000403				.WORD 403		; ENABLE
  2212	010362	000002				.WORD 2			; CUT
  2213	010364	100001				.WORD 100001		; POPJ
  2214					SALEND:
  2215					
  2216								; LOW SPEED GRAPHICS MODE SELECT
  2217	010366	000004			SLGBLK:	.WORD 4			; DISABLE
  2218	010370	000001				.WORD 1			; GRAPHIC COMMAND
  2219	010372	000005				.WORD 5			; LAST LINE FLAG
  2220	010374	000403				.WORD 403		; ENABLE
  2221	010376	000002				.WORD 2			; CUT
  2222	010400	100001				.WORD 100001		; POPJ
  2223					SLGEND:
  2224					
  2225								; HIGH SPEED GRAPHICS MODE SELECT
  2226	010402	000004			SHGBLK:	.WORD 4			; DISABLE
  2227	010404	000001				.WORD 1			; GRAPHIC COMMAND
  2228	010406	000403				.WORD 403		; ENABLE
  2229	010410	000002				.WORD 2			; CUT
  2230	010412	100001				.WORD 100001		; POPJ
  2231					SHGEND:
  2232					
  2233					
  2234								; EOF OF FILE
  2235	010414	000004			EOFBLK:	.WORD 4			; DISABLE
  2236	010416	000403				.WORD 403		; ENABLE
  2237	010420	000002				.WORD 2			; CUT
  2238	010422	140000				.WORD 140000		; REPEAT 12 (OCTAL) TIMES
  2239	010424	000012				.WORD 12
  2240	010426	177676				.WORD -102			; DMA COUNT
  2241		000102				.REPT 102
  2242						.NLIST
  2243						.WORD 36475		; DOUBLE DASH
  2244						.LIST
  2245					.ENDR
  2246	010634	140001				.WORD 140001		; END OF REPEAT
  2247	010636	000100				.WORD 100		; END OF FILE INDICATOR
  2248	010640	177756				.WORD -22			; DMA COUNT
  2249	010642	   040		
  2250	010643	   040		
  2251	010644	   040		
  2252	010645	   040		
  2253	010646	   040		
  2254	010647	   040		
  2255	010650	   040		
  2256	010651	   040		
  2257	010652	   040		
  2258	010653	   040		
  2259						.ASCII /          /
  2260		010662				.BLKW 3
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 54
	GLPT;GLDMUX 21	PAGE 1.53 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2261	010662	   040		
  2262	010663	   040		
  2263	010664	   117		
  2264	010665	   050		
  2265	010666	   124		
  2266	010667	   103		
  2267	010670	   114		
  2268	010671	   101		
  2269	010672	   040		
  2270	010673	   051		
  2271	010674	   101		
  2272	010675	   120		
  2273	010676	   105		
  2274	010677	   107		
  2275	010700	   040		
  2276	010701	   123		
  2277	010702	   101		
  2278	010703	   102		
  2279	010704	   040		
  2280	010705	   104		
  2281					PAGLST:	.ASCII /  O(TCLA )APEG SAB D/	;  (OCTAL) PAGES BAD
  2282	010706	140000				.WORD 140000		; REPEAT 12 (OCTAL) TIMES
  2283	010710	000012				.WORD 12
  2284	010712	177676				.WORD -102			; DMA COUNT
  2285		000102				.REPT 102		; DOUBLE DASH
  2286						.NLIST
  2287						.WORD 36475
  2288						.LIST
  2289					.ENDR
  2290	011120	140001				.WORD 140001		; END OF REPEAT
  2291					
  2292	011122	100001				.WORD 100001		; JMP TO WHERE WE WERE BEFORE
  2293					EOFEND:
  2294					
  2295					
  2296								; SMEAR PROTECTION PAGE
  2297	011124	000004			SMRBLK:	.WORD 4			; DISABLE
  2298	011126	000403				.WORD 403		; ENABLE
  2299	011130	000002				.WORD 2			; CUT
  2300	011132	140000				.WORD 140000		; START REPEAT
  2301	011134	000025				.WORD 25		;	25 (OCTAL) TIMES
  2302	011136	177777				.WORD -1		; DMA COUNT
  2303	011140	020040				.WORD 20040		; DOUBLE SPACE
  2304	011142	140001				.WORD 140001		; END REPEAT
  2305	011144	100001				.WORD 100001		; END JUMP
  2306					SMREND:
  2307					
  2308							;NUMBER TO STRING CONVERSION ROUTINE
  2309					CHRNUM:	PUSH <R1,R4>
  2310					.IRP Y,<R1,R4>
  2311						MOV Y,-(SP)
  2312					.ENDM
  2313	011146	010146				MOV R1,-(SP)
  2314	011150	010446				MOV R4,-(SP)
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 55
	GLPT;GLDMUX 21	PAGE 1.54 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2315	011152	012704	000005			MOV #5,R4
  2316	011156	010001			1$:	MOV R0,R1
  2317	011160	042701	177770			BIC #177770,R1
  2318	011164	062701	000060			ADD #60,R1
  2319	011170	110145				MOVB R1,-(R5)
  2320	011172	005304				DEC R4
  2321	011174	001404				BEQ 2$
  2322	011176	006200				ASR R0
  2323	011200	006200				ASR R0
  2324	011202	006200				ASR R0
  2325	011204	000764				BR 1$
  2326	011206	005700			2$:	TST R0
  2327	011210	100403				BMI 3$
  2328	011212	112745	000060			MOVB #60,-(R5)
  2329	011216	000402				 BR 4$
  2330	011220	112745	000061		3$:	MOVB #61,-(R5)
  2331	011224	000325			4$:	SWAB (R5)+		; GOULD LIKES 'EM BACKWARDS
  2332	011226	000325				SWAB (R5)+
  2333	011230	000325				SWAB (R5)+
  2334						POP <R4,R1>
  2335					.IRP Y,<R4,R1>
  2336						MOV (SP)+,Y
  2337					.ENDM
  2338	011232	012604				MOV (SP)+,R4
  2339	011234	012601				MOV (SP)+,R1
  2340						RET
  2341	011236	000207				RTS PC
  2342					
  2343					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 56
	GLPT;GLDMUX 21	PAGE 1.55 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2344					; %%%% MAIN PROGRAM ROUTINE FOR ALLOCATION MESSAGE HANDLING %%%%
  2345					
  2346					; AL.BLK SET FOR 12 BIT CODE EXPANSION AND ^\ DOUBLING
  2347					
  2348					
  2349	011240	016301	016770		MRALSB:	MOV TSTA(R3),R1		; CREATE POINTER TO TRANSMIT STATUS BLOCK
  2350	011244	005771	000032			TST @TO.BLK(R1)
  2351	011250	001003				 BNE 11$
  2352	011252	005761	000036			TST AL.BLK(R1)		; ARE WE OUT OF ORDER?
  2353	011256	001403				 BEQ 10$
  2354	011260	062716	000004		11$:	ADD #4,(SP)		; THEN PRETEND NOTHING HAPPENED
  2355						RET
  2356	011264	000207				RTS PC
  2357	011266	017300	016750		10$:	MOV @ALCP(R3),R0	; POINTER ALLOCATION MESSAGE
  2358	011272	017305	016730			MOV @MCNT(R3),R5	; COUNT OF WORDS TO TRANSFER
  2359	011276	017102	000012			MOV @TO.PTR(R1),R2	; LOAD POINTER TO QUEUE
  2360	011302	012022			4$:	MOV (R0)+,(R2)+		; OUTPUT CHARACTER MESSAGE
  2361	011304	020271	000014			CMP R2,@TO.END(R1)	; ARE WE AT END OF QUEUE?
  2362	011310	001002				 BNE 1$
  2363	011312	017102	000016			MOV @TO.BEG(R1),R2	; CIRCLE AROUND TO BEGINNING THEN
  2364	011316	020271	000020		1$:	CMP R2,@TO.LIM(R1)	; POINTER OVERLAP?
  2365	011322	001020				 BNE 2$
  2366	011324	005271	000032			INC @TO.BLK(R1)
  2367	011330	005305				DEC R5			; HAVE WE FINISHED YET
  2368	011332	001416				BEQ 3$	
  2369	011334	010573	016730			MOV R5,@MCNT(R3)		; NOPE, SAVE COUNT
  2370	011340	010073	016750			MOV R0,@ALCP(R3)	; AND ALLOCATION MESSAGE POINTER
  2371	011344	010271	000012			MOV R2,@TO.PTR(R1)	; RESTORE POINTER
  2372	011350	005261	000034			INC MT.BLK(R1)
  2373	011354	012767	000001	171566		MOV #WAITIN,WAITPL	; PATCH WAIT SINCE WE MADE SOME HEADWAY
  2374						RET
  2375	011362	000207				RTS PC
  2376	011364	005305			2$:	DEC R5
  2377	011366	001345				BNE 4$
  2378	011370	016373	002202	017030	3$:	MOV SRAL(R3),@MRAL(R3)	; PATCH FLAG
  2379	011376	012773	000003	016730		MOV #3,@MCNT(R3)	; RE-INITIALIZE COUNT
  2380	011404	012767	000001	171536		MOV #WAITIN,WAITPL	; PATCH WAIT
  2381	011412	005061	000034			CLR MT.BLK(R1)		; UNBLOCK NORMAL TTY OUTPUT
  2382	011416	010271	000012			MOV R2,@TO.PTR(R1)	; RESTORE POINTER	
  2383	011422	052767	000100	164164		BIS #100,XDST0		; ACTIVATE INTERRUPT
  2384						RET
  2385	011430	000207				RTS PC
  2386					
  2387					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 57
	GLPT;GLDMUX 21	PAGE 1.56 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2388					; %%%% MAIN PROGRAM ROUTINE FOR CONTROL-G MESSAGE HANDLING %%%%
  2389					; NOTE: IF IN THE FUTURE MORE THAN ONE CHARACTER MUST BE OUTPUT
  2390					;(I.E. MORE THAN JUST ^G) REMEMBER TO INCREMENT MR.BLK(R1)
  2391					; WHEN CAN'T FINSIH MESSAGE DUE TO FULL RO QUEUE
  2392					
  2393					
  2394	011432	016301	016760		MTCGSB:	MOV RSTA(R3),R1
  2395	011436	005761	000036			TST CG.BLK(R1)
  2396	011442	001003				BNE 11$
  2397	011444	005761	000032			TST RO.BLK(R1)
  2398	011450	001403				 BEQ 10$
  2399	011452	062716	000004		11$:	ADD #4,(SP)		; RETURN TO .+4
  2400						RET
  2401	011456	000207				RTS PC
  2402	011460	012700	000007		10$:	MOV #CG,R0
  2403	011464	016102	000012			MOV RO.PTR(R1),R2
  2404	011470	110022				MOVB R0,(R2)+
  2405	011472	020261	000014			CMP R2,RO.END(R1)
  2406	011476	001002				 BNE 1$
  2407	011500	016102	000016			MOV RO.BEG(R1),R2
  2408	011504	020261	000020		1$:	CMP R2,RO.LIM(R1)
  2409	011510	001002				 BNE 2$
  2410	011512	005261	000032			INC RO.BLK(R1)
  2411	011516	010261	000012		2$:	MOV R2,RO.PTR(R1)
  2412	011522	052773	000100	017110		BIS #100,@XTST(R3)
  2413	011530	016373	002216	017050		MOV STCG(R3),@MTCG(R3)
  2414	011536	012767	000001	171404		MOV #WAITIN,WAITPL
  2415	011544	005061	000034			CLR MR.BLK(R1)
  2416						RET
  2417	011550	000207				RTS PC
  2418					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 58
	GLPT;GLDMUX 21	PAGE 1.57 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2419					; %%%% MAIN PROGRAM ROUTINE FOR HANDLING ANN ARBOR TERMINAL DISPLAY %%%%
  2420					
  2421	011552	016301	016760		MRAASB:	MOV RSTA(R3),R1
  2422	011556	005771	000032			TST @RO.BLK(R1)
  2423	011562	001003				 BNE 11$
  2424	011564	005761	000034			TST MR.BLK(R1)
  2425	011570	001403				 BEQ 10$
  2426	011572	062716	000004		11$:	ADD #4,(SP)
  2427						RET
  2428	011576	000207				RTS PC
  2429	011600	016102	000006		10$:	MOV RI.LIM(R1),R2
  2430	011604	112200				MOVB (R2)+,R0
  2431	011606	042700	177400			BIC #LHS,R0
  2432	011612	010305				MOV R3,R5		;CALCULATE ANN ARBOR INDEX
  2433	011614	006205				ASR R5
  2434	011616	162705	000004			SUB #AATYST,R5
  2435	011622	000305				SWAB R5
  2436	011624	050500				BIS R5,R0		; INDEX LOCATED IN HIGH BYTE
  2437					
  2438	011626	020261	000002			CMP R2,RI.END(R1)
  2439	011632	001002				 BNE 1$
  2440	011634	016102	000004			MOV RI.BEG(R1),R2
  2441	011640	017104	000012		1$:	MOV @RO.PTR(R1),R4
  2442	011644	010024				MOV R0,(R4)+
  2443	011646	020471	000014			CMP R4,@RO.END(R1)
  2444	011652	001002				 BNE 2$
  2445	011654	017104	000016			MOV @RO.BEG(R1),R4
  2446	011660	020471	000020		2$:	CMP R4,@RO.LIM(R1)
  2447	011664	001002				 BNE 6$
  2448	011666	005271	000032			INC @RO.BLK(R1)
  2449	011672	010471	000012		6$:	MOV R4,@RO.PTR(R1)
  2450	011676	052767	000340	166072		BIS #PRIOR7,%PS
  2451	011704	020261	000000			CMP R2,RI.PTR(R1)
  2452	011710	001003				 BNE 3$
  2453	011712	016373	002152	017020		MOV SRTY(R3),@MRTY(R3)
  2454	011720	042767	000340	166050	3$:	BIC #PRIOR0,%PS
  2455	011726	010261	000006			MOV R2,RI.LIM(R1)
  2456	011732	005363	017120			DEC ALNUM(R3)
  2457	011736	003001				 BGT 4$
  2458	011740	000000				HALT
  2459	011742	026327	017120	000137	4$:	CMP ALNUM(R3),#ALCLIM
  2460	011750	002002				BGE 5$
  2461						CALL ALLCSB
  2462	011752	004767	000252			JSR PC,ALLCSB
  2463	011756	012767	000001	171164	5$:	MOV #WAITIN,WAITPL
  2464	011764	052767	000100	156000		BIS #100,AAMBUF
  2465						RET
  2466	011772	000207				RTS PC
  2467					
  2468					
  2469					
  2470					
  2471					MRDGSB:	RET
  2472	011774	000207				RTS PC
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 59
	GLPT;GLDMUX 21	PAGE 1.58 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2473					
  2474					MRIMSB:	RET
  2475	011776	000207				RTS PC
  2476					
  2477					MTIMSB:	RET
  2478	012000	000207				RTS PC
  2479					
  2480					NULLSB:	RET
  2481	012002	000207				RTS PC
  2482					
  2483					
  2484					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 60
	GLPT;GLDMUX 21	PAGE 1.59 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2485					; %%%% ROUTINE FOR INTIALIZING TTY CHANNEL
  2486	012004	016301	016760		INTYSB:	MOV RSTA(R3),R1
  2487	012010	016161	000004	000000		MOV RI.BEG(R1),RI.PTR(R1)
  2488	012016	016161	000004	000006		MOV RI.BEG(R1),RI.LIM(R1)
  2489	012024	016161	000016	000012		MOV RO.BEG(R1),RO.PTR(R1)
  2490	012032	016161	000016	000020		MOV RO.BEG(R1),RO.LIM(R1)
  2491	012040	005061	000030			CLR RI.BLK(R1)
  2492	012044	005061	000032			CLR RO.BLK(R1)
  2493	012050	005061	000034			CLR MR.BLK(R1)
  2494	012054	005061	000036			CLR CG.BLK(R1)
  2495	012060	016371	002152	000010		MOV SRTY(R3),@RI.FLG(R1)
  2496					;	MOV SRAL(R3),@AL.FLG(R1)	; GOING TO BE FLAGGED ANYWAY
  2497	012066	005063	017120			CLR ALNUM(R3)
  2498	012072	012773	000005	016730		MOV #5,@MCNT(R3)		; MOVE WORD COUNT OF MESSAGE INTO PLACE
  2499	012100	005061	000044			CLR RS.CNT(R1)
  2500	012104	016361	017000	000042		MOV RSTR(R3),RS.PTR(R1)
  2501					
  2502	012112	016301	016770			MOV TSTA(R3),R1
  2503	012116	016161	000004	000000		MOV TI.BEG(R1),TI.PTR(R1)
  2504	012124	016161	000004	000006		MOV TI.BEG(R1),TI.LIM(R1)
  2505					; TO.PTR IS AN INDIRECT POINTER
  2506					; TO.LIM IS AN INDIRECT POINTER
  2507	012132	005061	000030			CLR TI.BLK(R1)
  2508					; TO.BLK IS AN INDIRECT POINTER
  2509	012136	005061	000034			CLR MT.BLK(R1)
  2510	012142	005061	000036			CLR AL.BLK(R1)
  2511	012146	016371	002166	000010		MOV STTY(R3),@TI.FLG(R1)
  2512	012154	016371	002216	000022		MOV STCG(R3),@CG.FLG(R1)
  2513						CALL ALLCSB
  2514	012162	004767	000042			JSR PC,ALLCSB
  2515	012166	005061	000044			CLR TS.CNT(R1)
  2516	012172	016361	017010	000042		MOV TSTR(R3),TS.PTR(R1)
  2517	012200	016373	017070	016750		MOV ALZM(R3),@ALCP(R3)		; MOVE ALLOCATION POINTER INTO PLACE
  2518	012206	004773	012214			JSR PC,@INSPTB(R3)		; CALL TERMINAL DEPENDANT ROUTINES
  2519						RET
  2520	012212	000207				RTS PC
  2521					
  2522	012214	012002			INSPTB:	.WORD NULLSB
  2523	012216	012002				.WORD NULLSB
  2524	012220	012304				.WORD INGLSB
  2525	012222	012002				.WORD NULLSB
  2526	012224	012002				.WORD NULLSB
  2527	012226	012002				.WORD NULLSB
  2528					
  2529					ALLCSB:	PUSH <R5,R1>
  2530					.IRP Y,<R5,R1>
  2531						MOV Y,-(SP)
  2532					.ENDM
  2533	012230	010546				MOV R5,-(SP)
  2534	012232	010146				MOV R1,-(SP)
  2535	012234	016301	016760			MOV RSTA(R3),R1
  2536	012240	112773	000137	017060		MOVB #ALCINC,@ALCI(R3)		;SET ALLOCATION
  2537	012246	062763	000137	017120		ADD #ALCINC,ALNUM(R3)
  2538	012254	016373	016740	016750		MOV ALCM(R3),@ALCP(R3)		;SET POINTER TO ALLOCATION
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 61
	GLPT;GLDMUX 21	PAGE 1.60 	MAIN PROGRAM QUEUE PROCESSING ROUTINES

  2539	012262	016305	016770			MOV TSTA(R3),R5			;GET POINTER TO TRANSMIT STATUS TABLE
  2540	012266	005265	000034			INC MT.BLK(R5)			;BLOCK MAIN PROGRAM TRANSMIT CHAR PROCESSING
  2541	012272	105071	000022			CLRB @AL.FLG(R1)		;AND SET FLAG
  2542						POP <R1,R5>
  2543					.IRP Y,<R1,R5>
  2544						MOV (SP)+,Y
  2545					.ENDM
  2546	012276	012601				MOV (SP)+,R1
  2547	012300	012605				MOV (SP)+,R5
  2548						RET
  2549	012302	000207				RTS PC
  2550					
  2551					INGLSB:
  2552	012304	016767	006550	006540		MOV GLBEG,GLPTR		; INITALIZE GOULD DATA QUEUE POINTERS
  2553	012312	016767	006542	006534		MOV GLBEG,GTPTR
  2554	012320	016767	006534	006534		MOV GLBEG,GLLIM
  2555	012326	016767	006526	006530		MOV GLBEG,GTLIM
  2556	012334	016767	170616	170410		MOV SSTABR,STATBR	; FIX BRANCH FOR STATUS ROUTINE
  2557	012342	016767	170612	170544		MOV SGLIBR,GLIBR	; FIX BRANCH FOR M.P. FAKERY OF GOULD INTERRUPT
  2558	012350	012767	000005	006554		MOV #STLEN,STALEN
  2559	012356	012767	021116	006544		MOV #STMSG,STAMSG
  2560						.IRP VAL,<GLBLK,JMPFLG,REPFLG,GLERR,PAGMNG,QOTFLG,GRFFLG,CLKCNT,GLDALC>
  2561						CLR VAL
  2562					.ENDM
  2563	012364	005067	006476			CLR GLBLK
  2564	012370	005067	006476			CLR JMPFLG
  2565	012374	005067	006474			CLR REPFLG
  2566	012400	005067	006504			CLR GLERR
  2567	012404	005067	006502			CLR PAGMNG
  2568	012410	005067	006422			CLR QOTFLG
  2569	012414	005067	006420			CLR GRFFLG
  2570	012420	005067	006424			CLR CLKCNT
  2571	012424	005067	006504			CLR GLDALC
  2572	012430	012767	000001	006450		MOV #1,GLIDL
  2573	012436	012767	004642	006424		MOV #CMIDEC,GLIPTR
  2574	012444	012767	006342	006354		MOV #CHRDEC,GLDPND
  2575	012452	012767	006526	006350		MOV #MAKWD1,WRDPTR
  2576	012460	012767	006562	006344		MOV #DATDEC,GLDPTR
  2577	012466	112767	000177	006424		MOVB #177,STAPAG
  2578	012474	012767	000001	006332		MOV #1,EODFLG
  2579	012502	012737	000004	166000		MOV #%GCOFF,@#GLDCSR	; DISABLE THE PRINTER TO CLEAR ANY OLD INTERRUPTS
  2580	012510	012737	000006	166000		MOV #%GCION,@#GLDCSR	; ENABLE GOULD INTERRUPTS
  2581						RET	
  2582	012516	000207				RTS PC
  2583					
  2584					
  2585					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 62
	GLPT;GLDMUX 21	PAGE 1.61 	EXPANSION OF TABLES AND BUFFERS

  2586					.SBTTL EXPANSION OF TABLES AND BUFFERS
  2587					
  2588					; %%%% ADDRESS AND VALUE TABLES FOR MAIN PROGRAM SUBROUTINE CALLS %%%%
  2589					
  2590					.IRP NAM,<MCNT,ALCM,ALCP,RSTA,TSTA,RIBF,ROBF,TIBF,RSTR,TSTR>
  2591					VALCRE NAM,MAXTTY
  2592					.ENDM
  2593					VALCRE MCNT,MAXTTY
  2594		000004				.REPT MAXTTY
  2595						MCNTMC \.RPCNT,\.RPCNT+1
  2596					.ENDR
  2597						MCNTMC \.RPCNT,\.RPCNT+1
  2598	012520	000003			MCNT0:	.WORD 3		; MACRO FOR STORAGE OF COUNT OF MESSAGE
  2599						MCNTMC \.RPCNT,\.RPCNT+1
  2600	012522	000003			MCNT1:	.WORD 3		; MACRO FOR STORAGE OF COUNT OF MESSAGE
  2601						MCNTMC \.RPCNT,\.RPCNT+1
  2602	012524	000003			MCNT2:	.WORD 3		; MACRO FOR STORAGE OF COUNT OF MESSAGE
  2603						MCNTMC \.RPCNT,\.RPCNT+1
  2604	012526	000003			MCNT3:	.WORD 3		; MACRO FOR STORAGE OF COUNT OF MESSAGE
  2605					VALCRE ALCM,MAXTTY
  2606		000004				.REPT MAXTTY
  2607						ALCMMC \.RPCNT,\.RPCNT+1
  2608					.ENDR
  2609						ALCMMC \.RPCNT,\.RPCNT+1
  2610	012530	   200		
  2611	012531	   034			ALZM0:	.BYTE 200+0,34	; ^\
  2612	012532	   200		
  2613	012533	   032					.BYTE 200+0,32	; ^Z
  2614	012534	   200		
  2615	012535	   034			ALCM0:	.BYTE 200+0,34	; ^\
  2616	012536	   200		
  2617	012537	   001					.BYTE 200+0,1	; ^A
  2618	012540	   200		
  2619	012541	   000					.BYTE 200+0,0	; ALLOCATION
  2620		012541			ALCI0==.-1
  2621						ALCMMC \.RPCNT,\.RPCNT+1
  2622	012542	   201		
  2623	012543	   034			ALZM1:	.BYTE 200+1,34	; ^\
  2624	012544	   201		
  2625	012545	   032					.BYTE 200+1,32	; ^Z
  2626	012546	   201		
  2627	012547	   034			ALCM1:	.BYTE 200+1,34	; ^\
  2628	012550	   201		
  2629	012551	   001					.BYTE 200+1,1	; ^A
  2630	012552	   201		
  2631	012553	   000					.BYTE 200+1,0	; ALLOCATION
  2632		012553			ALCI1==.-1
  2633						ALCMMC \.RPCNT,\.RPCNT+1
  2634	012554	   202		
  2635	012555	   034			ALZM2:	.BYTE 200+2,34	; ^\
  2636	012556	   202		
  2637	012557	   032					.BYTE 200+2,32	; ^Z
  2638	012560	   202		
  2639	012561	   034			ALCM2:	.BYTE 200+2,34	; ^\
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 63
	GLPT;GLDMUX 21	PAGE 1.62 	EXPANSION OF TABLES AND BUFFERS

  2640	012562	   202		
  2641	012563	   001					.BYTE 200+2,1	; ^A
  2642	012564	   202		
  2643	012565	   000					.BYTE 200+2,0	; ALLOCATION
  2644		012565			ALCI2==.-1
  2645						ALCMMC \.RPCNT,\.RPCNT+1
  2646	012566	   203		
  2647	012567	   034			ALZM3:	.BYTE 200+3,34	; ^\
  2648	012570	   203		
  2649	012571	   032					.BYTE 200+3,32	; ^Z
  2650	012572	   203		
  2651	012573	   034			ALCM3:	.BYTE 200+3,34	; ^\
  2652	012574	   203		
  2653	012575	   001					.BYTE 200+3,1	; ^A
  2654	012576	   203		
  2655	012577	   000					.BYTE 200+3,0	; ALLOCATION
  2656		012577			ALCI3==.-1
  2657					VALCRE ALCP,MAXTTY
  2658		000004				.REPT MAXTTY
  2659						ALCPMC \.RPCNT,\.RPCNT+1
  2660					.ENDR
  2661						ALCPMC \.RPCNT,\.RPCNT+1
  2662	012600	012534			ALCP0:	.WORD ALCM0	; MACRO FOR STORAGE OF MESSAGE POINTER
  2663						ALCPMC \.RPCNT,\.RPCNT+1
  2664	012602	012546			ALCP1:	.WORD ALCM1	; MACRO FOR STORAGE OF MESSAGE POINTER
  2665						ALCPMC \.RPCNT,\.RPCNT+1
  2666	012604	012560			ALCP2:	.WORD ALCM2	; MACRO FOR STORAGE OF MESSAGE POINTER
  2667						ALCPMC \.RPCNT,\.RPCNT+1
  2668	012606	012572			ALCP3:	.WORD ALCM3	; MACRO FOR STORAGE OF MESSAGE POINTER
  2669					VALCRE RSTA,MAXTTY
  2670		000004				.REPT MAXTTY
  2671						RSTAMC \.RPCNT,\.RPCNT+1
  2672					.ENDR
  2673						RSTAMC \.RPCNT,\.RPCNT+1
  2674	012610	013270			RSTA0:	.WORD RIBF0
  2675	012612	013570				.WORD RIBF0+RIBFLN
  2676	012614	013270				.WORD RIBF0
  2677	012616	013270				.WORD RIBF0
  2678	012620	002266				.WORD MRTY0
  2679	012622	014670				.WORD ROBF0
  2680	012624	015170				.WORD ROBF0+ROBFLN
  2681	012626	014670				.WORD ROBF0
  2682	012630	014670				.WORD ROBF0
  2683	012632	002304				.WORD MRAL0
  2684	012634	   000		
  2685	012635	   200		
  2686	012636	   000		
  2687	012637	   000				.BYTE 0,200+0,0,0
  2688	012640	000000				.WORD 0
  2689	012642	000000				.WORD 0
  2690	012644	000000				.WORD 0
  2691	012646	000000				.WORD 0
  2692	012650	000000				.WORD 0
  2693	012652	016470				.WORD RSTR0
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 64
	GLPT;GLDMUX 21	PAGE 1.63 	EXPANSION OF TABLES AND BUFFERS

  2694	012654	000000				.WORD 0
  2695						RSTAMC \.RPCNT,\.RPCNT+1
  2696	012656	013570			RSTA1:	.WORD RIBF1
  2697	012660	014070				.WORD RIBF1+RIBFLN
  2698	012662	013570				.WORD RIBF1
  2699	012664	013570				.WORD RIBF1
  2700	012666	002322				.WORD MRTY1
  2701	012670	015170				.WORD ROBF1
  2702	012672	015470				.WORD ROBF1+ROBFLN
  2703	012674	015170				.WORD ROBF1
  2704	012676	015170				.WORD ROBF1
  2705	012700	002340				.WORD MRAL1
  2706	012702	   000		
  2707	012703	   201		
  2708	012704	   000		
  2709	012705	   000				.BYTE 0,200+1,0,0
  2710	012706	000000				.WORD 0
  2711	012710	000000				.WORD 0
  2712	012712	000000				.WORD 0
  2713	012714	000000				.WORD 0
  2714	012716	000000				.WORD 0
  2715	012720	016514				.WORD RSTR1
  2716	012722	000000				.WORD 0
  2717						RSTAMC \.RPCNT,\.RPCNT+1
  2718	012724	014070			RSTA2:	.WORD RIBF2
  2719	012726	014370				.WORD RIBF2+RIBFLN
  2720	012730	014070				.WORD RIBF2
  2721	012732	014070				.WORD RIBF2
  2722	012734	002356				.WORD MRTY2
  2723	012736	015470				.WORD ROBF2
  2724	012740	015770				.WORD ROBF2+ROBFLN
  2725	012742	015470				.WORD ROBF2
  2726	012744	015470				.WORD ROBF2
  2727	012746	002374				.WORD MRAL2
  2728	012750	   000		
  2729	012751	   202		
  2730	012752	   000		
  2731	012753	   000				.BYTE 0,200+2,0,0
  2732	012754	000000				.WORD 0
  2733	012756	000000				.WORD 0
  2734	012760	000000				.WORD 0
  2735	012762	000000				.WORD 0
  2736	012764	000000				.WORD 0
  2737	012766	016540				.WORD RSTR2
  2738	012770	000000				.WORD 0
  2739						RSTAMC \.RPCNT,\.RPCNT+1
  2740	012772	014370			RSTA3:	.WORD RIBF3
  2741	012774	014670				.WORD RIBF3+RIBFLN
  2742	012776	014370				.WORD RIBF3
  2743	013000	014370				.WORD RIBF3
  2744	013002	002232				.WORD MRTY3
  2745	013004	015770				.WORD ROBF3
  2746	013006	016270				.WORD ROBF3+ROBFLN
  2747	013010	015770				.WORD ROBF3
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 65
	GLPT;GLDMUX 21	PAGE 1.64 	EXPANSION OF TABLES AND BUFFERS

  2748	013012	015770				.WORD ROBF3
  2749	013014	002250				.WORD MRAL3
  2750	013016	   000		
  2751	013017	   203		
  2752	013020	   000		
  2753	013021	   000				.BYTE 0,200+3,0,0
  2754	013022	000000				.WORD 0
  2755	013024	000000				.WORD 0
  2756	013026	000000				.WORD 0
  2757	013030	000000				.WORD 0
  2758	013032	000000				.WORD 0
  2759	013034	016564				.WORD RSTR3
  2760	013036	000000				.WORD 0
  2761					VALCRE TSTA,MAXTTY
  2762		000004				.REPT MAXTTY
  2763						TSTAMC \.RPCNT,\.RPCNT+1
  2764					.ENDR
  2765						TSTAMC \.RPCNT,\.RPCNT+1
  2766	013040	016270			TSTA0:	.WORD TIBF0
  2767	013042	016330				.WORD TIBF0+TIBFLN
  2768	013044	016270				.WORD TIBF0
  2769	013046	016270				.WORD TIBF0
  2770	013050	002502				.WORD MTTY0
  2771	013052	017364				.WORD TDST0+OD.PTR	;INDIRECT POINTER
  2772	013054	017366				.WORD TDST0+OD.END	;INDIRECT POINTER
  2773	013056	017370				.WORD TDST0+OD.BEG	;INDIRECT POINTER
  2774	013060	017372				.WORD TDST0+OD.LIM	;INDIRECT POINTER
  2775	013062	002520				.WORD MTCG0
  2776	013064	   000		
  2777	013065	   200		
  2778	013066	   000		
  2779	013067	   000				.BYTE 0,200+0,0,0
  2780	013070	000000				.WORD 0
  2781	013072	017374				.WORD TDST0+OD.BLK	;INDIRECT POINTER
  2782	013074	000000				.WORD 0
  2783	013076	000000				.WORD 0
  2784	013100	000000				.WORD 0
  2785	013102	016610				.WORD TSTR0
  2786	013104	000000				.WORD 0
  2787						TSTAMC \.RPCNT,\.RPCNT+1
  2788	013106	016330			TSTA1:	.WORD TIBF1
  2789	013110	016370				.WORD TIBF1+TIBFLN
  2790	013112	016330				.WORD TIBF1
  2791	013114	016330				.WORD TIBF1
  2792	013116	002536				.WORD MTTY1
  2793	013120	017364				.WORD TDST0+OD.PTR	;INDIRECT POINTER
  2794	013122	017366				.WORD TDST0+OD.END	;INDIRECT POINTER
  2795	013124	017370				.WORD TDST0+OD.BEG	;INDIRECT POINTER
  2796	013126	017372				.WORD TDST0+OD.LIM	;INDIRECT POINTER
  2797	013130	002554				.WORD MTCG1
  2798	013132	   000		
  2799	013133	   201		
  2800	013134	   000		
  2801	013135	   000				.BYTE 0,200+1,0,0
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 66
	GLPT;GLDMUX 21	PAGE 1.65 	EXPANSION OF TABLES AND BUFFERS

  2802	013136	000000				.WORD 0
  2803	013140	017374				.WORD TDST0+OD.BLK	;INDIRECT POINTER
  2804	013142	000000				.WORD 0
  2805	013144	000000				.WORD 0
  2806	013146	000000				.WORD 0
  2807	013150	016634				.WORD TSTR1
  2808	013152	000000				.WORD 0
  2809						TSTAMC \.RPCNT,\.RPCNT+1
  2810	013154	016370			TSTA2:	.WORD TIBF2
  2811	013156	016430				.WORD TIBF2+TIBFLN
  2812	013160	016370				.WORD TIBF2
  2813	013162	016370				.WORD TIBF2
  2814	013164	002572				.WORD MTTY2
  2815	013166	017364				.WORD TDST0+OD.PTR	;INDIRECT POINTER
  2816	013170	017366				.WORD TDST0+OD.END	;INDIRECT POINTER
  2817	013172	017370				.WORD TDST0+OD.BEG	;INDIRECT POINTER
  2818	013174	017372				.WORD TDST0+OD.LIM	;INDIRECT POINTER
  2819	013176	002610				.WORD MTCG2
  2820	013200	   000		
  2821	013201	   202		
  2822	013202	   000		
  2823	013203	   000				.BYTE 0,200+2,0,0
  2824	013204	000000				.WORD 0
  2825	013206	017374				.WORD TDST0+OD.BLK	;INDIRECT POINTER
  2826	013210	000000				.WORD 0
  2827	013212	000000				.WORD 0
  2828	013214	000000				.WORD 0
  2829	013216	016660				.WORD TSTR2
  2830	013220	000000				.WORD 0
  2831						TSTAMC \.RPCNT,\.RPCNT+1
  2832	013222	016430			TSTA3:	.WORD TIBF3
  2833	013224	016470				.WORD TIBF3+TIBFLN
  2834	013226	016430				.WORD TIBF3
  2835	013230	016430				.WORD TIBF3
  2836	013232	002626				.WORD MTTY3
  2837	013234	017364				.WORD TDST0+OD.PTR	;INDIRECT POINTER
  2838	013236	017366				.WORD TDST0+OD.END	;INDIRECT POINTER
  2839	013240	017370				.WORD TDST0+OD.BEG	;INDIRECT POINTER
  2840	013242	017372				.WORD TDST0+OD.LIM	;INDIRECT POINTER
  2841	013244	002644				.WORD MTCG3
  2842	013246	   000		
  2843	013247	   203		
  2844	013250	   000		
  2845	013251	   000				.BYTE 0,200+3,0,0
  2846	013252	000000				.WORD 0
  2847	013254	017374				.WORD TDST0+OD.BLK	;INDIRECT POINTER
  2848	013256	000000				.WORD 0
  2849	013260	000000				.WORD 0
  2850	013262	000000				.WORD 0
  2851	013264	016704				.WORD TSTR3
  2852	013266	000000				.WORD 0
  2853					VALCRE RIBF,MAXTTY
  2854		000004				.REPT MAXTTY
  2855						RIBFMC \.RPCNT,\.RPCNT+1
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 67
	GLPT;GLDMUX 21	PAGE 1.66 	EXPANSION OF TABLES AND BUFFERS

  2856					.ENDR
  2857						RIBFMC \.RPCNT,\.RPCNT+1
  2858		013570			RIBF0:	.BLKW RIBFLN/2
  2859						RIBFMC \.RPCNT,\.RPCNT+1
  2860		014070			RIBF1:	.BLKW RIBFLN/2
  2861						RIBFMC \.RPCNT,\.RPCNT+1
  2862		014370			RIBF2:	.BLKW RIBFLN/2
  2863						RIBFMC \.RPCNT,\.RPCNT+1
  2864		014670			RIBF3:	.BLKW RIBFLN/2
  2865					VALCRE ROBF,MAXTTY
  2866		000004				.REPT MAXTTY
  2867						ROBFMC \.RPCNT,\.RPCNT+1
  2868					.ENDR
  2869						ROBFMC \.RPCNT,\.RPCNT+1
  2870		015170			ROBF0:	.BLKW ROBFLN/2
  2871						ROBFMC \.RPCNT,\.RPCNT+1
  2872		015470			ROBF1:	.BLKW ROBFLN/2
  2873						ROBFMC \.RPCNT,\.RPCNT+1
  2874		015770			ROBF2:	.BLKW ROBFLN/2
  2875						ROBFMC \.RPCNT,\.RPCNT+1
  2876		016270			ROBF3:	.BLKW ROBFLN/2
  2877					VALCRE TIBF,MAXTTY
  2878		000004				.REPT MAXTTY
  2879						TIBFMC \.RPCNT,\.RPCNT+1
  2880					.ENDR
  2881						TIBFMC \.RPCNT,\.RPCNT+1
  2882		016330			TIBF0:	.BLKW TIBFLN/2
  2883						TIBFMC \.RPCNT,\.RPCNT+1
  2884		016370			TIBF1:	.BLKW TIBFLN/2
  2885						TIBFMC \.RPCNT,\.RPCNT+1
  2886		016430			TIBF2:	.BLKW TIBFLN/2
  2887						TIBFMC \.RPCNT,\.RPCNT+1
  2888		016470			TIBF3:	.BLKW TIBFLN/2
  2889					VALCRE RSTR,MAXTTY
  2890		000004				.REPT MAXTTY
  2891						RSTRMC \.RPCNT,\.RPCNT+1
  2892					.ENDR
  2893						RSTRMC \.RPCNT,\.RPCNT+1
  2894		016514			RSTR0:	.BLKW TMPLEN/2
  2895						RSTRMC \.RPCNT,\.RPCNT+1
  2896		016540			RSTR1:	.BLKW TMPLEN/2
  2897						RSTRMC \.RPCNT,\.RPCNT+1
  2898		016564			RSTR2:	.BLKW TMPLEN/2
  2899						RSTRMC \.RPCNT,\.RPCNT+1
  2900		016610			RSTR3:	.BLKW TMPLEN/2
  2901					VALCRE TSTR,MAXTTY
  2902		000004				.REPT MAXTTY
  2903						TSTRMC \.RPCNT,\.RPCNT+1
  2904					.ENDR
  2905						TSTRMC \.RPCNT,\.RPCNT+1
  2906		016634			TSTR0:	.BLKW TMPLEN/2
  2907						TSTRMC \.RPCNT,\.RPCNT+1
  2908		016660			TSTR1:	.BLKW TMPLEN/2
  2909						TSTRMC \.RPCNT,\.RPCNT+1
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 68
	GLPT;GLDMUX 21	PAGE 1.67 	EXPANSION OF TABLES AND BUFFERS

  2910		016704			TSTR2:	.BLKW TMPLEN/2
  2911						TSTRMC \.RPCNT,\.RPCNT+1
  2912		016730			TSTR3:	.BLKW TMPLEN/2
  2913					
  2914					.IRP NAM,<MCNT,ALCM,ALCP,RSTA,TSTA,RSTR,TSTR> ;MACRO TABLES
  2915						ADRCRE NAM,MAXTTY
  2916					.ENDM
  2917						ADRCRE MCNT,MAXTTY
  2918		000004			MCNT:	.REPT MAXTTY
  2919						ADRMAC MCNT,\.RPCNT
  2920					.ENDR
  2921						ADRMAC MCNT,\.RPCNT
  2922	016730	012520				.WORD MCNT0
  2923						ADRMAC MCNT,\.RPCNT
  2924	016732	012522				.WORD MCNT1
  2925						ADRMAC MCNT,\.RPCNT
  2926	016734	012524				.WORD MCNT2
  2927						ADRMAC MCNT,\.RPCNT
  2928	016736	012526				.WORD MCNT3
  2929						ADRCRE ALCM,MAXTTY
  2930		000004			ALCM:	.REPT MAXTTY
  2931						ADRMAC ALCM,\.RPCNT
  2932					.ENDR
  2933						ADRMAC ALCM,\.RPCNT
  2934	016740	012534				.WORD ALCM0
  2935						ADRMAC ALCM,\.RPCNT
  2936	016742	012546				.WORD ALCM1
  2937						ADRMAC ALCM,\.RPCNT
  2938	016744	012560				.WORD ALCM2
  2939						ADRMAC ALCM,\.RPCNT
  2940	016746	012572				.WORD ALCM3
  2941						ADRCRE ALCP,MAXTTY
  2942		000004			ALCP:	.REPT MAXTTY
  2943						ADRMAC ALCP,\.RPCNT
  2944					.ENDR
  2945						ADRMAC ALCP,\.RPCNT
  2946	016750	012600				.WORD ALCP0
  2947						ADRMAC ALCP,\.RPCNT
  2948	016752	012602				.WORD ALCP1
  2949						ADRMAC ALCP,\.RPCNT
  2950	016754	012604				.WORD ALCP2
  2951						ADRMAC ALCP,\.RPCNT
  2952	016756	012606				.WORD ALCP3
  2953						ADRCRE RSTA,MAXTTY
  2954		000004			RSTA:	.REPT MAXTTY
  2955						ADRMAC RSTA,\.RPCNT
  2956					.ENDR
  2957						ADRMAC RSTA,\.RPCNT
  2958	016760	012610				.WORD RSTA0
  2959						ADRMAC RSTA,\.RPCNT
  2960	016762	012656				.WORD RSTA1
  2961						ADRMAC RSTA,\.RPCNT
  2962	016764	012724				.WORD RSTA2
  2963						ADRMAC RSTA,\.RPCNT
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 69
	GLPT;GLDMUX 21	PAGE 1.68 	EXPANSION OF TABLES AND BUFFERS

  2964	016766	012772				.WORD RSTA3
  2965						ADRCRE TSTA,MAXTTY
  2966		000004			TSTA:	.REPT MAXTTY
  2967						ADRMAC TSTA,\.RPCNT
  2968					.ENDR
  2969						ADRMAC TSTA,\.RPCNT
  2970	016770	013040				.WORD TSTA0
  2971						ADRMAC TSTA,\.RPCNT
  2972	016772	013106				.WORD TSTA1
  2973						ADRMAC TSTA,\.RPCNT
  2974	016774	013154				.WORD TSTA2
  2975						ADRMAC TSTA,\.RPCNT
  2976	016776	013222				.WORD TSTA3
  2977						ADRCRE RSTR,MAXTTY
  2978		000004			RSTR:	.REPT MAXTTY
  2979						ADRMAC RSTR,\.RPCNT
  2980					.ENDR
  2981						ADRMAC RSTR,\.RPCNT
  2982	017000	016470				.WORD RSTR0
  2983						ADRMAC RSTR,\.RPCNT
  2984	017002	016514				.WORD RSTR1
  2985						ADRMAC RSTR,\.RPCNT
  2986	017004	016540				.WORD RSTR2
  2987						ADRMAC RSTR,\.RPCNT
  2988	017006	016564				.WORD RSTR3
  2989						ADRCRE TSTR,MAXTTY
  2990		000004			TSTR:	.REPT MAXTTY
  2991						ADRMAC TSTR,\.RPCNT
  2992					.ENDR
  2993						ADRMAC TSTR,\.RPCNT
  2994	017010	016610				.WORD TSTR0
  2995						ADRMAC TSTR,\.RPCNT
  2996	017012	016634				.WORD TSTR1
  2997						ADRMAC TSTR,\.RPCNT
  2998	017014	016660				.WORD TSTR2
  2999						ADRMAC TSTR,\.RPCNT
  3000	017016	016704				.WORD TSTR3
  3001					.IRP NAM,<MRTY,MRAL,MTTY,MTCG,ALCI,ALZM>  ;PREDEFINED TABLES
  3002						ADRCRE NAM,MAXTTY
  3003					.ENDM
  3004						ADRCRE MRTY,MAXTTY
  3005		000004			MRTY:	.REPT MAXTTY
  3006						ADRMAC MRTY,\.RPCNT
  3007					.ENDR
  3008						ADRMAC MRTY,\.RPCNT
  3009	017020	002266				.WORD MRTY0
  3010						ADRMAC MRTY,\.RPCNT
  3011	017022	002322				.WORD MRTY1
  3012						ADRMAC MRTY,\.RPCNT
  3013	017024	002356				.WORD MRTY2
  3014						ADRMAC MRTY,\.RPCNT
  3015	017026	002232				.WORD MRTY3
  3016						ADRCRE MRAL,MAXTTY
  3017		000004			MRAL:	.REPT MAXTTY
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 70
	GLPT;GLDMUX 21	PAGE 1.69 	EXPANSION OF TABLES AND BUFFERS

  3018						ADRMAC MRAL,\.RPCNT
  3019					.ENDR
  3020						ADRMAC MRAL,\.RPCNT
  3021	017030	002304				.WORD MRAL0
  3022						ADRMAC MRAL,\.RPCNT
  3023	017032	002340				.WORD MRAL1
  3024						ADRMAC MRAL,\.RPCNT
  3025	017034	002374				.WORD MRAL2
  3026						ADRMAC MRAL,\.RPCNT
  3027	017036	002250				.WORD MRAL3
  3028						ADRCRE MTTY,MAXTTY
  3029		000004			MTTY:	.REPT MAXTTY
  3030						ADRMAC MTTY,\.RPCNT
  3031					.ENDR
  3032						ADRMAC MTTY,\.RPCNT
  3033	017040	002502				.WORD MTTY0
  3034						ADRMAC MTTY,\.RPCNT
  3035	017042	002536				.WORD MTTY1
  3036						ADRMAC MTTY,\.RPCNT
  3037	017044	002572				.WORD MTTY2
  3038						ADRMAC MTTY,\.RPCNT
  3039	017046	002626				.WORD MTTY3
  3040						ADRCRE MTCG,MAXTTY
  3041		000004			MTCG:	.REPT MAXTTY
  3042						ADRMAC MTCG,\.RPCNT
  3043					.ENDR
  3044						ADRMAC MTCG,\.RPCNT
  3045	017050	002520				.WORD MTCG0
  3046						ADRMAC MTCG,\.RPCNT
  3047	017052	002554				.WORD MTCG1
  3048						ADRMAC MTCG,\.RPCNT
  3049	017054	002610				.WORD MTCG2
  3050						ADRMAC MTCG,\.RPCNT
  3051	017056	002644				.WORD MTCG3
  3052						ADRCRE ALCI,MAXTTY
  3053		000004			ALCI:	.REPT MAXTTY
  3054						ADRMAC ALCI,\.RPCNT
  3055					.ENDR
  3056						ADRMAC ALCI,\.RPCNT
  3057	017060	012541				.WORD ALCI0
  3058						ADRMAC ALCI,\.RPCNT
  3059	017062	012553				.WORD ALCI1
  3060						ADRMAC ALCI,\.RPCNT
  3061	017064	012565				.WORD ALCI2
  3062						ADRMAC ALCI,\.RPCNT
  3063	017066	012577				.WORD ALCI3
  3064						ADRCRE ALZM,MAXTTY
  3065		000004			ALZM:	.REPT MAXTTY
  3066						ADRMAC ALZM,\.RPCNT
  3067					.ENDR
  3068						ADRMAC ALZM,\.RPCNT
  3069	017070	012530				.WORD ALZM0
  3070						ADRMAC ALZM,\.RPCNT
  3071	017072	012542				.WORD ALZM1
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 71
	GLPT;GLDMUX 21	PAGE 1.70 	EXPANSION OF TABLES AND BUFFERS

  3072						ADRMAC ALZM,\.RPCNT
  3073	017074	012554				.WORD ALZM2
  3074						ADRMAC ALZM,\.RPCNT
  3075	017076	012566				.WORD ALZM3
  3076					
  3077					.IRP NAM,<RTST,RTBF,XTST,XTBF>
  3078						ADRCRE NAM,MXRTTY
  3079					.ENDM
  3080						ADRCRE RTST,MXRTTY
  3081		000002			RTST:	.REPT MXRTTY
  3082						ADRMAC RTST,\.RPCNT
  3083					.ENDR
  3084						ADRMAC RTST,\.RPCNT
  3085	017100	175620				.WORD RTST0
  3086						ADRMAC RTST,\.RPCNT
  3087	017102	177560				.WORD RTST1
  3088						ADRCRE RTBF,MXRTTY
  3089		000002			RTBF:	.REPT MXRTTY
  3090						ADRMAC RTBF,\.RPCNT
  3091					.ENDR
  3092						ADRMAC RTBF,\.RPCNT
  3093	017104	175622				.WORD RTBF0
  3094						ADRMAC RTBF,\.RPCNT
  3095	017106	177562				.WORD RTBF1
  3096						ADRCRE XTST,MXRTTY
  3097		000002			XTST:	.REPT MXRTTY
  3098						ADRMAC XTST,\.RPCNT
  3099					.ENDR
  3100						ADRMAC XTST,\.RPCNT
  3101	017110	175624				.WORD XTST0
  3102						ADRMAC XTST,\.RPCNT
  3103	017112	177564				.WORD XTST1
  3104						ADRCRE XTBF,MXRTTY
  3105		000002			XTBF:	.REPT MXRTTY
  3106						ADRMAC XTBF,\.RPCNT
  3107					.ENDR
  3108						ADRMAC XTBF,\.RPCNT
  3109	017114	175626				.WORD XTBF0
  3110						ADRMAC XTBF,\.RPCNT
  3111	017116	177566				.WORD XTBF1
  3112					
  3113					
  3114		017134			ALNUM:	.BLKW MXTTTY		; TABLE OF CURRENT ALLOCATIONS
  3115					
  3116					
  3117					; %%%% TRANSMIT OUTPUT DEVICE STATUS TABLE (MANY TO ONE NECESSITATES INDIRECTION
  3118					; %%%%	TO THIS TABLE)
  3119					
  3120						TOBFMC <0>
  3121		017364			TOBF0:	.BLKW TOBFLN/2
  3122					
  3123	017364	017134			TDST0:	.WORD TOBF0
  3124	017366	017364				.WORD TOBF0+TOBFLN
  3125	017370	017134				.WORD TOBF0
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 72
	GLPT;GLDMUX 21	PAGE 1.71 	EXPANSION OF TABLES AND BUFFERS

  3126	017372	017134				.WORD TOBF0
  3127	017374	000000				.WORD 0
  3128					
  3129					
  3130					; %%%% ANN ARBOR RECEIVE OUTPUT STATUS TABLE (MANY TO ONE NECESSITATES INDIRECTION
  3131					; %%%% THROUGH THIS TABLE)
  3132					
  3133		020776			AABF:	.BLKW AABFLN/2
  3134					
  3135	020776	017376			AAMST:	.WORD AABF
  3136	021000	020776				.WORD AABF+AABFLN
  3137	021002	017376				.WORD AABF
  3138	021004	017376				.WORD AABF
  3139	021006	000000				.WORD 0
  3140					
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 73
	GLPT;GLDMUX 21	PAGE 1.72 	%%%% GOULD VARIABLES AND BUFFERS AND TABLES %%%%

  3141					.SBTTL %%%% GOULD VARIABLES AND BUFFERS AND TABLES %%%%
  3142					
  3143	021010	000000			MARLEN:	.WORD 0
  3144	021012	000000			DATLEN:	.WORD 0
  3145	021014	000000			DATLN1:	.WORD 0
  3146	021016	000000			ENCLEN:	.WORD 0
  3147	021020	000000			MARLN1:	.WORD 0
  3148	021022	000000			TMPWRD:	.WORD 0
  3149	021024	000000			VALWRD:	.WORD 0
  3150	021026	006342			GLDPND:	.WORD CHRDEC
  3151	021030	006526			WRDPTR:	.WORD MAKWD1
  3152	021032	006562			GLDPTR:	.WORD DATDEC
  3153	021034	000000			EODFLG:	.WORD 0
  3154	021036	000000			QOTFLG:	.WORD 0
  3155	021040	000000			GRFFLG:	.WORD 0
  3156	021042	000000			COLOR:	.WORD 0
  3157	021044	000000			DLSTA1:	.WORD 0
  3158	021046	000000			DLSTA2:	.WORD 0
  3159					
  3160					
  3161	021050	000000			CLKCNT:	.WORD 0
  3162					
  3163					
  3164	021052	021136			GLPTR:	.WORD GLDBUF
  3165	021054	021136			GTPTR:	.WORD GLDBUF
  3166	021056	137040			GLEND:	.WORD <CORLIM-<LBUFL+22>>
  3167	021060	021136			GLBEG:	.WORD GLDBUF
  3168	021062	021136			GLLIM:	.WORD GLDBUF
  3169	021064	021136			GTLIM:	.WORD GLDBUF
  3170	021066	000000			GLBLK:	.WORD 0
  3171					
  3172	021070	004642			GLIPTR:	.WORD CMIDEC
  3173	021072	000000			JMPFLG:	.WORD 0
  3174	021074	000000			REPFLG:	.WORD 0
  3175					
  3176	021076	000000			PNDR0:	.WORD 0
  3177	021100	000000			JMPRET:	.WORD 0
  3178	021102	000000			REPRET:	.WORD 0
  3179	021104	000000			REPCNT:	.WORD 0
  3180					
  3181	021106	000000			GLIDL:	.WORD 0
  3182	021110	000000			GLERR:	.WORD 0
  3183	021112	000000			PAGMNG:	.WORD 0
  3184	021114	000000			SMRFLG:	.WORD 0
  3185					
  3186	021116	000177			STMSG:	.WORD 177
  3187	021120	000177			STAPAG:	.WORD 177
  3188	021122	000000			STAERR:	.WORD 0
  3189	021124	000000				.WORD 0
  3190	021126	000000				.WORD 0
  3191		000005			STLEN==<.-STMSG>/2
  3192					
  3193	021130	021116			STAMSG:	.WORD STMSG
  3194	021132	000005			STALEN:	.WORD STLEN
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 74
	GLPT;GLDMUX 21	PAGE 1.73 	%%%% GOULD VARIABLES AND BUFFERS AND TABLES %%%%

  3195	021134	000000			GLDALC:	.WORD 0
  3196					
  3197					; %%%% START OF GOULD BUFFER %%%%
  3198					
  3199					GLDBUF:
  3200		000001			.END
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 75
	GLPT;GLDMUX 21	PAGE 1 	***SYMBOL TABLE***      

	AA.BEG	000004H		COMDEC	006574		GRAPHM	007204		MRAL2	002374	
	AA.BLK	000010H		CORLIM	137472H		GRFFLG	021040		MRAL3	002250	
	AA.END	000002H		CPUERR	003324		GTLIM	021064		MRAL4	002430	
	AA.LIM	000006H		CTRD0	003612		GTPTR	021054		MRAL5	002464	
	AA.PTR	000000H		CTRT0	003506		HERE	006416		MRALSB	011240	
	AABF	017376		DATACH	006522		HERE4	007160		MRDGSB	011774	
	AABFLN	001400H		DATDEC	006562		ILLOPR	003324		MRGLSB	006300	
	AAMBUF	167772H		DATHAC	006510		IMAGE	007220		MRIMSB	011776	
	AAMINT	005360		DATLEN	021012		IMLACI	000000H		MRTY	017020	
	AAMST	020776		DATLN1	021014		IMTRAN	007374		MRTY0	002266	
	AAMSTA	167770H		DGRBUF	167766H		INGLSB	012304		MRTY1	002322	
	AATYST	000004H		DGRINT	005470		INIT	002000		MRTY2	002356	
	AL.BLK	000036H		DGRSTA	167764H		INRD0	003512		MRTY3	002232	
	AL.FLG	000022H		DGVUEI	000000H		INRT0	003162		MRTY4	002412	
	ALCI	017060		DGXBUF	167776H		INRT1	003200		MRTY5	002446	
	ALCI0	012541H		DGXINT	005472		INRT3	003216		MRTY6	002502	
	ALCI1	012553H		DGXSTA	167774H		INRTSB	004046		MRTYSB	005476	
	ALCI2	012565H		DLAYCM	007074		INSPTB	012214		MT.BLK	000034H	
	ALCI3	012577H		DLSTA1	021044		INTD0	003736		MTCG	017050	
	ALCINC	000137H		DLSTA2	021046		INTT0	003234		MTCG0	002520	
	ALCLIM	000137H		DLYTST	007002		INTT1	003252		MTCG1	002554	
	ALCM	016740		DMADEC	007176		INTT2	003306		MTCG2	002610	
	ALCM0	012534		DR11MI	000000H		INTT3	003270		MTCG3	002644	
	ALCM1	012546		EMTTRP	003324		INTTSB	004204		MTCG4	002700	
	ALCM2	012560		ENCLEN	021016		INTYSB	012004		MTCG5	002734	
	ALCM3	012572		EODFLG	021034		IOTTRP	003324		MTCGSB	011432	
	ALCMAX	000276H		EOFBLK	010414		JMPDEC	006336		MTIMSB	012000	
	ALCP	016750		EOFEND	011124		JMPFLG	021072		MTTY	017040	
	ALCP0	012600		GLBEG	021060		JMPRET	021100		MTTY0	002502	
	ALCP1	012602		GLBLK	021066		KEYBDI	000100H		MTTY1	002536	
	ALCP2	012604		GLDALC	021134		KEYBUF	167762H		MTTY2	002572	
	ALCP3	012606		GLDBUF	021136		KEYINT	004314		MTTY3	002626	
	ALLCSB	012230		GLDCA	166004H		KEYSTA	167760H		MTTY4	002662	
	ALNUM	017120		GLDCSR	166000H		KEYTAB	004500		MTTY5	002716	
	ALPHAM	007424		GLDERR	004552		LBUFL	000410H		MTTY6	002752	
	ALPTRN	007550		GLDFIN	010136		LHS	177400H		MTTYSB	005700	
	ALZM	017070		GLDINT	004540		MACTAB	006770		MXATTY	000002H	
	ALZM0	012530		GLDPND	021026		MAKWD1	006526		MXRTTY	000002H	
	ALZM1	012542		GLDPTR	021032		MAKWD2	006544		MXTTTY	000006H	
	ALZM2	012554		GLDTIM	000030H		MARLEN	021010		NOPIN	000240H	
	ALZM3	012566		GLDTTY	000003H		MARLN1	021020		NULL	005474	
	BPTTRP	003324		GLDWC	166002H		MAXTTY	000004H		NULLSB	012002	
	CBSL	000034H		GLDXIT	010220		MCNT	016730		OD.BEG	000004H	
	CG	000007H		GLEND	021056		MCNT0	012520		OD.BLK	000010H	
	CG.BLK	000036H		GLERR	021110		MCNT1	012522		OD.END	000002H	
	CG.FLG	000022H		GLIBR	003114		MCNT2	012524		OD.LIM	000006H	
	CHRDEC	006342		GLIDL	021106		MCNT3	012526		OD.PTR	000000H	
	CHRNUM	011146		GLIPTR	021070		MR.BLK	000034H		PAGLST	010662	
	CLKCNT	021050		GLIXIT	005344		MRAASB	011552		PAGMNG	021112	
	CLKHND	003326		GLLIM	021062		MRAL	017030		PC	000007R	
	CMIDEC	004642		GLOOP	010224		MRAL0	002304		PLAC	002752	
	COLOR	021042		GLPTR	021052		MRAL1	002340		PNDR0	021076	
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 76
	GLPT;GLDMUX 21	PAGE 1 	***SYMBOL TABLE***      

	POWROF	003462		RTBF	017104		STCG5	002230		WAITIN	000001H	
	PRIOR0	000340H		RTBF0	175622H		STLEN	000005H		WAITPL	003150	
	PRIOR7	000340H		RTBF1	177562H		STMSG	021116		WRDPTR	021030	
	PTRD0	003640		RTST	017100		STRIP	177600H		XDBF0	175616H	
	QOTFLG	021036		RTST0	175620H		STTY	002166		XDST0	175614H	
	R.FLGS	000040H		RTST1	177560H		STTY0	002166		XTBF	017114	
	R0	000000R		RUNLEN	007600		STTY1	002170		XTBF0	175626H	
	R1	000001R		RUNLN2	007626		STTY2	002172		XTBF1	177566H	
	R2	000002R		RUNTRN	010050		STTY3	002174		XTST	017110	
	R3	000003R		SALBLK	010356		STTY4	002176		XTST0	175624H	
	R4	000004R		SALEND	010366		STTY5	002200		XTST1	177564H	
	R5	000005R		SGLIBR	003160		T.FLGS	000040H		%AABF	167772H	
	RDBF0	175612H		SHGBLK	010402		TDST0	017364		%AACS	167770H	
	RDST0	175610H		SHGEND	010414		TESTLB	002232		%AAMPR	000200	
	REPCNT	021104		SLALPH	140000H		TI.BEG	000004H		%AAMV	000210	
	REPFLG	021074		SLEOF	170000H		TI.BLK	000030H		%BPTV	000014	
	REPRET	021102		SLGBLK	010366		TI.END	000002H		%CCACK	000301	
	REPTRN	007142		SLGEND	010402		TI.FLG	000010H		%CCEOD	000206	
	RI.BEG	000004H		SLHGRF	160000H		TI.LIM	000006H		%CCQOT	000215	
	RI.BLK	000030H		SLLGRF	150000H		TI.PTR	000000H		%CCSOD	000205	
	RI.END	000002H		SLRD0	003540		TIBF0	016270		%CLRPR	000200	
	RI.FLG	000010H		SMEARP	003460		TIBF1	016330		%CLRV	000060	
	RI.LIM	000006H		SMRBLK	011124		TIBF2	016370		%CLTPR	000200	
	RI.PTR	000000H		SMREND	011146		TIBF3	016430		%CLXV	000064	
	RIBF0	013270		SMRFLG	021114		TIBFLN	000040H		%CRBUF	177562H	
	RIBF1	013570		SP	000006R		TMPLEN	000024H		%CRCSR	177560H	
	RIBF2	014070		SRAL	002202		TMPWRD	021022		%CXBUF	177566H	
	RIBF3	014370		SRAL0	002202		TO.BEG	000016H		%CXCSR	177564H	
	RIBFLN	000300H		SRAL1	002204		TO.BLK	000032H		%DGRBF	167766H	
	RO.BEG	000016H		SRAL2	002206		TO.END	000014H		%DGRCS	167764H	
	RO.BLK	000032H		SRAL3	002210		TO.LIM	000020H		%DGRPR	000200	
	RO.END	000014H		SRAL4	002212		TO.PTR	000012H		%DGXBF	167776H	
	RO.LIM	000020H		SRAL5	002214		TOBF0	017134		%DGXCS	167774H	
	RO.PTR	000012H		SRTY	002152		TOBFLN	000230H		%DGXPR	000200	
	ROBF0	014670		SRTY0	002152		TS.CNT	000044H		%DIGRV	000204	
	ROBF1	015170		SRTY1	002154		TS.PTR	000042H		%DIGXV	000214	
	ROBF2	015470		SRTY2	002156		TSTA	016770		%DLRPR	000300	
	ROBF3	015770		SRTY3	002160		TSTA0	013040		%DLRV	000300	
	ROBFLN	000300H		SRTY4	002162		TSTA1	013106		%DLXPR	000300	
	RS.CNT	000044H		SRTY5	002164		TSTA2	013154		%DLXV	000304	
	RS.PTR	000042H		SSTABR	003156		TSTA3	013222		%DRBUF	175612H	
	RSTA	016760		STAERR	021122		TSTR	017010		%DRCSR	175610H	
	RSTA0	012610		STALEN	021132		TSTR0	016610		%DXBUF	175616H	
	RSTA1	012656		STAMSG	021130		TSTR1	016634		%DXCSR	175614H	
	RSTA2	012724		STAPAG	021120		TSTR2	016660		%ELRPR	000200	
	RSTA3	012772		STATBR	002752		TSTR3	016704		%ELRV	000310	
	RSTALL	003472		STCG	002216		TTYNUM	000025H		%ELXPR	000200	
	RSTR	017000		STCG0	002216		UPWORD	007000		%ELXV	000314	
	RSTR0	016470		STCG1	002220		UUOH	003324		%EMTV	000030	
	RSTR1	016514		STCG2	002222		VALWRD	021024		%ERBUF	175622H	
	RSTR2	016540		STCG3	002224		VCRD0	003504		%ERCSR	175620H	
	RSTR3	016564		STCG4	002226		VCRT0	003510		%ERRV	000004	
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 77
	GLPT;GLDMUX 21	PAGE 1 	***SYMBOL TABLE***      

	%EXBUF	175626H		%MSTR6	000346H	
	%EXCSR	175624H		%MSTR7	000347H	
	%FLRPR	000200		%MXBF1	167772H	
	%FLRV	000320		%MXBF2	167776H	
	%FLXPR	000200		%MXCS1	167770H	
	%FLXV	000324		%MXCS2	167774H	
	%FRBUF	175632H		%PWRV	000024	
	%FRCSR	175630H		%TRPV	000034	
	%FXBUF	175636H	
	%FXCSR	175634H	
	%GCADV	000201H	
	%GCCUT	000002H	
	%GCERP	000301H	
	%GCFF	000000H	
	%GCGRF	000001H	
	%GCHOM	000200H	
	%GCIOF	000007H	
	%GCION	000006H	
	%GCLSL	000005H	
	%GCOFF	000004H	
	%GCON	000003H	
	%GCSRP	000300H	
	%GLCA	166004	
	%GLCSR	166000	
	%GLDPR	000240	
	%GLDV	000174	
	%GLWC	166002	
	%GSBSY	004000H	
	%GSDON	002000H	
	%GSERR	060400H	
	%GSNRD	000400H	
	%GSPAP	020000H	
	%GSTIM	040000H	
	%GSVAC	010000H	
	%ILIV	000010	
	%IOTV	000020	
	%KEYPR	000200	
	%KEYV	000200	
	%KYBUF	167762H	
	%KYSTA	167760H	
	%LKPR	000300	
	%LKV	000100	
	%LRBF1	167762H	
	%LRBF2	167766H	
	%LRCS1	167760H	
	%LRCS2	167764H	
	%MSTR	000340H	
	%MSTR1	000341H	
	%MSTR2	000342H	
	%MSTR3	000343H	
	%MSTR4	000344H	
	%MSTR5	000345H	
	TERMINAL MULTIPEXER AND GOULD DRIVER	PALX 235	09/03/76  03:27:43	PAGE 78
	GLPT;GLDMUX 21	PAGE 1 	***SYMBOL TABLE***      


1.8 WDS AVG INSN LENGTH

3 SECONDS RUN-TIME
AABF	  3135	  3136	  3137	  3138
AABFLN	    45#	  3133	  3136
AAMBUF	   201#	  1656	  2464
AAMINT	   359
AAMST	  1634
AAMSTA	   200#	  1649
AATYST	   759#	  2434
AA.BEG	   232#	  1639
AA.BLK	   234#	  1658
AA.END	   231#	  1637
AA.LIM	   233#	  1635	  1657
AA.PTR	   230#	  1647
ALCI	  2536
ALCI0	  2620#	  3057
ALCI1	  2632#	  3059
ALCI2	  2644#	  3061
ALCI3	  2656#	  3063
ALCINC	    54#	  2536	  2537
ALCLIM	    53#	  1714	  2179	  2459
ALCM	  2538
ALCM0	  2662	  2934
ALCM1	  2664	  2936
ALCM2	  2666	  2938
ALCM3	  2668	  2940
ALCMAX	    48#	    53	    54
ALCP	  2357	  2370	  2517	  2538
ALCP0	  2946
ALCP1	  2948
ALCP2	  2950
ALCP3	  2952
ALLCSB	  1717	  2182	  2462	  2514
ALNUM	  1711	  1714	  1841	  2179	  2456	  2459	  2497	  2537
ALPHAM	  1992	  2060
ALPTRN	  2067
ALZM	  2517
ALZM0	  3069
ALZM1	  3071
ALZM2	  3073
ALZM3	  3075
AL.BLK	   252#	  1743	  1765	  1792	  2352	  2510
AL.FLG	   218#	  2541
BPTTRP	   326
CBSL	    24#	  1757	  1785
CG	    23#	  2402
CG.BLK	   223#	  2395	  2494
CG.FLG	   247#	  1302	  1394	  2512
CHRDEC	  1911	  2023	  2063	  2108	  2574	  3150
CHRNUM	  1515
CLKCNT	  1118	  1122	  1125	  1126	  1146	  2570
CLKHND	   347
CMIDEC	  1519	  1520	  1525	  1553	  1560	  1571	  1576	  1584	  1589	  1603	  1604	  2573	  3172
COLOR	  2085	  2088	  2116
COMDEC	  1889	  1908
CORLIM	    32#	  3166
CPUERR	   320
CTRD0	  1191
CTRT0	  1201	  1224
DATACH	  1849	  1868	  1874
DATDEC	  1979	  2040	  2074	  2148	  2576	  3152
DATHAC	  1845
DATLEN	  2002	  2005	  2037	  2046	  2071	  2093	  2111	  2112	  2113
DATLN1	  2047	  2065	  2066
DGRBUF	   182#
DGRINT	   356
DGRSTA	   181#
DGVUEI	    38#
DGXBUF	   184#
DGXINT	   362	  1088
DGXSTA	   183#
DLAYCM	  1945	  1947	  1949
DLSTA1	  1178
DLSTA2	  1297
DLYTST	  1914
DMADEC	  1890
DR11MI	    36#
EMTTRP	   335
ENCLEN	  2080	  2081	  2144
EODFLG	  1114	  1858	  1860	  1869	  1873	  2578
EOFBLK	  1936
GLBEG	  1475	  2154	  2552	  2553	  2554	  2555
GLBLK	  1481	  1826	  1906	  2017	  2058	  2103	  2157	  2190	  2563
GLDALC	  2183	  2192	  2196	  2571
GLDBUF	  3164	  3165	  3167	  3168	  3169
GLDCA	   189#	  1596
GLDCSR	   187#	  1448	  1451	  1458	  1488	  1490	  1501	  1518	  1524	  1593	  1601	  1852	  2579
	  2580
GLDFIN	  1931	  1960	  1976	  1980	  1985	  2041	  2075	  2149
GLDINT	   350	   974	  2170
GLDPND	  1838	  1908	  1911	  2019	  2023	  2060	  2063	  2105	  2108	  2574
GLDPTR	  1886	  1971	  1979	  2032	  2040	  2067	  2074	  2082	  2110	  2148	  2576
GLDTIM	    31#	  1126
GLDTTY	   674#	   935
GLDWC	   188#	  1595
GLDXIT	  1909	  1972	  2020	  2033	  2039	  2061	  2068	  2073	  2083	  2106	  2127	  2146
GLEND	  1472	  2152
GLERR	   964	  1446	  1452	  1462	  1828	  2566
GLIBR	   934	   962	   975	   980	   981	  1140	  2557
GLIDL	  1116	  1485	  1493	  2160	  2572
GLIPTR	  1467	  1519	  1525	  1529	  1603	  1606	  1609	  2573
GLIXIT	  1456	  1460	  1486	  1526	  1530	  1607	  1610
GLLIM	  1478	  1901	  1903	  2012	  2014	  2053	  2055	  2098	  2100	  2155	  2554
GLOOP	  1854	  1859	  1862	  1866	  1871	  1875	  1881	  2161	  2171
GLPTR	  1135	  1138	  1483	  2158	  2552
GRFFLG	  1927	  1930	  1954	  1957	  1991	  2569
GTLIM	  1445	  1612	  2555
GTPTR	  1139	  1835	  1901	  2159	  2173	  2553
HERE	  1851
HERE4	  1963
ILLOPR	   323
IMAGE	  1997	  2019
IMLACI	    39#
IMTRAN	  2032
INGLSB	  2524
INIT	   627	  1160
INRD0	   365
INRT0	   371	   377
INRT1	   341
INRTSB	   993	  1008
INSPTB	  2518
INTD0	   368
INTT0	   374	   380
INTT1	   344
INTTSB	  1043	  1058
INTYSB	   658
IOTTRP	   329
JMPDEC	  2194
JMPFLG	  1469	  1552	  1558	  2564
JMPRET	  1551	  1557
KEYBDI	    37#
KEYBUF	   198#	  1382
KEYINT	   353
KEYSTA	   197#
KEYTAB	  1390
LBUFL	    27#	  3166
LHS	    30#	  2431
MACTAB	  1925
MAKWD1	  1884	  2575	  3151
MAKWD2	  1880
MARLEN	  2004	  2027	  2030	  2086	  2089	  2092	  2114	  2119	  2124
MARLN1	  2006	  2025	  2026
MAXTTY	    18#	   103	   656	  1186	  2594	  2606	  2658	  2670	  2762	  2854	  2866	  2878	  2890
	  2902	  2918	  2930	  2942	  2954	  2966	  2978	  2990	  3005	  3017	  3029	  3041	  3053
	  3065
MCNT	  2358	  2369	  2379	  2498
MCNT0	  2922
MCNT1	  2924
MCNT2	  2926
MCNT3	  2928
MRAASB	   764	   785
MRAL	  2378
MRAL0	   697	   705	   715	  2683	  3021
MRAL1	   718	   726	   736	  2705	  3023
MRAL2	   739	   747	   757	  2727	  3025
MRAL3	   676	   684	   694	  2749	  3027
MRAL4	   761	   769	   779
MRAL5	   782	   790	   800
MRALSB	   689	   710	   731	   752	   774	   795
MRDGSB	   742
MRGLSB	   679
MRTY	  1708	  2199	  2453
MRTY0	   686	   694	   705	  2678	  3009
MRTY1	   707	   715	   726	  2700	  3011
MRTY2	   728	   736	   747	  2722	  3013
MRTY3	   684	  2744	  3015
MRTY4	   749	   757	   769
MRTY5	   771	   779	   790
MRTY6	   792	   800
MRTYSB	   700	   721
MR.BLK	   222#	  1304	  1396	  1682	  2415	  2424	  2493
MTCG	  2413
MTCG0	   806	   814	   824	  2775	  3045
MTCG1	   827	   835	   845	  2797	  3047
MTCG2	   848	   856	   866	  2819	  3049
MTCG3	   869	   877	   887	  2841	  3051
MTCG4	   890	   898	   908
MTCG5	   911	   919	   929
MTCGSB	   819	   840	   861	   903	   924
MTTY	  1810
MTTY0	   814	  2770	  3033
MTTY1	   816	   824	   835	  2792	  3035
MTTY2	   837	   845	   856	  2814	  3037
MTTY3	   858	   866	   877	  2836	  3039
MTTY4	   879	   887	   898
MTTY5	   900	   908	   919
MTTY6	   921	   929
MTTYSB	   809	   830	   851	   872	   893	   914
MT.BLK	   251#	  1726	  2372	  2381	  2509	  2540
MXATTY	    20#	    45
MXRTTY	    19#	  3081	  3089	  3097	  3105
MXTTTY	    17#	   666	   667	   668	   669	   802	   931	  3114
NOPIN	    25#	  1228	  1316	  1411
NULLSB	   882	  1023	  1073	  2522	  2523	  2525	  2526	  2527
OD.BEG	   261#	   632	   633	  1255	  2773	  2795	  2817	  2839
OD.BLK	   263#	   634	  1275	  2781	  2803	  2825	  2847
OD.END	   260#	  1253	  2772	  2794	  2816	  2838
OD.LIM	   262#	   633	  1251	  1273	  2774	  2796	  2818	  2840
OD.PTR	   259#	   632	  1264	  2771	  2793	  2815	  2837
PAGLST	  1512
PAGMNG	  1453	  1513	  1516	  2567
PC	    13#	   658	   679	   689	   700	   710	   721	   731	   742	   752	   764	   774	   785
	   795	   809	   819	   830	   840	   851	   861	   872	   882	   893	   903	   914	   924
	   974	   993	  1008	  1023	  1043	  1058	  1073	  1088	  1326	  1370	  1515	  1686	  1717
	  1721	  1732	  1817	  1832	  2170	  2182	  2204	  2341	  2356	  2375	  2385	  2401	  2417
	  2428	  2462	  2466	  2472	  2475	  2478	  2481	  2514	  2518	  2520	  2549	  2582
PLAC	   682#	   685	   692#	   695	   703#	   706	   713#	   716	   724#	   727	   734#	   737	   745#
	   748	   755#	   758	   767#	   770	   777#	   780	   788#	   791	   798#	   801	   812#	   815
	   822#	   825	   833#	   836	   843#	   846	   854#	   857	   864#	   867	   875#	   878	   885#
	   888	   896#	   899	   906#	   909	   917#	   920	   927#	   930
PNDR0	  1528	  1532
POWROF	   332	  1159
PRIOR0	    21#	  1709	  1907	  1910	  2018	  2022	  2059	  2062	  2104	  2107	  2187	  2200	  2454
PRIOR7	    22#	  1701	  1807	  1811	  1900	  2011	  2052	  2097	  2184	  2450
PTRD0	  1204
QOTFLG	  1846	  1848	  1865	  2568
R0	     6#	   938	   941	   946	  1173	  1176	  1178	  1182	  1185	  1186	  1189	  1190	  1198
	  1201	  1211	  1216	  1235	  1247	  1252	  1274	  1282	  1291	  1295	  1297	  1307	  1324
	  1334	  1339	  1359	  1368	  1377	  1382	  1383	  1384	  1400	  1402	  1420	  1442	  1494
	  1497	  1503	  1504	  1508	  1509	  1513	  1518	  1523	  1524	  1528	  1532	  1538	  1540
	  1542	  1547	  1556	  1559	  1564	  1588	  1595	  1597	  1598	  1599	  1620	  1631	  1636
	  1656	  1665	  1688	  1693	  1739	  1749	  1754	  1757	  1761	  1762	  1768	  1772	  1773
	  1787	  1796	  1844	  1850	  1856	  1863	  1867	  1879	  1883	  1918	  1919	  1920	  1921
	  1922	  1925	  1926	  1927	  1928	  2316	  2322	  2323	  2324	  2326	  2357	  2360	  2370
	  2402	  2404	  2430	  2431	  2436	  2442
R1	     7#	   629	   632	   633	   634	  1174	  1197	  1210	  1214	  1215	  1217	  1219	  1220
	  1223	  1227	  1234	  1248	  1250	  1251	  1253	  1255	  1264	  1273	  1275	  1281	  1292
	  1299	  1300	  1302	  1306	  1308	  1310	  1311	  1313	  1314	  1315	  1323	  1335	  1337
	  1338	  1340	  1342	  1350	  1360	  1361	  1367	  1378	  1391	  1392	  1394	  1399	  1403
	  1405	  1406	  1408	  1409	  1410	  1419	  1632	  1634	  1635	  1637	  1639	  1647	  1657
	  1658	  1664	  1679	  1680	  1682	  1687	  1689	  1691	  1692	  1694	  1696	  1697	  1699
	  1700	  1702	  1710	  1725	  1726	  1728	  1733	  1734	  1739	  1740	  1742	  1743	  1746
	  1750	  1752	  1753	  1760	  1763	  1764	  1765	  1784	  1790	  1791	  1792	  1795	  1798
	  1800	  1801	  1803	  1804	  1805	  1808	  1812	  1813	  1821	  1834	  2175	  2177	  2178
	  2185	  2313	  2316	  2317	  2318	  2319	  2339	  2349	  2350	  2352	  2359	  2361	  2363
	  2364	  2366	  2371	  2372	  2381	  2382	  2394	  2395	  2397	  2403	  2405	  2407	  2408
	  2410	  2411	  2415	  2421	  2422	  2424	  2429	  2438	  2440	  2441	  2443	  2445	  2446
	  2448	  2449	  2451	  2455	  2486	  2487	  2488	  2489	  2490	  2491	  2492	  2493	  2494
	  2495	  2499	  2500	  2502	  2503	  2504	  2507	  2509	  2510	  2511	  2512	  2515	  2516
	  2534	  2535	  2541	  2546
R2	     8#	  1175	  1196	  1209	  1215	  1216	  1217	  1219	  1220	  1223	  1233	  1249	  1251
	  1252	  1253	  1255	  1264	  1273	  1280	  1293	  1306	  1307	  1308	  1310	  1311	  1314
	  1322	  1336	  1338	  1339	  1340	  1342	  1350	  1360	  1366	  1379	  1399	  1402	  1403
	  1405	  1406	  1409	  1418	  1633	  1635	  1636	  1637	  1639	  1647	  1657	  1663	  1687
	  1688	  1689	  1691	  1702	  1710	  1733	  1749	  1750	  1752	  1808	  1812	  1834	  1844
	  2175	  2177	  2178	  2185	  2359	  2360	  2361	  2363	  2364	  2371	  2382	  2403	  2404
	  2405	  2407	  2408	  2411	  2429	  2430	  2438	  2440	  2451	  2455
R3	     9#	   656	   659	   677	   687	   698	   708	   719	   729	   740	   750	   762	   772
	   783	   793	   807	   817	   828	   838	   849	   859	   870	   880	   891	   901	   912
	   922	   935	   936	   990	   991	   998	  1005	  1006	  1013	  1020	  1021	  1028	  1040
	  1041	  1048	  1055	  1056	  1063	  1070	  1071	  1078	  1085	  1086	  1093	  1295	  1299
	  1303	  1337	  1352	  1359	  1380	  1383	  1385	  1386	  1387	  1388	  1389	  1390	  1391
	  1395	  1417	  1679	  1708	  1711	  1714	  1719	  1725	  1742	  1764	  1791	  1810	  1821
	  1841	  2179	  2199	  2349	  2357	  2358	  2369	  2370	  2378	  2379	  2394	  2412	  2413
	  2421	  2432	  2453	  2456	  2459	  2486	  2495	  2497	  2498	  2500	  2502	  2511	  2512
	  2516	  2517	  2518	  2535	  2536	  2537	  2538	  2539
R4	    10#	   936	   937	   939	   942	   943	   947	   949	   950	   952	   957	   959	  1134
	  1135	  1136	  1137	  1138	  1139	  1145	  1443	  1445	  1472	  1475	  1478	  1483	  1494
	  1551	  1556	  1557	  1559	  1575	  1581	  1582	  1596	  1599	  1612	  1619	  1692	  1693
	  1694	  1696	  1697	  1700	  1753	  1797	  1798	  1800	  1801	  1804	  1835	  1897	  1923
	  1924	  1925	  1959	  1970	  1975	  1978	  1984	  2008	  2012	  2026	  2029	  2036	  2049
	  2053	  2066	  2070	  2095	  2098	  2112	  2118	  2123	  2133	  2139	  2143	  2152	  2154
	  2155	  2158	  2159	  2173	  2314	  2315	  2320	  2338	  2441	  2442	  2443	  2445	  2446
	  2449
R5	    11#	   937	   942	   946	   947	   949	   950	   957	  1294	  1303	  1304	  1321	  1381
	  1395	  1396	  1416	  1444	  1512	  1618	  1760	  1761	  1762	  1772	  1774	  1775	  1776
	  1777	  1782	  1784	  1785	  1786	  1787	  1897	  1898	  1903	  2003	  2004	  2005	  2006
	  2007	  2008	  2014	  2045	  2046	  2047	  2048	  2049	  2055	  2090	  2091	  2092	  2093
	  2094	  2095	  2100	  2129	  2131	  2134	  2140	  2319	  2328	  2330	  2331	  2332	  2333
	  2358	  2367	  2369	  2376	  2432	  2433	  2434	  2435	  2436	  2533	  2539	  2540	  2547
RDBF0	   166#	  1176
RDST0	   165#	   635
REPCNT	  1568	  1581
REPFLG	  1476	  1570	  1583	  2565
REPRET	  1575	  1582
REPTRN	  1971
RIBF0	  2674	  2675	  2676	  2677
RIBF1	  2696	  2697	  2698	  2699
RIBF2	  2718	  2719	  2720	  2721
RIBF3	  2740	  2741	  2742	  2743
RIBFLN	    43#	  2675	  2697	  2719	  2741	  2858	  2860	  2862	  2864
RI.BEG	   211#	  1219	  1691	  2177	  2440	  2487	  2488
RI.BLK	   220#	  2491
RI.END	   210#	  1217	  1689	  2175	  2438
RI.FLG	   213#	  1227	  2495
RI.LIM	   212#	  1220	  1687	  1710	  1834	  2178	  2429	  2455	  2488
RI.PTR	   209#	  1215	  1223	  1702	  2185	  2451	  2487
ROBF0	  2679	  2680	  2681	  2682
ROBF1	  2701	  2702	  2703	  2704
ROBF2	  2723	  2724	  2725	  2726
ROBF3	  2745	  2746	  2747	  2748
ROBFLN	    44#	    45	  2680	  2702	  2724	  2746	  2870	  2872	  2874	  2876
RO.BEG	   216#	  1342	  1696	  2407	  2445	  2489	  2490
RO.BLK	   221#	  1361	  1680	  1699	  2397	  2410	  2422	  2448	  2492
RO.END	   215#	  1340	  1694	  2405	  2443
RO.LIM	   217#	  1338	  1360	  1697	  2408	  2446	  2490
RO.PTR	   214#	  1350	  1692	  1700	  2403	  2411	  2441	  2449	  2489
RSTA	  1190	  1303	  1337	  1395	  1679	  1821	  2394	  2421	  2486	  2535
RSTA0	  2958
RSTA1	  2960
RSTA2	  2962
RSTA3	  2964
RSTALL	  1156
RSTR	  2500
RSTR0	  2693	  2982
RSTR1	  2715	  2984
RSTR2	  2737	  2986
RSTR3	  2759	  2988
RS.CNT	   226#	  2499
RS.PTR	   225#	  2500
RTBF	  1295
RTBF0	   172#	  3093
RTBF1	   177#	  3095
RTST0	   171#	   638	  3085
RTST1	   176#	   641	  3087
RUNLEN	  1998
RUNLN2	  2082	  2105
RUNTRN	  2110
R.FLGS	   224#
SALBLK	  1933
SGLIBR	   975	  2557
SHGBLK	  1935
SLALPH	    76#
SLEOF	    79#
SLGBLK	  1934
SLHGRF	    78#
SLLGRF	    77#
SLRD0	   630	  1164	  1226
SMEARP	  1137
SMRBLK	  1152
SP	    12#	   627	   971	   990	   998	  1005	  1013	  1020	  1028	  1040	  1048	  1055	  1063
	  1070	  1078	  1085	  1093	  1134	  1145	  1173	  1174	  1175	  1196	  1197	  1198	  1209
	  1210	  1211	  1233	  1234	  1235	  1247	  1248	  1249	  1261	  1272	  1280	  1281	  1282
	  1291	  1292	  1293	  1294	  1321	  1322	  1323	  1324	  1334	  1335	  1336	  1348	  1358
	  1366	  1367	  1368	  1377	  1378	  1379	  1380	  1381	  1416	  1417	  1418	  1419	  1420
	  1442	  1443	  1444	  1618	  1619	  1620	  1631	  1632	  1633	  1645	  1655	  1663	  1664
	  1665	  1684	  1730	  1782	  1786	  1795	  1796	  1797	  1830	  2167	  2313	  2314	  2338
	  2339	  2354	  2399	  2426	  2533	  2534	  2546	  2547
SRAL	   693	   714	   735	   756	   778	   799	  2378
SRTY	   683	   704	   725	   746	   768	   789	  1708	  2199	  2453	  2495
SSTABR	   958	  2556
STAERR	  1451	  1490	  1852
STALEN	   953	   955	  2558
STAMSG	   938	   941	   956	  2559
STAPAG	  1588	  2577
STATBR	   958	   980	  1455	  1491	  1853	  2556
STCG	   823	   844	   865	   886	   907	   928	  2413	  2512
STLEN	   955	  2558	  3191#	  3194
STMSG	   956	  2559	  3191	  3193
STRIP	    29#	  2081	  2089	  2091	  2131
STTY	   813	   834	   855	   876	   897	   918	  1810	  2511
TDST0	   629	  1250	  2771	  2772	  2773	  2774	  2781	  2793	  2794	  2795	  2796	  2803	  2815
	  2816	  2817	  2818	  2825	  2837	  2838	  2839	  2840	  2847
TESTLB	   664	   680	   690	   701	   711	   722	   732	   743	   753	   765	   775	   786	   796
	   810	   820	   831	   841	   852	   862	   873	   883	   894	   904	   915	   925	   944
	   960	   978
TIBF0	  2766	  2767	  2768	  2769
TIBF1	  2788	  2789	  2790	  2791
TIBF2	  2810	  2811	  2812	  2813
TIBF3	  2832	  2833	  2834	  2835
TIBFLN	   102#	  2767	  2789	  2811	  2833	  2882	  2884	  2886	  2888
TI.BEG	   240#	   949	  1310	  1405	  1752	  2503	  2504
TI.BLK	   249#	   939	   952	  1300	  1313	  1392	  1408	  1813	  2507
TI.END	   239#	   947	  1308	  1403	  1750
TI.FLG	   242#	   943	   959	  1315	  1410	  2511
TI.LIM	   241#	   950	  1311	  1406	  1733	  1812	  2504
TI.PTR	   238#	   937	   942	   957	  1306	  1314	  1399	  1409	  1808	  2503
TMPLEN	    28#	  2894	  2896	  2898	  2900	  2906	  2908	  2910	  2912
TMPWRD	  1879	  1883	  1888	  1896	  1913	  1917	  1918	  1944	  1946	  1948	  1952	  1955	  1958
	  1959	  1962	  1966	  1978	  1983	  1984	  1996	  2002	  2003	  2036	  2045	  2070	  2080
	  2086	  2090	  2129	  2143
TOBF0	  3123	  3124	  3125	  3126
TOBFLN	   103#	  3121	  3124
TO.BEG	   245#	  1800	  2363
TO.BLK	   250#	  1728	  1803	  2350	  2366
TO.END	   244#	  1798	  2361
TO.LIM	   246#	  1801	  2364
TO.PTR	   243#	  1753	  1804	  2359	  2371	  2382
TSTA	   936	  1299	  1391	  1725	  2349	  2502	  2539
TSTA0	  2970
TSTA1	  2972
TSTA2	  2974
TSTA3	  2976
TSTR	  1742	  1764	  1791	  2516
TSTR0	  2785	  2994
TSTR1	  2807	  2996
TSTR2	  2829	  2998
TSTR3	  2851	  3000
TS.CNT	   255#	  1734	  1740	  1763	  1790	  1805	  2515
TS.PTR	   254#	  1739	  1742	  1746	  1760	  1764	  1784	  1791	  2516
TTYNUM	   219#	   248#	  1795
T.FLGS	   253#
UPWORD	  1917	  1923
UUOH	   338
VCRD0	   630	  1180	  1191	  1204	  1226
VCRT0	  1190	  1214
WAITIN	    26#	   662	  1718	  1814	  2202	  2373	  2380	  2414	  2463
WAITPL	   662	   965	   981	  1228	  1316	  1411	  1718	  1814	  2202	  2373	  2380	  2414	  2463
WRDPTR	  1877	  1880	  1884	  2575
XDBF0	   168#	  1274
XDST0	   167#	   636	  1266	  1815	  2383
XTBF	  1359
XTBF0	   174#	  3109
XTBF1	   179#	  3111
XTST	  1352	  1719	  2412
XTST0	   173#	   639	  3101
XTST1	   178#	   642	  3103
.RPCNT	  2597	  2599	  2601	  2603	  2609	  2621	  2633	  2645	  2661	  2663	  2665	  2667	  2673
	  2695	  2717	  2739	  2765	  2787	  2809	  2831	  2857	  2859	  2861	  2863	  2869	  2871
	  2873	  2875	  2881	  2883	  2885	  2887	  2893	  2895	  2897	  2899	  2905	  2907	  2909
	  2911	  2921	  2923	  2925	  2927	  2933	  2935	  2937	  2939	  2945	  2947	  2949	  2951
	  2957	  2959	  2961	  2963	  2969	  2971	  2973	  2975	  2981	  2983	  2985	  2987	  2993
	  2995	  2997	  2999	  3008	  3010	  3012	  3014	  3020	  3022	  3024	  3026	  3032	  3034
	  3036	  3038	  3044	  3046	  3048	  3050	  3056	  3058	  3060	  3062	  3068	  3070	  3072
	  3074	  3084	  3086	  3092	  3094	  3100	  3102	  3108	  3110
%0	     6
%1	     7
%2	     8
%3	     9
%4	    10
%5	    11
%6	    12
%7	    13
%AABF	   141#	   201
%AACS	   140#	   200
%AAMPR	   308#	   309	   360
%AAMV	   280#	   358
%BPTV	   269#	   325
%CCACK	    97#	  1850
%CCEOD	    95#	  1867
%CCQOT	    96#	  1863
%CCSOD	    94#	  1856
%CLRPR	   304#	   342
%CLRV	   274#	   340
%CLTPR	   305#	   345
%CLXV	   275#	   343
%CRBUF	   111#	   177
%CRCSR	   110#	   176
%CXBUF	   113#	   179
%CXCSR	   112#	   178
%DGRBF	   149#	   182
%DGRCS	   148#	   181
%DGRPR	   307#	   357
%DGXBF	   151#	   184
%DGXCS	   150#	   183
%DGXPR	   309#	   363
%DIGRV	   279#	   355
%DIGXV	   281#	   361
%DLRPR	   315#	   366
%DLRV	   282#	   364
%DLXPR	   316#	   369
%DLXV	   283#	   367
%DRBUF	   115#	   166
%DRCSR	   114#	   165
%DXBUF	   117#	   168
%DXCSR	   116#	   167
%ELRPR	   310#	   372
%ELRV	   284#	   370
%ELXPR	   311#	   375
%ELXV	   285#	   373
%EMTV	   272#	   334
%ERBUF	   119#	   172
%ERCSR	   118#	   171
%ERRV	   267#	   319
%EXBUF	   121#	   174
%EXCSR	   120#	   173
%FLRPR	   312#	   378
%FLRV	   286#	   376
%FLXPR	   313#	   381
%FLXV	   287#	   379
%FRBUF	   123#
%FRCSR	   122#
%FXBUF	   125#
%FXCSR	   124#
%GCADV	    66#
%GCCUT	    59#
%GCERP	    71#
%GCFF	    57#
%GCGRF	    58#	  1952
%GCHOM	    65#
%GCIOF	    64#
%GCION	    63#	  2580
%GCLSL	    62#
%GCOFF	    61#	  1955	  2579
%GCON	    60#	  1946
%GCSRP	    70#
%GLCA	   159#	   189
%GLCSR	   157#	   187
%GLDPR	   314#	   351
%GLDV	   277#	   349
%GLWC	   158#	   188
%GSBSY	    84#	  1501
%GSDON	    83#	  1593	  1601
%GSERR	    88#	  1448	  1458
%GSNRD	    82#
%GSPAP	    86#	  1488
%GSTIM	    87#
%GSVAC	    85#
%ILIV	   268#	   322
%IOTV	   270#	   328
%KEYPR	   306#	   307	   354
%KEYV	   278#	   352
%KYBUF	   145#	   198
%KYSTA	   144#	   197
%LKPR	   317#	   348
%LKS	   644	  1113	  1121	  1147	  1870
%LKV	   276#	   346
%LRBF1	   128#	   145
%LRBF2	   130#	   149
%LRCS1	   127#	   144
%LRCS2	   129#	   148
%MSTR	   290#	   333
%MSTR1	   296#	   321
%MSTR2	   297#	   324
%MSTR3	   298#	   327
%MSTR4	   299#	   330
%MSTR5	   300#	   336
%MSTR6	   301#	   339
%MSTR7	   302#
%MXBF1	   132#	   141
%MXBF2	   134#	   151
%MXCS1	   131#	   140
%MXCS2	   133#	   150
%PS	   625	   663	   971	   972	  1261	  1262	  1272	  1348	  1349	  1358	  1645	  1646	  1655
	  1701	  1709	  1807	  1811	  1900	  1907	  1910	  2011	  2018	  2022	  2052	  2059	  2062
	  2097	  2104	  2107	  2167	  2168	  2184	  2187	  2200	  2450	  2454
%PWRV	   271#	   331	  1156	  1159
%TRPV	   273#	   337
ADRCRE	   530#	  2917	  2929	  2941	  2953	  2965	  2977	  2989	  3004	  3016	  3028	  3040	  3052
	  3064	  3080	  3088	  3096	  3104
ADRMAC	   526#	  2921	  2923	  2925	  2927	  2933	  2935	  2937	  2939	  2945	  2947	  2949	  2951
	  2957	  2959	  2961	  2963	  2969	  2971	  2973	  2975	  2981	  2983	  2985	  2987	  2993
	  2995	  2997	  2999	  3008	  3010	  3012	  3014	  3020	  3022	  3024	  3026	  3032	  3034
	  3036	  3038	  3044	  3046	  3048	  3050	  3056	  3058	  3060	  3062	  3068	  3070	  3072
	  3074	  3084	  3086	  3092	  3094	  3100	  3102	  3108	  3110
ALCMMC	   603#	  2609	  2621	  2633	  2645
ALCPMC	   617#	  2661	  2663	  2665	  2667
CALL	   410#	   657	   678	   688	   699	   709	   720	   730	   741	   751	   763	   773	   784
	   794	   808	   818	   829	   839	   850	   860	   871	   881	   892	   902	   913	   923
	   973	   992	  1007	  1022	  1042	  1057	  1072	  1087	  1514	  1716	  2169	  2181	  2461
	  2513
INRTMC	   585#	   985	  1000	  1015
INTTMC	   593#	  1035	  1050	  1065	  1080
MASK	   401#	   966	  1256	  1343	  1640	  2162
MCNTMC	   613#	  2597	  2599	  2601	  2603
MSG	   418#
POP	   394#	   994	  1009	  1024	  1044	  1059	  1074	  1089	  1141	  1192	  1205	  1229	  1268
	  1276	  1317	  1354	  1362	  1412	  1614	  1651	  1659	  2334	  2542
PUSH	   387#	   967	   986	  1001	  1016	  1036	  1051	  1066	  1081	  1130	  1169	  1243	  1257
	  1287	  1330	  1344	  1373	  1438	  1627	  1641	  1778	  2163	  2309	  2529
RET	   414#	  1325	  1369	  1685	  1720	  1731	  1816	  1831	  2203	  2340	  2355	  2374	  2384
	  2400	  2416	  2427	  2465	  2471	  2474	  2477	  2480	  2519	  2548	  2581
RIBFMC	   493#	  2857	  2859	  2861	  2863
ROBFMC	   497#	  2869	  2871	  2873	  2875
RPROC	   457#	   675	   696	   717	   738	   760	   781
RSTAMC	   539#	  2673	  2695	  2717	  2739
RSTRMC	   509#	  2893	  2895	  2897	  2899
RSYM	   470#	   802
SRALMC	   441#	   691	   712	   733	   754	   776	   797
SRTYMC	   427#	   681	   702	   723	   744	   766	   787
STCGMC	   448#	   821	   842	   863	   884	   905	   926
STTYMC	   434#	   811	   832	   853	   874	   895	   916
TIBFMC	   501#	  2881	  2883	  2885	  2887
TOBFMC	   505#	  3120
TPROC	   474#	   805	   826	   847	   868	   889	   910
TSTAMC	   562#	  2765	  2787	  2809	  2831
TSTRMC	   513#	  2905	  2907	  2909	  2911
TSYM	   487#	   931
UNMASK	   406#	  1267	  1353	  1650
VALCRE	   520#	  2593	  2605	  2657	  2669	  2761	  2853	  2865	  2877	  2889	  2901
