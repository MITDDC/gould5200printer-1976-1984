TITLE FONT LOADER

.MLLIT==1
.FASL
IF1, .INSRT SYS:.FASL DEFS

COMMENT $ FORMAT OF FONT IN ARRAY

WORDS 0-177
	WORD N HAS INDEX IN ARRAY OF CHARACTER DATA FOR ASCII CODE N,
	OR ZERO IF THAT CHARACTER NOT IN THE FONT.

WORD 200
	HEIGHT OF CHARACTERS

WORD 201
	BASE LINE (MEASURED FROM TOP)

OTHER WORDS ARE POINTED TO BY THE POINTERS IN WORDS 0-177.
THE DATA POINTED TO IS:
	LEFT KERN, ADJUSTED BY CPA
	# WORDS PER LINE
	CHARACTER WIDTH IN BITS
	<# WORDS PER LINE>*<HEIGHT> WORDS OF DATA, 32. BITS LEFT-JUSTIFIED
$

COMMENT $ MIT FONT FORMAT

WORDS 0-1
	KSTID
	BYTE (9) COLUMN_POSITION_ADJUSTMENT,BASE_LINE (18) HEIGHT
			;base line # rasters from top of character matrix
REMAINDER OF FILE:  ONE BLOCK OF DATA FOR EACH CHARACTER
	USER_ID
			;NOT USED 4/10/74 but LOW ORDER BIT MUST BE 1
	LEFT_KERN,,CODE
			;Left Kern = amount to move left from the
			;Logical left end of the character to the left edge
			;of the raster.  + means move left, - move right.
			;left kern always 0 for CMU
	RASTER_WIDTH,,CHARACTER_WIDTH
			;raster width always 0 for CMU
			;Character Width = amount that the line bit position
			;is increased by printing the character.
	CHARACTER_MATRIX
			;the matrix is stored 4 8-bit bytes per word so that
			;ILDB with 8-bit byte size gets successive bytes.
			;The bits are bit reversed in each byte (high order
			;bit of character in low order bit of byte).
			;the matrix is stored row by row.
$

.ENTRY LOADFONT SUBR 0002	;SUBR 1
	MOVEI B,NIL
	CALL 2,.FUNCTION MERGEF 	;MERGE GIVEN NAME WITH DEFAULTS
	PUSHJ P,FIL6BT			;CONVERT TO FOUR SIXBIT WORDS
	MOVE TT,-3(FXP)
	PUSHJ P,ALFILE			;ALLOCATE AN I/O CHANNEL
	 JRST LOADF8
	.CALL [ SETZ
		SIXBIT \OPEN\
		  5000,,6		;IMAGE BLOCK INPUT
		      ,,F		;CHANNEL NUMBER
		      ,,-3(FXP)		;DEVICE
		      ,,-1(FXP)		;FILE NAME 1
		      ,,0(FXP)		;FILE NAME 2
		400000,,-2(FXP) ]	;SNAME
	 IOJRST 0,LOADF9
	SUB FXP,[4,,4]
	LOCKI
	MOVE TT,TTSAR(A)
	.CALL [ SETZ
		SIXBIT \RCHST\		;READ CHANNEL STATUS
		      ,,F		;CHANNEL NUMBER
		  2000,,F.RDEV(TT)	;DEVICE NAME
		  2000,,F.RFN1(TT)	;FILE NAME 1
		  2000,,F.RFN2(TT)	;FILE NAME 2
		402000,,F.RSNM(TT) ]	;SNAME
	 .VALUE
	UNLOCKI
	.CALL [ SETZ
		SIXBIT \FILLEN\		;FILE LENGTH
		      ,,F		;CHANNEL NUMBER
		402000,,TT	]	;LENGTH OF FILE
	 .VALUE
	PUSH P,A
	PUSH FXP,TT
	ADDI TT,1
	PUSH FXP,F
	PUSHJ P,MAKFXA
	LOCKI			;PUSHES 1 FXP WORD
	MOVE TT,TTSAR(A)
	MOVN D,-2(FXP)
	HRLI TT,(D)
	.CALL [ SETZ
		SIXBIT \IOT\
		      ,,-1(FXP)		;CHANNEL NUMBER
		400000,,TT	]	;IOT POINTER
	 .VALUE
	SETOM (TT)
	.CALL [ SETZ
		SIXBIT \CLOSE\		;CLOSE FILE
		400000,,0(FXP)	]	;CHANNEL NUMBER
	 .VALUE
	MOVSI TT,TTS.CL
	EXCH A,(P)
	IORM TT,TTSAR(A)
	UNLOCKI
	SUB FXP,[2,,2]
	MOVE A,(P)
	SETZ F,
	PUSHJ P,WDSGEN
	 AOS F
	 JFCL
	MOVEI TT,202(F)		;128. FOR PTRS, TWO FOR HEIGHT & BASELINE
	PUSHJ P,MAKFXA
	MOVEI B,(A)
	POP P,A
	MOVEI TT,1
	MOVE T,@TTSAR(A)
	MOVEI TT,200
	HRRZM T,@TTSAR(B)	;HEIGHT
	LSH T,-22
	ANDI T,777
	MOVEI TT,201
	MOVEM T,@TTSAR(B)	;BASELINE
	MOVEI F,202
	PUSHJ P,WDSGEN
	 PUSHJ P,[
		EXCH F,TT
		MOVEM T,@TTSAR(B)
		EXCH F,TT
		AOS F
		POPJ P,	]
	 PUSHJ P,[
		EXCH T,TT
		MOVEM F,@TTSAR(B)
		EXCH T,TT
		POPJ P,	]
	MOVEI A,(B)
	POPJ P,

LOADF8:	MOVEI C,[SIXBIT \NO I/O CHANNELS AVAILABLE!\]
LOADF9:	PUSHJ P,6BTNML
	CALL 1,.FUNCTION NCONS 
	MOVEI B,.ATOM LOADFONT 
	CALL 2,.FUNCTION XCONS 
	%IOL (C)

MAKFXA:	PUSH FXP,TT
	PUSH P,[MAKFX8]
	PUSH P,[NIL]
	PUSH P,[.ATOM FIXNUM ]
	MOVEI A,(FXP)
	PUSH P,A
	MOVNI T,3
	JCALL 16,.FUNCTION *ARRAY 
MAKFX8:	SUB FXP,[1,,1]
	POPJ P,

;;; TAKE FONT DATA ARRAY AND GENERATE WORDS OF DATA.
;;; TAKES TWO INSTRUCTIONS AFTER THE PUSHJ.
;;; THE FIRST IS EXECUTED FOR A CHARACTER DATA WORD.
;;; THESE ARE:
;;;	LEFT KERN, ADJUSTED BY CPA
;;;	# WORDS PER LINE
;;;	CHARACTER WIDTH IN BITS
;;;	<# WORDS PER LINE>*<HEIGHT> WORDS OF DATA, LEFT-JUST, 32. BITS
;;; THE SECOND IS EXECUTED AT THE START OF DATA FOR EACH CHARACTER,
;;; PASSING THE CHARACTER CODE.
;;; ALL ARGUMENTS TO THESE GUYS ARE PASSED IN T.  F MUST BE PRESERVED.

WDSGEN:	MOVEI TT,1		;IGNORE WORD 0 (KSTID)
	HRRZ T,@TTSAR(A)		;HEIGHT
	PUSH FXP,T
	LDB T,[331100,,@TTSAR(A)]	;CPA
	PUSH FXP,T
	MOVEI TT,2		;START OF CHARACTER DATA
WDSG1:	MOVE T,@TTSAR(A)	;USER CHAR ID
	TRNN T,1		;MUST BE ODD
	 .VALUE
;	 LERR [SIXBIT \BAD FONT FILE!\]
	AOJN T,WDSG2		;-1 MEANS END OF DATA
	POP P,T
	SUB FXP,[2,,2]
	JRST 2(T)

WDSG2:	ADDI TT,1
	HRRZ T,@TTSAR(A)	;CHARACTER CODE
	HRRZ D,(P)
	XCT 1(D)		;FEED OUT CHAR CODE
	HLRE T,@TTSAR(A)	;LEFT KERN
	ADD T,(FXP)		;ADD COL POS ADJ
	XCT @(P)
	ADDI TT,1
	HLRZ T,@TTSAR(A)	;RASTER WIDTH
	SKIPN T
	 HRRZ T,@TTSAR(A)	;DEFAULTS TO CHAR WIDTH
	PUSH FXP,T
	ADDI T,37
	LSH T,-5
	XCT @(P)		;NUMBER OF WORDS PER LINE
	HRRZ T,@TTSAR(A)	;CHARACTER WIDTH
	XCT @(P)
	ADDI TT,1
	POP FXP,C
	ADDI C,7
	LSH C,-3		;NUMBER OF 8-BIT BYTES PER LINE
	PUSH FXP,C
	HRRZ AR1,-2(FXP)	;HEIGHT
	MOVE AR2A,[441000,,@TTSAR(A)]
WDSG6:	HRRZ C,(FXP)		;BYTES PER LINE
WDSG3:	MOVEI T,10		;T ACCUMULATES BITS
WDSG3A:	TLNE AR2A,700000
	 JRST WDSG4
	TLO AR2A,440000
	ADDI TT,1
	MOVE R,@TTSAR(A)
	TRNE R,17
	 .VALUE
;	 LERR [SIXBIT \BAD FONT FILE!\]
WDSG4:	ILDB D,AR2A
	SETZ R,
	CIRC D,-10
	LSH T,10
	IORI T,(R)
	SOJLE C,[
		JUMPL T,WDSG5
		LSH T,10
		JUMPL T,WDSG5
		LSH T,10
		JUMPL T,WDSG5
		LSH T,10
		JUMPL T,WDSG5
		.VALUE	]
	JUMPGE T,WDSG3A
WDSG5:	LSH T,4
	XCT @(P)
	JUMPG C,WDSG3
	SOJG AR1,WDSG6
	ADDI TT,1
	SUB FXP,[1,,1]
	JRST WDSG1

FASEND
